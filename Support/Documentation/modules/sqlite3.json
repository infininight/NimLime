[
  {
    "name": "SQLITE_DETERMINISTIC", 
    "type": "skConst", 
    "code": "SQLITE_DETERMINISTIC* = 0x00000800"
  }, 
  {
    "name": "SQLITE_TRANSIENT", 
    "type": "skConst", 
    "code": "SQLITE_TRANSIENT* = cast[pointer](- 1)"
  }, 
  {
    "name": "Tcollation_needed_func", 
    "type": "skType", 
    "code": "Tcollation_needed_func* = proc (para1: pointer; para2: PSqlite3; \u000A                                eTextRep: int32; para4: cstring) {.cdecl.}"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "code": "proc close*(para1: PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A                                      importc: \"sqlite3_close\".}"
  }, 
  {
    "name": "exec", 
    "type": "skProc", 
    "code": "proc exec*(para1: PSqlite3; sql: cstring; para3: Tcallback; para4: pointer; \u000A           errmsg: var cstring): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_exec\".}"
  }, 
  {
    "name": "last_insert_rowid", 
    "type": "skProc", 
    "code": "proc last_insert_rowid*(para1: PSqlite3): int64 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_last_insert_rowid\".}"
  }, 
  {
    "name": "changes", 
    "type": "skProc", 
    "code": "proc changes*(para1: PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A                                        importc: \"sqlite3_changes\".}"
  }, 
  {
    "name": "total_changes", 
    "type": "skProc", 
    "code": "proc total_changes*(para1: PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_total_changes\".}"
  }, 
  {
    "name": "interrupt", 
    "type": "skProc", 
    "code": "proc interrupt*(para1: PSqlite3) {.cdecl, dynlib: Lib, \u000A                                   importc: \"sqlite3_interrupt\".}"
  }, 
  {
    "name": "complete", 
    "type": "skProc", 
    "code": "proc complete*(sql: cstring): int32 {.cdecl, dynlib: Lib, \u000A                                      importc: \"sqlite3_complete\".}"
  }, 
  {
    "name": "complete16", 
    "type": "skProc", 
    "code": "proc complete16*(sql: pointer): int32 {.cdecl, dynlib: Lib, \u000A                                        importc: \"sqlite3_complete16\".}"
  }, 
  {
    "name": "busy_handler", 
    "type": "skProc", 
    "code": "proc busy_handler*(para1: PSqlite3; \u000A                   para2: proc (para1: pointer; para2: int32): int32 {.cdecl.}; \u000A                   para3: pointer): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_busy_handler\".}"
  }, 
  {
    "name": "busy_timeout", 
    "type": "skProc", 
    "code": "proc busy_timeout*(para1: PSqlite3; ms: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_busy_timeout\".}"
  }, 
  {
    "name": "get_table", 
    "type": "skProc", 
    "code": "proc get_table*(para1: PSqlite3; sql: cstring; resultp: var cstringArray; \u000A                nrow, ncolumn: var cint; errmsg: ptr cstring): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_get_table\".}"
  }, 
  {
    "name": "free_table", 
    "type": "skProc", 
    "code": "proc free_table*(result: cstringArray) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_free_table\".}"
  }, 
  {
    "name": "mprintf", 
    "type": "skProc", 
    "code": "proc mprintf*(para1: cstring): cstring {.cdecl, varargs, dynlib: Lib, \u000A    importc: \"sqlite3_mprintf\".}"
  }, 
  {
    "name": "free", 
    "type": "skProc", 
    "code": "proc free*(z: cstring) {.cdecl, dynlib: Lib, importc: \"sqlite3_free\".}"
  }, 
  {
    "name": "snprintf", 
    "type": "skProc", 
    "code": "proc snprintf*(para1: int32; para2: cstring; para3: cstring): cstring {.cdecl, \u000A    dynlib: Lib, varargs, importc: \"sqlite3_snprintf\".}"
  }, 
  {
    "name": "set_authorizer", 
    "type": "skProc", 
    "code": "proc set_authorizer*(para1: PSqlite3; xAuth: proc (para1: pointer; para2: int32; \u000A    para3: cstring; para4: cstring; para5: cstring; para6: cstring): int32 {.\u000A    cdecl.}; pUserData: pointer): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_set_authorizer\".}"
  }, 
  {
    "name": "trace", 
    "type": "skProc", 
    "code": "proc trace*(para1: PSqlite3; \u000A            xTrace: proc (para1: pointer; para2: cstring) {.cdecl.}; \u000A            para3: pointer): pointer {.cdecl, dynlib: Lib, \u000A                                       importc: \"sqlite3_trace\".}"
  }, 
  {
    "name": "progress_handler", 
    "type": "skProc", 
    "code": "proc progress_handler*(para1: PSqlite3; para2: int32; \u000A                       para3: proc (para1: pointer): int32 {.cdecl.}; \u000A                       para4: pointer) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_progress_handler\".}"
  }, 
  {
    "name": "commit_hook", 
    "type": "skProc", 
    "code": "proc commit_hook*(para1: PSqlite3; para2: proc (para1: pointer): int32 {.cdecl.}; \u000A                  para3: pointer): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_commit_hook\".}"
  }, 
  {
    "name": "open", 
    "type": "skProc", 
    "code": "proc open*(filename: cstring; ppDb: var PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_open\".}"
  }, 
  {
    "name": "open16", 
    "type": "skProc", 
    "code": "proc open16*(filename: pointer; ppDb: var PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_open16\".}"
  }, 
  {
    "name": "errcode", 
    "type": "skProc", 
    "code": "proc errcode*(db: PSqlite3): int32 {.cdecl, dynlib: Lib, \u000A                                     importc: \"sqlite3_errcode\".}"
  }, 
  {
    "name": "errmsg", 
    "type": "skProc", 
    "code": "proc errmsg*(para1: PSqlite3): cstring {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_errmsg\".}"
  }, 
  {
    "name": "errmsg16", 
    "type": "skProc", 
    "code": "proc errmsg16*(para1: PSqlite3): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_errmsg16\".}"
  }, 
  {
    "name": "prepare", 
    "type": "skProc", 
    "code": "proc prepare*(db: PSqlite3; zSql: cstring; nBytes: int32; ppStmt: var Pstmt; \u000A              pzTail: ptr cstring): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_prepare\".}"
  }, 
  {
    "name": "prepare_v2", 
    "type": "skProc", 
    "code": "proc prepare_v2*(db: PSqlite3; zSql: cstring; nByte: cint; ppStmt: var Pstmt; \u000A                 pzTail: ptr cstring): cint {.importc: \"sqlite3_prepare_v2\", \u000A    cdecl, dynlib: Lib.}"
  }, 
  {
    "name": "prepare16", 
    "type": "skProc", 
    "code": "proc prepare16*(db: PSqlite3; zSql: pointer; nBytes: int32; ppStmt: var Pstmt; \u000A                pzTail: var pointer): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_prepare16\".}"
  }, 
  {
    "name": "bind_blob", 
    "type": "skProc", 
    "code": "proc bind_blob*(para1: Pstmt; para2: int32; para3: pointer; n: int32; \u000A                para5: Tbind_destructor_func): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_blob\".}"
  }, 
  {
    "name": "bind_double", 
    "type": "skProc", 
    "code": "proc bind_double*(para1: Pstmt; para2: int32; para3: float64): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_bind_double\".}"
  }, 
  {
    "name": "bind_int", 
    "type": "skProc", 
    "code": "proc bind_int*(para1: Pstmt; para2: int32; para3: int32): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_bind_int\".}"
  }, 
  {
    "name": "bind_int64", 
    "type": "skProc", 
    "code": "proc bind_int64*(para1: Pstmt; para2: int32; para3: int64): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_bind_int64\".}"
  }, 
  {
    "name": "bind_null", 
    "type": "skProc", 
    "code": "proc bind_null*(para1: Pstmt; para2: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_null\".}"
  }, 
  {
    "name": "bind_text", 
    "type": "skProc", 
    "code": "proc bind_text*(para1: Pstmt; para2: int32; para3: cstring; n: int32; \u000A                para5: Tbind_destructor_func): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_text\".}"
  }, 
  {
    "name": "bind_text16", 
    "type": "skProc", 
    "code": "proc bind_text16*(para1: Pstmt; para2: int32; para3: pointer; para4: int32; \u000A                  para5: Tbind_destructor_func): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_text16\".}"
  }, 
  {
    "name": "bind_blob", 
    "type": "skProc", 
    "code": "proc bind_blob*(para1: Pstmt; para2: int32; para3: pointer; n: int32; \u000A                para5: int32): int32 {.cdecl, dynlib: Lib, \u000A                                       importc: \"sqlite3_bind_blob\".}"
  }, 
  {
    "name": "bind_text", 
    "type": "skProc", 
    "code": "proc bind_text*(para1: Pstmt; para2: int32; para3: cstring; n: int32; \u000A                para5: int32): int32 {.cdecl, dynlib: Lib, \u000A                                       importc: \"sqlite3_bind_text\".}"
  }, 
  {
    "name": "bind_text16", 
    "type": "skProc", 
    "code": "proc bind_text16*(para1: Pstmt; para2: int32; para3: pointer; para4: int32; \u000A                  para5: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_text16\".}"
  }, 
  {
    "name": "bind_parameter_count", 
    "type": "skProc", 
    "code": "proc bind_parameter_count*(para1: Pstmt): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_bind_parameter_count\".}"
  }, 
  {
    "name": "bind_parameter_name", 
    "type": "skProc", 
    "code": "proc bind_parameter_name*(para1: Pstmt; para2: int32): cstring {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_bind_parameter_name\".}"
  }, 
  {
    "name": "bind_parameter_index", 
    "type": "skProc", 
    "code": "proc bind_parameter_index*(para1: Pstmt; zName: cstring): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_bind_parameter_index\".}"
  }, 
  {
    "name": "column_count", 
    "type": "skProc", 
    "code": "proc column_count*(pStmt: Pstmt): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_count\".}"
  }, 
  {
    "name": "column_name", 
    "type": "skProc", 
    "code": "proc column_name*(para1: Pstmt; para2: int32): cstring {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_name\".}"
  }, 
  {
    "name": "column_name16", 
    "type": "skProc", 
    "code": "proc column_name16*(para1: Pstmt; para2: int32): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_name16\".}"
  }, 
  {
    "name": "column_decltype", 
    "type": "skProc", 
    "code": "proc column_decltype*(para1: Pstmt; i: int32): cstring {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_decltype\".}"
  }, 
  {
    "name": "column_decltype16", 
    "type": "skProc", 
    "code": "proc column_decltype16*(para1: Pstmt; para2: int32): pointer {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_column_decltype16\".}"
  }, 
  {
    "name": "step", 
    "type": "skProc", 
    "code": "proc step*(para1: Pstmt): int32 {.cdecl, dynlib: Lib, importc: \"sqlite3_step\".}"
  }, 
  {
    "name": "data_count", 
    "type": "skProc", 
    "code": "proc data_count*(pStmt: Pstmt): int32 {.cdecl, dynlib: Lib, \u000A                                        importc: \"sqlite3_data_count\".}"
  }, 
  {
    "name": "column_blob", 
    "type": "skProc", 
    "code": "proc column_blob*(para1: Pstmt; iCol: int32): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_blob\".}"
  }, 
  {
    "name": "column_bytes", 
    "type": "skProc", 
    "code": "proc column_bytes*(para1: Pstmt; iCol: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_bytes\".}"
  }, 
  {
    "name": "column_bytes16", 
    "type": "skProc", 
    "code": "proc column_bytes16*(para1: Pstmt; iCol: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_bytes16\".}"
  }, 
  {
    "name": "column_double", 
    "type": "skProc", 
    "code": "proc column_double*(para1: Pstmt; iCol: int32): float64 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_double\".}"
  }, 
  {
    "name": "column_int", 
    "type": "skProc", 
    "code": "proc column_int*(para1: Pstmt; iCol: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_int\".}"
  }, 
  {
    "name": "column_int64", 
    "type": "skProc", 
    "code": "proc column_int64*(para1: Pstmt; iCol: int32): int64 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_int64\".}"
  }, 
  {
    "name": "column_text", 
    "type": "skProc", 
    "code": "proc column_text*(para1: Pstmt; iCol: int32): cstring {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_text\".}"
  }, 
  {
    "name": "column_text16", 
    "type": "skProc", 
    "code": "proc column_text16*(para1: Pstmt; iCol: int32): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_text16\".}"
  }, 
  {
    "name": "column_type", 
    "type": "skProc", 
    "code": "proc column_type*(para1: Pstmt; iCol: int32): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_column_type\".}"
  }, 
  {
    "name": "finalize", 
    "type": "skProc", 
    "code": "proc finalize*(pStmt: Pstmt): int32 {.cdecl, dynlib: Lib, \u000A                                      importc: \"sqlite3_finalize\".}"
  }, 
  {
    "name": "reset", 
    "type": "skProc", 
    "code": "proc reset*(pStmt: Pstmt): int32 {.cdecl, dynlib: Lib, importc: \"sqlite3_reset\".}"
  }, 
  {
    "name": "create_function", 
    "type": "skProc", 
    "code": "proc create_function*(para1: PSqlite3; zFunctionName: cstring; nArg: int32; \u000A                      eTextRep: int32; para5: pointer; \u000A                      xFunc: Tcreate_function_func_func; \u000A                      xStep: Tcreate_function_step_func; \u000A                      xFinal: Tcreate_function_final_func): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_create_function\".}"
  }, 
  {
    "name": "create_function16", 
    "type": "skProc", 
    "code": "proc create_function16*(para1: PSqlite3; zFunctionName: pointer; nArg: int32; \u000A                        eTextRep: int32; para5: pointer; \u000A                        xFunc: Tcreate_function_func_func; \u000A                        xStep: Tcreate_function_step_func; \u000A                        xFinal: Tcreate_function_final_func): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_create_function16\".}"
  }, 
  {
    "name": "aggregate_count", 
    "type": "skProc", 
    "code": "proc aggregate_count*(para1: Pcontext): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_aggregate_count\".}"
  }, 
  {
    "name": "value_blob", 
    "type": "skProc", 
    "code": "proc value_blob*(para1: Pvalue): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_blob\".}"
  }, 
  {
    "name": "value_bytes", 
    "type": "skProc", 
    "code": "proc value_bytes*(para1: Pvalue): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_bytes\".}"
  }, 
  {
    "name": "value_bytes16", 
    "type": "skProc", 
    "code": "proc value_bytes16*(para1: Pvalue): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_bytes16\".}"
  }, 
  {
    "name": "value_double", 
    "type": "skProc", 
    "code": "proc value_double*(para1: Pvalue): float64 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_double\".}"
  }, 
  {
    "name": "value_int", 
    "type": "skProc", 
    "code": "proc value_int*(para1: Pvalue): int32 {.cdecl, dynlib: Lib, \u000A                                        importc: \"sqlite3_value_int\".}"
  }, 
  {
    "name": "value_int64", 
    "type": "skProc", 
    "code": "proc value_int64*(para1: Pvalue): int64 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_int64\".}"
  }, 
  {
    "name": "value_text", 
    "type": "skProc", 
    "code": "proc value_text*(para1: Pvalue): cstring {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_text\".}"
  }, 
  {
    "name": "value_text16", 
    "type": "skProc", 
    "code": "proc value_text16*(para1: Pvalue): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_text16\".}"
  }, 
  {
    "name": "value_text16le", 
    "type": "skProc", 
    "code": "proc value_text16le*(para1: Pvalue): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_text16le\".}"
  }, 
  {
    "name": "value_text16be", 
    "type": "skProc", 
    "code": "proc value_text16be*(para1: Pvalue): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_text16be\".}"
  }, 
  {
    "name": "value_type", 
    "type": "skProc", 
    "code": "proc value_type*(para1: Pvalue): int32 {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_value_type\".}"
  }, 
  {
    "name": "aggregate_context", 
    "type": "skProc", 
    "code": "proc aggregate_context*(para1: Pcontext; nBytes: int32): pointer {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_aggregate_context\".}"
  }, 
  {
    "name": "user_data", 
    "type": "skProc", 
    "code": "proc user_data*(para1: Pcontext): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_user_data\".}"
  }, 
  {
    "name": "get_auxdata", 
    "type": "skProc", 
    "code": "proc get_auxdata*(para1: Pcontext; para2: int32): pointer {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_get_auxdata\".}"
  }, 
  {
    "name": "set_auxdata", 
    "type": "skProc", 
    "code": "proc set_auxdata*(para1: Pcontext; para2: int32; para3: pointer; \u000A                  para4: proc (para1: pointer) {.cdecl.}) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_set_auxdata\".}"
  }, 
  {
    "name": "result_blob", 
    "type": "skProc", 
    "code": "proc result_blob*(para1: Pcontext; para2: pointer; para3: int32; \u000A                  para4: Tresult_func) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_blob\".}"
  }, 
  {
    "name": "result_double", 
    "type": "skProc", 
    "code": "proc result_double*(para1: Pcontext; para2: float64) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_double\".}"
  }, 
  {
    "name": "result_error", 
    "type": "skProc", 
    "code": "proc result_error*(para1: Pcontext; para2: cstring; para3: int32) {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_result_error\".}"
  }, 
  {
    "name": "result_error16", 
    "type": "skProc", 
    "code": "proc result_error16*(para1: Pcontext; para2: pointer; para3: int32) {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_result_error16\".}"
  }, 
  {
    "name": "result_int", 
    "type": "skProc", 
    "code": "proc result_int*(para1: Pcontext; para2: int32) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_int\".}"
  }, 
  {
    "name": "result_int64", 
    "type": "skProc", 
    "code": "proc result_int64*(para1: Pcontext; para2: int64) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_int64\".}"
  }, 
  {
    "name": "result_null", 
    "type": "skProc", 
    "code": "proc result_null*(para1: Pcontext) {.cdecl, dynlib: Lib, \u000A                                     importc: \"sqlite3_result_null\".}"
  }, 
  {
    "name": "result_text", 
    "type": "skProc", 
    "code": "proc result_text*(para1: Pcontext; para2: cstring; para3: int32; \u000A                  para4: Tresult_func) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_text\".}"
  }, 
  {
    "name": "result_text16", 
    "type": "skProc", 
    "code": "proc result_text16*(para1: Pcontext; para2: pointer; para3: int32; \u000A                    para4: Tresult_func) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_text16\".}"
  }, 
  {
    "name": "result_text16le", 
    "type": "skProc", 
    "code": "proc result_text16le*(para1: Pcontext; para2: pointer; para3: int32; \u000A                      para4: Tresult_func) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_text16le\".}"
  }, 
  {
    "name": "result_text16be", 
    "type": "skProc", 
    "code": "proc result_text16be*(para1: Pcontext; para2: pointer; para3: int32; \u000A                      para4: Tresult_func) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_text16be\".}"
  }, 
  {
    "name": "result_value", 
    "type": "skProc", 
    "code": "proc result_value*(para1: Pcontext; para2: Pvalue) {.cdecl, dynlib: Lib, \u000A    importc: \"sqlite3_result_value\".}"
  }, 
  {
    "name": "create_collation", 
    "type": "skProc", 
    "code": "proc create_collation*(para1: PSqlite3; zName: cstring; eTextRep: int32; \u000A                       para4: pointer; xCompare: Tcreate_collation_func): int32 {.\u000A    cdecl, dynlib: Lib, importc: \"sqlite3_create_collation\".}"
  }, 
  {
    "name": "create_collation16", 
    "type": "skProc", 
    "code": "proc create_collation16*(para1: PSqlite3; zName: cstring; eTextRep: int32; \u000A                         para4: pointer; xCompare: Tcreate_collation_func): int32 {.\u000A    cdecl, dynlib: Lib, importc: \"sqlite3_create_collation16\".}"
  }, 
  {
    "name": "collation_needed", 
    "type": "skProc", 
    "code": "proc collation_needed*(para1: PSqlite3; para2: pointer; \u000A                       para3: Tcollation_needed_func): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_collation_needed\".}"
  }, 
  {
    "name": "collation_needed16", 
    "type": "skProc", 
    "code": "proc collation_needed16*(para1: PSqlite3; para2: pointer; \u000A                         para3: Tcollation_needed_func): int32 {.cdecl, \u000A    dynlib: Lib, importc: \"sqlite3_collation_needed16\".}"
  }, 
  {
    "name": "libversion", 
    "type": "skProc", 
    "code": "proc libversion*(): cstring {.cdecl, dynlib: Lib, importc: \"sqlite3_libversion\".}"
  }, 
  {
    "name": "version", 
    "type": "skProc", 
    "code": "proc version*(): cstring {.cdecl, dynlib: Lib, importc: \"sqlite3_libversion\".}"
  }, 
  {
    "name": "libversion_number", 
    "type": "skProc", 
    "code": "proc libversion_number*(): int32 {.cdecl, dynlib: Lib, \u000A                                   importc: \"sqlite3_libversion_number\".}"
  }
]