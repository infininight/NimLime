[
  {
    "comment": "This module contains Nim's support for locks and condition vars."
  }, 
  {
    "name": "ReleaseEffect", 
    "type": "skType", 
    "description": "\u000Aeffect that denotes that some lock is released. Deprecated, do not use anymore!", 
    "code": "ReleaseEffect* {.deprecated.} = object of LockEffect"
  }, 
  {
    "name": "initLock", 
    "type": "skProc", 
    "description": "Initializes the given lock.", 
    "code": "proc initLock*(lock: var TLock) {.inline.}"
  }, 
  {
    "name": "deinitLock", 
    "type": "skProc", 
    "description": "Frees the resources associated with the lock.", 
    "code": "proc deinitLock*(lock: var TLock) {.inline.}"
  }, 
  {
    "name": "tryAcquire", 
    "type": "skProc", 
    "description": "Tries to acquire the given lock. Returns <cite>true</cite> on success.", 
    "code": "proc tryAcquire*(lock: var TLock): bool"
  }, 
  {
    "name": "acquire", 
    "type": "skProc", 
    "description": "Acquires the given lock.", 
    "code": "proc acquire*(lock: var TLock)"
  }, 
  {
    "name": "release", 
    "type": "skProc", 
    "description": "Releases the given lock.", 
    "code": "proc release*(lock: var TLock)"
  }, 
  {
    "name": "initCond", 
    "type": "skProc", 
    "description": "Initializes the given condition variable.", 
    "code": "proc initCond*(cond: var TCond) {.inline.}"
  }, 
  {
    "name": "deinitCond", 
    "type": "skProc", 
    "description": "Frees the resources associated with the lock.", 
    "code": "proc deinitCond*(cond: var TCond) {.inline.}"
  }, 
  {
    "name": "wait", 
    "type": "skProc", 
    "description": "waits on the condition variable <cite>cond</cite>. ", 
    "code": "proc wait*(cond: var TCond; lock: var TLock) {.inline.}"
  }, 
  {
    "name": "signal", 
    "type": "skProc", 
    "description": "sends a signal to the condition variable <cite>cond</cite>. ", 
    "code": "proc signal*(cond: var TCond) {.inline.}"
  }
]