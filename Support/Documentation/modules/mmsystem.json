[
  {
    "name": "LPUINT", 
    "type": "skType", 
    "code": "LPUINT* = ptr uint32"
  }, 
  {
    "name": "CALLBACK_FUNCTION", 
    "type": "skConst", 
    "code": "CALLBACK_FUNCTION* = 0x00030000"
  }, 
  {
    "name": "HDRVR", 
    "type": "skType", 
    "code": "HDRVR* = THandle"
  }, 
  {
    "name": "DRV_MCI_LAST", 
    "type": "skConst", 
    "code": "DRV_MCI_LAST* = (DRV_RESERVED + 0x00000FFF)"
  }, 
  {
    "name": "PDRVCALLBACK", 
    "type": "skType", 
    "code": "PDRVCALLBACK* = proc (hdrvr: THandle; uMsg: uint32; dwUser, dw1, dw2: DWORD) {.\u000A    stdcall.}"
  }, 
  {
    "name": "sndPlaySoundA", 
    "type": "skProc", 
    "code": "proc sndPlaySoundA*(Name: LPCSTR; flags: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"sndPlaySoundA\".}"
  }, 
  {
    "name": "sndPlaySoundW", 
    "type": "skProc", 
    "code": "proc sndPlaySoundW*(Name: LPCWSTR; flags: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"sndPlaySoundW\".}"
  }, 
  {
    "name": "sndPlaySound", 
    "type": "skProc", 
    "code": "proc sndPlaySound*(Name: cstring; flags: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"sndPlaySoundW\".}"
  }, 
  {
    "name": "MEVT_F_CALLBACK", 
    "type": "skConst", 
    "code": "MEVT_F_CALLBACK* = 0x40000000"
  }, 
  {
    "name": "MEVT_EVENTTYPE", 
    "type": "skProc", 
    "code": "proc MEVT_EVENTTYPE*(x: int8): int8"
  }, 
  {
    "name": "MEVT_EVENTPARM", 
    "type": "skProc", 
    "code": "proc MEVT_EVENTPARM*(x: DWORD): DWORD"
  }, 
  {
    "name": "MCI_FORMAT_TMSF", 
    "type": "skConst", 
    "code": "MCI_FORMAT_TMSF* = 10"
  }, 
  {
    "name": "MCI_MSF_MINUTE", 
    "type": "skProc", 
    "code": "proc MCI_MSF_MINUTE*(msf: int32): int8"
  }, 
  {
    "name": "MCI_MSF_SECOND", 
    "type": "skProc", 
    "code": "proc MCI_MSF_SECOND*(msf: int32): int8"
  }, 
  {
    "name": "MCI_MSF_FRAME", 
    "type": "skProc", 
    "code": "proc MCI_MSF_FRAME*(msf: int32): int8"
  }, 
  {
    "name": "MCI_MAKE_MSF", 
    "type": "skProc", 
    "code": "proc MCI_MAKE_MSF*(m, s, f: int8): int32"
  }, 
  {
    "name": "MCI_SET_AUDIO_RIGHT", 
    "type": "skConst", 
    "code": "MCI_SET_AUDIO_RIGHT* = 2"
  }, 
  {
    "name": "MCI_TMSF_TRACK", 
    "type": "skProc", 
    "code": "proc MCI_TMSF_TRACK*(tmsf: int32): int8"
  }, 
  {
    "name": "MCI_TMSF_MINUTE", 
    "type": "skProc", 
    "code": "proc MCI_TMSF_MINUTE*(tmsf: int32): int8"
  }, 
  {
    "name": "MCI_TMSF_SECOND", 
    "type": "skProc", 
    "code": "proc MCI_TMSF_SECOND*(tmsf: int32): int8"
  }, 
  {
    "name": "MCI_TMSF_FRAME", 
    "type": "skProc", 
    "code": "proc MCI_TMSF_FRAME*(tmsf: int32): int8"
  }, 
  {
    "name": "MCI_HMS_HOUR", 
    "type": "skProc", 
    "code": "proc MCI_HMS_HOUR*(h: int32): int8"
  }, 
  {
    "name": "MCI_HMS_MINUTE", 
    "type": "skProc", 
    "code": "proc MCI_HMS_MINUTE*(h: int32): int8"
  }, 
  {
    "name": "MCI_HMS_SECOND", 
    "type": "skProc", 
    "code": "proc MCI_HMS_SECOND*(h: int32): int8"
  }, 
  {
    "name": "MCI_MAKE_HMS", 
    "type": "skProc", 
    "code": "proc MCI_MAKE_HMS*(h, m, s: int8): int32"
  }, 
  {
    "name": "MCI_INFO_COPYRIGHT", 
    "type": "skConst", 
    "code": "MCI_INFO_COPYRIGHT* = 0x00002000"
  }, 
  {
    "name": "MCI_MAKE_TMSF", 
    "type": "skProc", 
    "code": "proc MCI_MAKE_TMSF*(t, m, s, f: int8): int32"
  }, 
  {
    "name": "SELECTDIB", 
    "type": "skConst", 
    "code": "SELECTDIB* = 41"
  }, 
  {
    "name": "DIBINDEX", 
    "type": "skProc", 
    "code": "proc DIBINDEX*(n: int32): int32"
  }, 
  {
    "name": "AUXCAPS_LRVOLUME", 
    "type": "skConst", 
    "code": "AUXCAPS_LRVOLUME* = 2"
  }, 
  {
    "name": "TWAVEOUTCAPSW", 
    "type": "skType", 
    "code": "TWAVEOUTCAPSW* = WAVEOUTCAPSW"
  }, 
  {
    "name": "LPWAVEOUTCAPS", 
    "type": "skType", 
    "code": "LPWAVEOUTCAPS* = LPWAVEOUTCAPSW"
  }, 
  {
    "name": "TWAVEINCAPSW", 
    "type": "skType", 
    "code": "TWAVEINCAPSW* = WAVEINCAPSW"
  }, 
  {
    "name": "LPWAVEINCAPS", 
    "type": "skType", 
    "code": "LPWAVEINCAPS* = LPWAVEINCAPSW"
  }, 
  {
    "name": "TWAVEFORMAT", 
    "type": "skType", 
    "code": "TWAVEFORMAT* = WAVEFORMAT"
  }, 
  {
    "name": "WAVE_FORMAT_PCM", 
    "type": "skConst", 
    "code": "WAVE_FORMAT_PCM* = 1"
  }, 
  {
    "name": "LPMIDICALLBACK", 
    "type": "skType", 
    "code": "LPMIDICALLBACK* = PDRVCALLBACK"
  }, 
  {
    "name": "MIDIPATCHSIZE", 
    "type": "skConst", 
    "code": "MIDIPATCHSIZE* = 128"
  }, 
  {
    "name": "TMIDIINCAPSW", 
    "type": "skType", 
    "code": "TMIDIINCAPSW* = MIDIINCAPSW"
  }, 
  {
    "name": "LPMIDIOUTCAPS", 
    "type": "skType", 
    "code": "LPMIDIOUTCAPS* = LPMIDIOUTCAPSW"
  }, 
  {
    "name": "TAUXCAPSW", 
    "type": "skType", 
    "code": "TAUXCAPSW* = AUXCAPSW"
  }, 
  {
    "name": "LPAUXCAPS", 
    "type": "skType", 
    "code": "LPAUXCAPS* = LPAUXCAPSW"
  }, 
  {
    "name": "LPHMIXER", 
    "type": "skType", 
    "code": "LPHMIXER* = ptr HMIXER"
  }, 
  {
    "name": "mixerGetNumDevs", 
    "type": "skProc", 
    "code": "proc mixerGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                  importc: \"mixerGetNumDevs\".}"
  }, 
  {
    "name": "TMIXERCAPSW", 
    "type": "skType", 
    "code": "TMIXERCAPSW* = MIXERCAPSW"
  }, 
  {
    "name": "LPMIXERCAPS", 
    "type": "skType", 
    "code": "LPMIXERCAPS* = LPMIXERCAPSW"
  }, 
  {
    "name": "LPMIXERLINEW", 
    "type": "skType", 
    "code": "LPMIXERLINEW* = ptr MIXERLINEW"
  }, 
  {
    "name": "LPMIXERLINE", 
    "type": "skType", 
    "code": "LPMIXERLINE* = LPMIXERLINEW"
  }, 
  {
    "name": "TMIXERCONTROLW", 
    "type": "skType", 
    "code": "TMIXERCONTROLW* = MIXERCONTROLW"
  }, 
  {
    "name": "LPMIXERCONTROL", 
    "type": "skType", 
    "code": "LPMIXERCONTROL* = LPMIXERCONTROLW"
  }, 
  {
    "name": "TMIXERLINECONTROLSW", 
    "type": "skType", 
    "code": "TMIXERLINECONTROLSW* = MIXERLINECONTROLSW"
  }, 
  {
    "name": "LPMIXERLINECONTROLS", 
    "type": "skType", 
    "code": "LPMIXERLINECONTROLS* = LPMIXERLINECONTROLSW"
  }, 
  {
    "name": "TMIXERCONTROLDETAILS_LISTTEXTW", 
    "type": "skType", 
    "code": "TMIXERCONTROLDETAILS_LISTTEXTW* = MIXERCONTROLDETAILS_LISTTEXTW"
  }, 
  {
    "name": "LPMIXERCONTROLDETAILS_LISTTEXT", 
    "type": "skType", 
    "code": "LPMIXERCONTROLDETAILS_LISTTEXT* = LPMIXERCONTROLDETAILS_LISTTEXTW"
  }, 
  {
    "name": "TJOYCAPSW", 
    "type": "skType", 
    "code": "TJOYCAPSW* = JOYCAPSW"
  }, 
  {
    "name": "LPJOYCAPS", 
    "type": "skType", 
    "code": "LPJOYCAPS* = LPJOYCAPSW"
  }, 
  {
    "name": "TMCI_OPEN_PARMSW", 
    "type": "skType", 
    "code": "TMCI_OPEN_PARMSW* = MCI_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_OPEN_PARMS", 
    "type": "skType", 
    "code": "LPMCI_OPEN_PARMS* = LPMCI_OPEN_PARMSW"
  }, 
  {
    "name": "TMCI_INFO_PARMSW", 
    "type": "skType", 
    "code": "TMCI_INFO_PARMSW* = MCI_INFO_PARMSW"
  }, 
  {
    "name": "LPMCI_INFO_PARMS", 
    "type": "skType", 
    "code": "LPMCI_INFO_PARMS* = LPMCI_INFO_PARMSW"
  }, 
  {
    "name": "TMCI_SYSINFO_PARMSW", 
    "type": "skType", 
    "code": "TMCI_SYSINFO_PARMSW* = MCI_SYSINFO_PARMSW"
  }, 
  {
    "name": "LPMCI_SYSINFO_PARMS", 
    "type": "skType", 
    "code": "LPMCI_SYSINFO_PARMS* = LPMCI_SYSINFO_PARMSW"
  }, 
  {
    "name": "TMCI_SAVE_PARMSW", 
    "type": "skType", 
    "code": "TMCI_SAVE_PARMSW* = MCI_SAVE_PARMSW"
  }, 
  {
    "name": "LPMCI_SAVE_PARMS", 
    "type": "skType", 
    "code": "LPMCI_SAVE_PARMS* = LPMCI_SAVE_PARMSW"
  }, 
  {
    "name": "TMCI_LOAD_PARMSW", 
    "type": "skType", 
    "code": "TMCI_LOAD_PARMSW* = MCI_LOAD_PARMSW"
  }, 
  {
    "name": "LPMCI_LOAD_PARMS", 
    "type": "skType", 
    "code": "LPMCI_LOAD_PARMS* = LPMCI_LOAD_PARMSW"
  }, 
  {
    "name": "TMCI_VD_ESCAPE_PARMSW", 
    "type": "skType", 
    "code": "TMCI_VD_ESCAPE_PARMSW* = MCI_VD_ESCAPE_PARMSW"
  }, 
  {
    "name": "LPMCI_VD_ESCAPE_PARMS", 
    "type": "skType", 
    "code": "LPMCI_VD_ESCAPE_PARMS* = LPMCI_VD_ESCAPE_PARMSW"
  }, 
  {
    "name": "TMCI_WAVE_OPEN_PARMSW", 
    "type": "skType", 
    "code": "TMCI_WAVE_OPEN_PARMSW* = MCI_WAVE_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_WAVE_OPEN_PARMS", 
    "type": "skType", 
    "code": "LPMCI_WAVE_OPEN_PARMS* = LPMCI_WAVE_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_ANIM_OPEN_PARMSW", 
    "type": "skType", 
    "code": "LPMCI_ANIM_OPEN_PARMSW* = ptr MCI_ANIM_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_ANIM_OPEN_PARMS", 
    "type": "skType", 
    "code": "LPMCI_ANIM_OPEN_PARMS* = LPMCI_ANIM_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_ANIM_PLAY_PARMS", 
    "type": "skType", 
    "code": "LPMCI_ANIM_PLAY_PARMS* = ptr MCI_ANIM_PLAY_PARMS"
  }, 
  {
    "name": "LPMCI_ANIM_WINDOW_PARMS", 
    "type": "skType", 
    "code": "LPMCI_ANIM_WINDOW_PARMS* = LPMCI_ANIM_WINDOW_PARMSW"
  }, 
  {
    "name": "TMCI_OVLY_OPEN_PARMSW", 
    "type": "skType", 
    "code": "TMCI_OVLY_OPEN_PARMSW* = MCI_OVLY_OPEN_PARMSW"
  }, 
  {
    "name": "LPMCI_OVLY_OPEN_PARMS", 
    "type": "skType", 
    "code": "LPMCI_OVLY_OPEN_PARMS* = LPMCI_OVLY_OPEN_PARMSW"
  }, 
  {
    "name": "TMCI_OVLY_WINDOW_PARMSW", 
    "type": "skType", 
    "code": "TMCI_OVLY_WINDOW_PARMSW* = MCI_OVLY_WINDOW_PARMSW"
  }, 
  {
    "name": "LPMCI_OVLY_WINDOW_PARMS", 
    "type": "skType", 
    "code": "LPMCI_OVLY_WINDOW_PARMS* = LPMCI_OVLY_WINDOW_PARMSW"
  }, 
  {
    "name": "TMCI_OVLY_SAVE_PARMSW", 
    "type": "skType", 
    "code": "TMCI_OVLY_SAVE_PARMSW* = MCI_OVLY_SAVE_PARMSW"
  }, 
  {
    "name": "LPMCI_OVLY_SAVE_PARMS", 
    "type": "skType", 
    "code": "LPMCI_OVLY_SAVE_PARMS* = LPMCI_OVLY_SAVE_PARMSW"
  }, 
  {
    "name": "TMCI_OVLY_LOAD_PARMSW", 
    "type": "skType", 
    "code": "TMCI_OVLY_LOAD_PARMSW* = MCI_OVLY_LOAD_PARMSW"
  }, 
  {
    "name": "LPMCI_OVLY_LOAD_PARMS", 
    "type": "skType", 
    "code": "LPMCI_OVLY_LOAD_PARMS* = LPMCI_OVLY_LOAD_PARMSW"
  }, 
  {
    "name": "TMCI_OVLY_LOAD_PARMS", 
    "type": "skType", 
    "code": "TMCI_OVLY_LOAD_PARMS* = MCI_OVLY_LOAD_PARMS"
  }, 
  {
    "name": "mmioStringToFOURCCA", 
    "type": "skProc", 
    "code": "proc mmioStringToFOURCCA*(x1: LPCSTR; x2: uint32): FOURCC {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioStringToFOURCCA\".}"
  }, 
  {
    "name": "mmioStringToFOURCCW", 
    "type": "skProc", 
    "code": "proc mmioStringToFOURCCW*(x1: LPCWSTR; x2: uint32): FOURCC {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioStringToFOURCCW\".}"
  }, 
  {
    "name": "mmioStringToFOURCC", 
    "type": "skProc", 
    "code": "proc mmioStringToFOURCC*(x1: cstring; x2: uint32): FOURCC {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioStringToFOURCCA\".}"
  }, 
  {
    "name": "mmioInstallIOProcA", 
    "type": "skProc", 
    "code": "proc mmioInstallIOProcA*(x1: FOURCC; x2: LPMMIOPROC; x3: DWORD): LPMMIOPROC {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioInstallIOProcA\".}"
  }, 
  {
    "name": "mmioInstallIOProcW", 
    "type": "skProc", 
    "code": "proc mmioInstallIOProcW*(x1: FOURCC; x2: LPMMIOPROC; x3: DWORD): LPMMIOPROC {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioInstallIOProcW\".}"
  }, 
  {
    "name": "mmioInstallIOProc", 
    "type": "skProc", 
    "code": "proc mmioInstallIOProc*(x1: FOURCC; x2: LPMMIOPROC; x3: DWORD): LPMMIOPROC {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioInstallIOProcA\".}"
  }, 
  {
    "name": "mmioOpenA", 
    "type": "skProc", 
    "code": "proc mmioOpenA*(x1: LPSTR; x2: LPMMIOINFO; x3: DWORD): HMMIO {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioOpenA\".}"
  }, 
  {
    "name": "mmioOpenW", 
    "type": "skProc", 
    "code": "proc mmioOpenW*(x1: LPWSTR; x2: LPMMIOINFO; x3: DWORD): HMMIO {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioOpenW\".}"
  }, 
  {
    "name": "mmioOpen", 
    "type": "skProc", 
    "code": "proc mmioOpen*(x1: cstring; x2: LPMMIOINFO; x3: DWORD): HMMIO {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioOpenA\".}"
  }, 
  {
    "name": "mmioRenameA", 
    "type": "skProc", 
    "code": "proc mmioRenameA*(x1: LPCSTR; x2: LPCSTR; x3: LPCMMIOINFO; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioRenameA\".}"
  }, 
  {
    "name": "mmioRenameW", 
    "type": "skProc", 
    "code": "proc mmioRenameW*(x1: LPCWSTR; x2: LPCWSTR; x3: LPCMMIOINFO; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioRenameW\".}"
  }, 
  {
    "name": "mmioRename", 
    "type": "skProc", 
    "code": "proc mmioRename*(x1: cstring; x2: cstring; x3: LPCMMIOINFO; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioRenameA\".}"
  }, 
  {
    "name": "mmioClose", 
    "type": "skProc", 
    "code": "proc mmioClose*(x1: HMMIO; x2: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mmioClose\".}"
  }, 
  {
    "name": "mmioRead", 
    "type": "skProc", 
    "code": "proc mmioRead*(x1: HMMIO; x2: HPSTR; x3: LONG): LONG {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioRead\".}"
  }, 
  {
    "name": "mmioWrite", 
    "type": "skProc", 
    "code": "proc mmioWrite*(x1: HMMIO; x2: cstring; x3: LONG): LONG {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioWrite\".}"
  }, 
  {
    "name": "mmioSeek", 
    "type": "skProc", 
    "code": "proc mmioSeek*(x1: HMMIO; x2: LONG; x3: WINT): LONG {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioSeek\".}"
  }, 
  {
    "name": "mmioGetInfo", 
    "type": "skProc", 
    "code": "proc mmioGetInfo*(x1: HMMIO; x2: LPMMIOINFO; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioGetInfo\".}"
  }, 
  {
    "name": "mmioSetInfo", 
    "type": "skProc", 
    "code": "proc mmioSetInfo*(x1: HMMIO; x2: LPCMMIOINFO; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioSetInfo\".}"
  }, 
  {
    "name": "mmioSetBuffer", 
    "type": "skProc", 
    "code": "proc mmioSetBuffer*(x1: HMMIO; x2: LPSTR; x3: LONG; x4: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioSetBuffer\".}"
  }, 
  {
    "name": "mmioFlush", 
    "type": "skProc", 
    "code": "proc mmioFlush*(x1: HMMIO; x2: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mmioFlush\".}"
  }, 
  {
    "name": "mmioAdvance", 
    "type": "skProc", 
    "code": "proc mmioAdvance*(x1: HMMIO; x2: LPMMIOINFO; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioAdvance\".}"
  }, 
  {
    "name": "mmioSendMessage", 
    "type": "skProc", 
    "code": "proc mmioSendMessage*(x1: HMMIO; x2: uint32; x3: LPARAM; x4: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioSendMessage\".}"
  }, 
  {
    "name": "mmioDescend", 
    "type": "skProc", 
    "code": "proc mmioDescend*(x1: HMMIO; x2: LPMMCKINFO; x3: PMMCKINFO; x4: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioDescend\".}"
  }, 
  {
    "name": "mmioAscend", 
    "type": "skProc", 
    "code": "proc mmioAscend*(x1: HMMIO; x2: LPMMCKINFO; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mmioAscend\".}"
  }, 
  {
    "name": "mmioCreateChunk", 
    "type": "skProc", 
    "code": "proc mmioCreateChunk*(x1: HMMIO; x2: LPMMCKINFO; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mmioCreateChunk\".}"
  }, 
  {
    "name": "mciSendCommandA", 
    "type": "skProc", 
    "code": "proc mciSendCommandA*(x1: MCIDEVICEID; x2: uint32; x3: DWORD; x4: DWORD): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendCommandA\".}"
  }, 
  {
    "name": "mciSendCommandW", 
    "type": "skProc", 
    "code": "proc mciSendCommandW*(x1: MCIDEVICEID; x2: uint32; x3: DWORD; x4: DWORD): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendCommandW\".}"
  }, 
  {
    "name": "mciSendCommand", 
    "type": "skProc", 
    "code": "proc mciSendCommand*(x1: MCIDEVICEID; x2: uint32; x3: DWORD; x4: DWORD): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendCommandA\".}"
  }, 
  {
    "name": "mciSendStringA", 
    "type": "skProc", 
    "code": "proc mciSendStringA*(x1: LPCSTR; x2: LPSTR; x3: uint32; x4: HWND): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendStringA\".}"
  }, 
  {
    "name": "mciSendStringW", 
    "type": "skProc", 
    "code": "proc mciSendStringW*(x1: LPCWSTR; x2: LPWSTR; x3: uint32; x4: HWND): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendStringW\".}"
  }, 
  {
    "name": "mciSendString", 
    "type": "skProc", 
    "code": "proc mciSendString*(x1: cstring; x2: cstring; x3: uint32; x4: HWND): MCIERROR {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSendStringA\".}"
  }, 
  {
    "name": "mciGetDeviceIDA", 
    "type": "skProc", 
    "code": "proc mciGetDeviceIDA*(x1: LPCSTR): MCIDEVICEID {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mciGetDeviceIDA\".}"
  }, 
  {
    "name": "mciGetDeviceIDW", 
    "type": "skProc", 
    "code": "proc mciGetDeviceIDW*(x1: LPCWSTR): MCIDEVICEID {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mciGetDeviceIDW\".}"
  }, 
  {
    "name": "mciGetDeviceID", 
    "type": "skProc", 
    "code": "proc mciGetDeviceID*(x1: cstring): MCIDEVICEID {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mciGetDeviceIDA\".}"
  }, 
  {
    "name": "mciGetDeviceIDFromElementIDA", 
    "type": "skProc", 
    "code": "proc mciGetDeviceIDFromElementIDA*(x1: DWORD; x2: LPCSTR): MCIDEVICEID {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciGetDeviceIDFromElementIDA\".}"
  }, 
  {
    "name": "mciGetDeviceIDFromElementIDW", 
    "type": "skProc", 
    "code": "proc mciGetDeviceIDFromElementIDW*(x1: DWORD; x2: LPCWSTR): MCIDEVICEID {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciGetDeviceIDFromElementIDW\".}"
  }, 
  {
    "name": "mciGetDeviceIDFromElementID", 
    "type": "skProc", 
    "code": "proc mciGetDeviceIDFromElementID*(x1: DWORD; x2: cstring): MCIDEVICEID {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciGetDeviceIDFromElementIDA\".}"
  }, 
  {
    "name": "mciGetErrorStringA", 
    "type": "skProc", 
    "code": "proc mciGetErrorStringA*(x1: MCIERROR; x2: LPSTR; x3: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mciGetErrorStringA\".}"
  }, 
  {
    "name": "mciGetErrorStringW", 
    "type": "skProc", 
    "code": "proc mciGetErrorStringW*(x1: MCIERROR; x2: LPWSTR; x3: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mciGetErrorStringW\".}"
  }, 
  {
    "name": "mciGetErrorString", 
    "type": "skProc", 
    "code": "proc mciGetErrorString*(x1: MCIERROR; x2: cstring; x3: uint32): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mciGetErrorStringA\".}"
  }, 
  {
    "name": "mciSetYieldProc", 
    "type": "skProc", 
    "code": "proc mciSetYieldProc*(x1: MCIDEVICEID; x2: YIELDPROC; x3: DWORD): bool {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mciSetYieldProc\".}"
  }, 
  {
    "name": "mciGetCreatorTask", 
    "type": "skProc", 
    "code": "proc mciGetCreatorTask*(x1: MCIDEVICEID): HTASK {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mciGetCreatorTask\".}"
  }, 
  {
    "name": "mciGetYieldProc", 
    "type": "skProc", 
    "code": "proc mciGetYieldProc*(x1: MCIDEVICEID; x2: LPDWORD): YIELDPROC {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mciGetYieldProc\".}"
  }, 
  {
    "name": "mciExecute", 
    "type": "skProc", 
    "code": "proc mciExecute*(x1: LPCSTR): bool {.stdcall, dynlib: \"winmm.dll\", \u000A                                     importc: \"mciExecute\".}"
  }, 
  {
    "name": "joyGetPos", 
    "type": "skProc", 
    "code": "proc joyGetPos*(x1: uint32; x2: LPJOYINFO): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"joyGetPos\".}"
  }, 
  {
    "name": "joyGetPosEx", 
    "type": "skProc", 
    "code": "proc joyGetPosEx*(x1: uint32; x2: LPJOYINFOEX): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"joyGetPosEx\".}"
  }, 
  {
    "name": "joyGetThreshold", 
    "type": "skProc", 
    "code": "proc joyGetThreshold*(x1: uint32; x2: LPUINT): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"joyGetThreshold\".}"
  }, 
  {
    "name": "joyReleaseCapture", 
    "type": "skProc", 
    "code": "proc joyReleaseCapture*(x1: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"joyReleaseCapture\".}"
  }, 
  {
    "name": "joySetCapture", 
    "type": "skProc", 
    "code": "proc joySetCapture*(x1: HWND; x2: uint32; x3: uint32; x4: bool): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"joySetCapture\".}"
  }, 
  {
    "name": "joySetThreshold", 
    "type": "skProc", 
    "code": "proc joySetThreshold*(x1: uint32; x2: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"joySetThreshold\".}"
  }, 
  {
    "name": "waveOutGetNumDevs", 
    "type": "skProc", 
    "code": "proc waveOutGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                    importc: \"waveOutGetNumDevs\".}"
  }, 
  {
    "name": "waveOutGetDevCapsA", 
    "type": "skProc", 
    "code": "proc waveOutGetDevCapsA*(x1: uint32; x2: LPWAVEOUTCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetDevCapsA\".}"
  }, 
  {
    "name": "waveOutGetDevCapsW", 
    "type": "skProc", 
    "code": "proc waveOutGetDevCapsW*(x1: uint32; x2: LPWAVEOUTCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetDevCapsW\".}"
  }, 
  {
    "name": "waveOutGetDevCaps", 
    "type": "skProc", 
    "code": "proc waveOutGetDevCaps*(x1: uint32; x2: LPWAVEOUTCAPS; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetDevCapsA\".}"
  }, 
  {
    "name": "waveOutGetVolume", 
    "type": "skProc", 
    "code": "proc waveOutGetVolume*(x1: HWAVEOUT; x2: LPDWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutGetVolume\".}"
  }, 
  {
    "name": "waveOutSetVolume", 
    "type": "skProc", 
    "code": "proc waveOutSetVolume*(x1: HWAVEOUT; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutSetVolume\".}"
  }, 
  {
    "name": "waveOutGetErrorTextA", 
    "type": "skProc", 
    "code": "proc waveOutGetErrorTextA*(x1: MMRESULT; x2: LPSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetErrorTextA\".}"
  }, 
  {
    "name": "waveOutGetErrorTextW", 
    "type": "skProc", 
    "code": "proc waveOutGetErrorTextW*(x1: MMRESULT; x2: LPWSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetErrorTextW\".}"
  }, 
  {
    "name": "waveOutGetErrorText", 
    "type": "skProc", 
    "code": "proc waveOutGetErrorText*(x1: MMRESULT; x2: cstring; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetErrorTextA\".}"
  }, 
  {
    "name": "waveOutOpen", 
    "type": "skProc", 
    "code": "proc waveOutOpen*(x1: LPHWAVEOUT; x2: uint32; x3: LPCWAVEFORMATEX; x4: DWORD; \u000A                  x5: DWORD; x6: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutOpen\".}"
  }, 
  {
    "name": "waveOutClose", 
    "type": "skProc", 
    "code": "proc waveOutClose*(x1: HWAVEOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveOutClose\".}"
  }, 
  {
    "name": "waveOutPrepareHeader", 
    "type": "skProc", 
    "code": "proc waveOutPrepareHeader*(x1: HWAVEOUT; x2: LPWAVEHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutPrepareHeader\".}"
  }, 
  {
    "name": "waveOutUnprepareHeader", 
    "type": "skProc", 
    "code": "proc waveOutUnprepareHeader*(x1: HWAVEOUT; x2: LPWAVEHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutUnprepareHeader\".}"
  }, 
  {
    "name": "waveOutWrite", 
    "type": "skProc", 
    "code": "proc waveOutWrite*(x1: HWAVEOUT; x2: LPWAVEHDR; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutWrite\".}"
  }, 
  {
    "name": "waveOutPause", 
    "type": "skProc", 
    "code": "proc waveOutPause*(x1: HWAVEOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveOutPause\".}"
  }, 
  {
    "name": "waveOutRestart", 
    "type": "skProc", 
    "code": "proc waveOutRestart*(x1: HWAVEOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveOutRestart\".}"
  }, 
  {
    "name": "waveOutReset", 
    "type": "skProc", 
    "code": "proc waveOutReset*(x1: HWAVEOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveOutReset\".}"
  }, 
  {
    "name": "waveOutBreakLoop", 
    "type": "skProc", 
    "code": "proc waveOutBreakLoop*(x1: HWAVEOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveOutBreakLoop\".}"
  }, 
  {
    "name": "waveOutGetPosition", 
    "type": "skProc", 
    "code": "proc waveOutGetPosition*(x1: HWAVEOUT; x2: LPMMTIME; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutGetPosition\".}"
  }, 
  {
    "name": "waveOutGetPitch", 
    "type": "skProc", 
    "code": "proc waveOutGetPitch*(x1: HWAVEOUT; x2: LPDWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutGetPitch\".}"
  }, 
  {
    "name": "waveOutSetPitch", 
    "type": "skProc", 
    "code": "proc waveOutSetPitch*(x1: HWAVEOUT; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutSetPitch\".}"
  }, 
  {
    "name": "waveOutGetPlaybackRate", 
    "type": "skProc", 
    "code": "proc waveOutGetPlaybackRate*(x1: HWAVEOUT; x2: LPDWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutGetPlaybackRate\".}"
  }, 
  {
    "name": "waveOutSetPlaybackRate", 
    "type": "skProc", 
    "code": "proc waveOutSetPlaybackRate*(x1: HWAVEOUT; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutSetPlaybackRate\".}"
  }, 
  {
    "name": "waveOutGetID", 
    "type": "skProc", 
    "code": "proc waveOutGetID*(x1: HWAVEOUT; x2: LPUINT): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveOutGetID\".}"
  }, 
  {
    "name": "waveOutMessage", 
    "type": "skProc", 
    "code": "proc waveOutMessage*(x1: HWAVEOUT; x2: uint32; x3: DWORD; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveOutMessage\".}"
  }, 
  {
    "name": "waveInGetNumDevs", 
    "type": "skProc", 
    "code": "proc waveInGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                   importc: \"waveInGetNumDevs\".}"
  }, 
  {
    "name": "waveInGetDevCapsA", 
    "type": "skProc", 
    "code": "proc waveInGetDevCapsA*(x1: uint32; x2: LPWAVEINCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetDevCapsA\".}"
  }, 
  {
    "name": "waveInGetDevCapsW", 
    "type": "skProc", 
    "code": "proc waveInGetDevCapsW*(x1: uint32; x2: LPWAVEINCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetDevCapsW\".}"
  }, 
  {
    "name": "waveInGetDevCaps", 
    "type": "skProc", 
    "code": "proc waveInGetDevCaps*(x1: uint32; x2: LPWAVEINCAPS; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetDevCapsA\".}"
  }, 
  {
    "name": "waveInGetErrorTextA", 
    "type": "skProc", 
    "code": "proc waveInGetErrorTextA*(x1: MMRESULT; x2: LPSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetErrorTextA\".}"
  }, 
  {
    "name": "waveInGetErrorTextW", 
    "type": "skProc", 
    "code": "proc waveInGetErrorTextW*(x1: MMRESULT; x2: LPWSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetErrorTextW\".}"
  }, 
  {
    "name": "waveInGetErrorText", 
    "type": "skProc", 
    "code": "proc waveInGetErrorText*(x1: MMRESULT; x2: cstring; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetErrorTextA\".}"
  }, 
  {
    "name": "waveInOpen", 
    "type": "skProc", 
    "code": "proc waveInOpen*(x1: LPHWAVEIN; x2: uint32; x3: LPCWAVEFORMATEX; x4: DWORD; \u000A                 x5: DWORD; x6: DWORD): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveInOpen\".}"
  }, 
  {
    "name": "waveInClose", 
    "type": "skProc", 
    "code": "proc waveInClose*(x1: HWAVEIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveInClose\".}"
  }, 
  {
    "name": "waveInPrepareHeader", 
    "type": "skProc", 
    "code": "proc waveInPrepareHeader*(x1: HWAVEIN; x2: LPWAVEHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInPrepareHeader\".}"
  }, 
  {
    "name": "waveInUnprepareHeader", 
    "type": "skProc", 
    "code": "proc waveInUnprepareHeader*(x1: HWAVEIN; x2: LPWAVEHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInUnprepareHeader\".}"
  }, 
  {
    "name": "waveInAddBuffer", 
    "type": "skProc", 
    "code": "proc waveInAddBuffer*(x1: HWAVEIN; x2: LPWAVEHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInAddBuffer\".}"
  }, 
  {
    "name": "waveInStart", 
    "type": "skProc", 
    "code": "proc waveInStart*(x1: HWAVEIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveInStart\".}"
  }, 
  {
    "name": "waveInStop", 
    "type": "skProc", 
    "code": "proc waveInStop*(x1: HWAVEIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveInStop\".}"
  }, 
  {
    "name": "waveInReset", 
    "type": "skProc", 
    "code": "proc waveInReset*(x1: HWAVEIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"waveInReset\".}"
  }, 
  {
    "name": "waveInGetPosition", 
    "type": "skProc", 
    "code": "proc waveInGetPosition*(x1: HWAVEIN; x2: LPMMTIME; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInGetPosition\".}"
  }, 
  {
    "name": "waveInGetID", 
    "type": "skProc", 
    "code": "proc waveInGetID*(x1: HWAVEIN; x2: LPUINT): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"waveInGetID\".}"
  }, 
  {
    "name": "waveInMessage", 
    "type": "skProc", 
    "code": "proc waveInMessage*(x1: HWAVEIN; x2: uint32; x3: DWORD; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"waveInMessage\".}"
  }, 
  {
    "name": "mixerGetLineControlsA", 
    "type": "skProc", 
    "code": "proc mixerGetLineControlsA*(x1: HMIXEROBJ; x2: LPMIXERLINECONTROLSA; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineControlsA\".}"
  }, 
  {
    "name": "mixerGetLineControlsW", 
    "type": "skProc", 
    "code": "proc mixerGetLineControlsW*(x1: HMIXEROBJ; x2: LPMIXERLINECONTROLSW; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineControlsW\".}"
  }, 
  {
    "name": "mixerGetLineControls", 
    "type": "skProc", 
    "code": "proc mixerGetLineControls*(x1: HMIXEROBJ; x2: LPMIXERLINECONTROLS; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineControlsA\".}"
  }, 
  {
    "name": "joyGetNumDevs", 
    "type": "skProc", 
    "code": "proc joyGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                importc: \"joyGetNumDevs\".}"
  }, 
  {
    "name": "joyGetDevCapsA", 
    "type": "skProc", 
    "code": "proc joyGetDevCapsA*(x1: uint32; x2: LPJOYCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"joyGetDevCapsA\".}"
  }, 
  {
    "name": "joyGetDevCapsW", 
    "type": "skProc", 
    "code": "proc joyGetDevCapsW*(x1: uint32; x2: LPJOYCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"joyGetDevCapsW\".}"
  }, 
  {
    "name": "joyGetDevCaps", 
    "type": "skProc", 
    "code": "proc joyGetDevCaps*(x1: uint32; x2: LPJOYCAPS; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"joyGetDevCapsA\".}"
  }, 
  {
    "name": "mixerGetControlDetailsA", 
    "type": "skProc", 
    "code": "proc mixerGetControlDetailsA*(x1: HMIXEROBJ; x2: LPMIXERCONTROLDETAILS; \u000A                              x3: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mixerGetControlDetailsA\".}"
  }, 
  {
    "name": "mixerGetControlDetailsW", 
    "type": "skProc", 
    "code": "proc mixerGetControlDetailsW*(x1: HMIXEROBJ; x2: LPMIXERCONTROLDETAILS; \u000A                              x3: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mixerGetControlDetailsW\".}"
  }, 
  {
    "name": "mixerGetControlDetails", 
    "type": "skProc", 
    "code": "proc mixerGetControlDetails*(x1: HMIXEROBJ; x2: LPMIXERCONTROLDETAILS; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetControlDetailsA\".}"
  }, 
  {
    "name": "timeGetSystemTime", 
    "type": "skProc", 
    "code": "proc timeGetSystemTime*(x1: LPMMTIME; x2: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"timeGetSystemTime\".}"
  }, 
  {
    "name": "timeGetTime", 
    "type": "skProc", 
    "code": "proc timeGetTime*(): DWORD {.stdcall, dynlib: \"winmm.dll\", \u000A                             importc: \"timeGetTime\".}"
  }, 
  {
    "name": "timeSetEvent", 
    "type": "skProc", 
    "code": "proc timeSetEvent*(x1: uint32; x2: uint32; x3: LPTIMECALLBACK; x4: DWORD; \u000A                   x5: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"timeSetEvent\".}"
  }, 
  {
    "name": "timeKillEvent", 
    "type": "skProc", 
    "code": "proc timeKillEvent*(x1: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"timeKillEvent\".}"
  }, 
  {
    "name": "timeGetDevCaps", 
    "type": "skProc", 
    "code": "proc timeGetDevCaps*(x1: LPTIMECAPS; x2: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"timeGetDevCaps\".}"
  }, 
  {
    "name": "timeBeginPeriod", 
    "type": "skProc", 
    "code": "proc timeBeginPeriod*(x1: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"timeBeginPeriod\".}"
  }, 
  {
    "name": "timeEndPeriod", 
    "type": "skProc", 
    "code": "proc timeEndPeriod*(x1: uint32): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"timeEndPeriod\".}"
  }, 
  {
    "name": "mixerGetDevCapsA", 
    "type": "skProc", 
    "code": "proc mixerGetDevCapsA*(x1: uint32; x2: LPMIXERCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetDevCapsA\".}"
  }, 
  {
    "name": "mixerGetDevCapsW", 
    "type": "skProc", 
    "code": "proc mixerGetDevCapsW*(x1: uint32; x2: LPMIXERCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetDevCapsW\".}"
  }, 
  {
    "name": "mixerGetDevCaps", 
    "type": "skProc", 
    "code": "proc mixerGetDevCaps*(x1: uint32; x2: LPMIXERCAPS; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetDevCapsA\".}"
  }, 
  {
    "name": "mixerOpen", 
    "type": "skProc", 
    "code": "proc mixerOpen*(x1: LPHMIXER; x2: uint32; x3: DWORD; x4: DWORD; x5: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerOpen\".}"
  }, 
  {
    "name": "mixerClose", 
    "type": "skProc", 
    "code": "proc mixerClose*(x1: HMIXER): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"mixerClose\".}"
  }, 
  {
    "name": "mixerMessage", 
    "type": "skProc", 
    "code": "proc mixerMessage*(x1: HMIXER; x2: uint32; x3: DWORD; x4: DWORD): DWORD {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerMessage\".}"
  }, 
  {
    "name": "auxGetNumDevs", 
    "type": "skProc", 
    "code": "proc auxGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                importc: \"auxGetNumDevs\".}"
  }, 
  {
    "name": "auxGetDevCapsA", 
    "type": "skProc", 
    "code": "proc auxGetDevCapsA*(x1: uint32; x2: LPAUXCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"auxGetDevCapsA\".}"
  }, 
  {
    "name": "auxGetDevCapsW", 
    "type": "skProc", 
    "code": "proc auxGetDevCapsW*(x1: uint32; x2: LPAUXCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"auxGetDevCapsW\".}"
  }, 
  {
    "name": "auxGetDevCaps", 
    "type": "skProc", 
    "code": "proc auxGetDevCaps*(x1: uint32; x2: LPAUXCAPS; x3: uint32): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"auxGetDevCapsA\".}"
  }, 
  {
    "name": "auxSetVolume", 
    "type": "skProc", 
    "code": "proc auxSetVolume*(x1: uint32; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"auxSetVolume\".}"
  }, 
  {
    "name": "auxGetVolume", 
    "type": "skProc", 
    "code": "proc auxGetVolume*(x1: uint32; x2: LPDWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"auxGetVolume\".}"
  }, 
  {
    "name": "auxOutMessage", 
    "type": "skProc", 
    "code": "proc auxOutMessage*(x1: uint32; x2: uint32; x3: DWORD; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"auxOutMessage\".}"
  }, 
  {
    "name": "midiOutGetNumDevs", 
    "type": "skProc", 
    "code": "proc midiOutGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                    importc: \"midiOutGetNumDevs\".}"
  }, 
  {
    "name": "midiStreamOpen", 
    "type": "skProc", 
    "code": "proc midiStreamOpen*(x1: LPHMIDISTRM; x2: LPUINT; x3: DWORD; x4: DWORD; \u000A                     x5: DWORD; x6: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiStreamOpen\".}"
  }, 
  {
    "name": "midiStreamClose", 
    "type": "skProc", 
    "code": "proc midiStreamClose*(x1: HMIDISTRM): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiStreamClose\".}"
  }, 
  {
    "name": "midiStreamProperty", 
    "type": "skProc", 
    "code": "proc midiStreamProperty*(x1: HMIDISTRM; x2: LPBYTE; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiStreamProperty\".}"
  }, 
  {
    "name": "midiStreamPosition", 
    "type": "skProc", 
    "code": "proc midiStreamPosition*(x1: HMIDISTRM; x2: LPMMTIME; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiStreamPosition\".}"
  }, 
  {
    "name": "midiStreamOut", 
    "type": "skProc", 
    "code": "proc midiStreamOut*(x1: HMIDISTRM; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiStreamOut\".}"
  }, 
  {
    "name": "midiStreamPause", 
    "type": "skProc", 
    "code": "proc midiStreamPause*(x1: HMIDISTRM): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiStreamPause\".}"
  }, 
  {
    "name": "midiStreamRestart", 
    "type": "skProc", 
    "code": "proc midiStreamRestart*(x1: HMIDISTRM): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiStreamRestart\".}"
  }, 
  {
    "name": "midiStreamStop", 
    "type": "skProc", 
    "code": "proc midiStreamStop*(x1: HMIDISTRM): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiStreamStop\".}"
  }, 
  {
    "name": "midiConnect", 
    "type": "skProc", 
    "code": "proc midiConnect*(x1: HMIDI; x2: HMIDIOUT; x3: pointer): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiConnect\".}"
  }, 
  {
    "name": "midiDisconnect", 
    "type": "skProc", 
    "code": "proc midiDisconnect*(x1: HMIDI; x2: HMIDIOUT; x3: pointer): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiDisconnect\".}"
  }, 
  {
    "name": "midiOutGetDevCapsA", 
    "type": "skProc", 
    "code": "proc midiOutGetDevCapsA*(x1: uint32; x2: LPMIDIOUTCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetDevCapsA\".}"
  }, 
  {
    "name": "midiOutGetDevCapsW", 
    "type": "skProc", 
    "code": "proc midiOutGetDevCapsW*(x1: uint32; x2: LPMIDIOUTCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetDevCapsW\".}"
  }, 
  {
    "name": "midiOutGetDevCaps", 
    "type": "skProc", 
    "code": "proc midiOutGetDevCaps*(x1: uint32; x2: LPMIDIOUTCAPS; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetDevCapsA\".}"
  }, 
  {
    "name": "midiOutGetVolume", 
    "type": "skProc", 
    "code": "proc midiOutGetVolume*(x1: HMIDIOUT; x2: LPDWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiOutGetVolume\".}"
  }, 
  {
    "name": "midiOutSetVolume", 
    "type": "skProc", 
    "code": "proc midiOutSetVolume*(x1: HMIDIOUT; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiOutSetVolume\".}"
  }, 
  {
    "name": "midiOutGetErrorTextA", 
    "type": "skProc", 
    "code": "proc midiOutGetErrorTextA*(x1: MMRESULT; x2: LPSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetErrorTextA\".}"
  }, 
  {
    "name": "midiOutGetErrorTextW", 
    "type": "skProc", 
    "code": "proc midiOutGetErrorTextW*(x1: MMRESULT; x2: LPWSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetErrorTextW\".}"
  }, 
  {
    "name": "midiOutGetErrorText", 
    "type": "skProc", 
    "code": "proc midiOutGetErrorText*(x1: MMRESULT; x2: cstring; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutGetErrorTextA\".}"
  }, 
  {
    "name": "midiOutOpen", 
    "type": "skProc", 
    "code": "proc midiOutOpen*(x1: LPHMIDIOUT; x2: uint32; x3: DWORD; x4: DWORD; x5: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutOpen\".}"
  }, 
  {
    "name": "midiOutClose", 
    "type": "skProc", 
    "code": "proc midiOutClose*(x1: HMIDIOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiOutClose\".}"
  }, 
  {
    "name": "midiOutPrepareHeader", 
    "type": "skProc", 
    "code": "proc midiOutPrepareHeader*(x1: HMIDIOUT; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutPrepareHeader\".}"
  }, 
  {
    "name": "midiOutUnprepareHeader", 
    "type": "skProc", 
    "code": "proc midiOutUnprepareHeader*(x1: HMIDIOUT; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutUnprepareHeader\".}"
  }, 
  {
    "name": "midiOutShortMsg", 
    "type": "skProc", 
    "code": "proc midiOutShortMsg*(x1: HMIDIOUT; x2: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiOutShortMsg\".}"
  }, 
  {
    "name": "midiOutLongMsg", 
    "type": "skProc", 
    "code": "proc midiOutLongMsg*(x1: HMIDIOUT; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutLongMsg\".}"
  }, 
  {
    "name": "midiOutReset", 
    "type": "skProc", 
    "code": "proc midiOutReset*(x1: HMIDIOUT): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiOutReset\".}"
  }, 
  {
    "name": "midiOutCachePatches", 
    "type": "skProc", 
    "code": "proc midiOutCachePatches*(x1: HMIDIOUT; x2: uint32; x3: LPWORD; x4: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutCachePatches\".}"
  }, 
  {
    "name": "midiOutCacheDrumPatches", 
    "type": "skProc", 
    "code": "proc midiOutCacheDrumPatches*(x1: HMIDIOUT; x2: uint32; x3: LPWORD; x4: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutCacheDrumPatches\".}"
  }, 
  {
    "name": "midiOutGetID", 
    "type": "skProc", 
    "code": "proc midiOutGetID*(x1: HMIDIOUT; x2: LPUINT): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiOutGetID\".}"
  }, 
  {
    "name": "midiOutMessage", 
    "type": "skProc", 
    "code": "proc midiOutMessage*(x1: HMIDIOUT; x2: uint32; x3: DWORD; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiOutMessage\".}"
  }, 
  {
    "name": "midiInGetNumDevs", 
    "type": "skProc", 
    "code": "proc midiInGetNumDevs*(): uint32 {.stdcall, dynlib: \"winmm.dll\", \u000A                                   importc: \"midiInGetNumDevs\".}"
  }, 
  {
    "name": "midiInGetDevCapsA", 
    "type": "skProc", 
    "code": "proc midiInGetDevCapsA*(x1: uint32; x2: LPMIDIINCAPSA; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetDevCapsA\".}"
  }, 
  {
    "name": "midiInGetDevCapsW", 
    "type": "skProc", 
    "code": "proc midiInGetDevCapsW*(x1: uint32; x2: LPMIDIINCAPSW; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetDevCapsW\".}"
  }, 
  {
    "name": "midiInGetDevCaps", 
    "type": "skProc", 
    "code": "proc midiInGetDevCaps*(x1: uint32; x2: LPMIDIINCAPS; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetDevCapsA\".}"
  }, 
  {
    "name": "midiInGetErrorTextA", 
    "type": "skProc", 
    "code": "proc midiInGetErrorTextA*(x1: MMRESULT; x2: LPSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetErrorTextA\".}"
  }, 
  {
    "name": "midiInGetErrorTextW", 
    "type": "skProc", 
    "code": "proc midiInGetErrorTextW*(x1: MMRESULT; x2: LPWSTR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetErrorTextW\".}"
  }, 
  {
    "name": "midiInGetErrorText", 
    "type": "skProc", 
    "code": "proc midiInGetErrorText*(x1: MMRESULT; x2: cstring; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInGetErrorTextA\".}"
  }, 
  {
    "name": "midiInOpen", 
    "type": "skProc", 
    "code": "proc midiInOpen*(x1: LPHMIDIIN; x2: uint32; x3: DWORD; x4: DWORD; x5: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInOpen\".}"
  }, 
  {
    "name": "midiInClose", 
    "type": "skProc", 
    "code": "proc midiInClose*(x1: HMIDIIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiInClose\".}"
  }, 
  {
    "name": "midiInPrepareHeader", 
    "type": "skProc", 
    "code": "proc midiInPrepareHeader*(x1: HMIDIIN; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInPrepareHeader\".}"
  }, 
  {
    "name": "midiInUnprepareHeader", 
    "type": "skProc", 
    "code": "proc midiInUnprepareHeader*(x1: HMIDIIN; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInUnprepareHeader\".}"
  }, 
  {
    "name": "midiInAddBuffer", 
    "type": "skProc", 
    "code": "proc midiInAddBuffer*(x1: HMIDIIN; x2: LPMIDIHDR; x3: uint32): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInAddBuffer\".}"
  }, 
  {
    "name": "midiInStart", 
    "type": "skProc", 
    "code": "proc midiInStart*(x1: HMIDIIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiInStart\".}"
  }, 
  {
    "name": "midiInStop", 
    "type": "skProc", 
    "code": "proc midiInStop*(x1: HMIDIIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiInStop\".}"
  }, 
  {
    "name": "midiInReset", 
    "type": "skProc", 
    "code": "proc midiInReset*(x1: HMIDIIN): MMRESULT {.stdcall, dynlib: \"winmm.dll\", \u000A    importc: \"midiInReset\".}"
  }, 
  {
    "name": "midiInGetID", 
    "type": "skProc", 
    "code": "proc midiInGetID*(x1: HMIDIIN; x2: LPUINT): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"midiInGetID\".}"
  }, 
  {
    "name": "midiInMessage", 
    "type": "skProc", 
    "code": "proc midiInMessage*(x1: HMIDIIN; x2: uint32; x3: DWORD; x4: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"midiInMessage\".}"
  }, 
  {
    "name": "mixerGetLineInfoA", 
    "type": "skProc", 
    "code": "proc mixerGetLineInfoA*(x1: HMIXEROBJ; x2: LPMIXERLINEA; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineInfoA\".}"
  }, 
  {
    "name": "mixerGetLineInfoW", 
    "type": "skProc", 
    "code": "proc mixerGetLineInfoW*(x1: HMIXEROBJ; x2: LPMIXERLINEW; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineInfoW\".}"
  }, 
  {
    "name": "mixerGetLineInfo", 
    "type": "skProc", 
    "code": "proc mixerGetLineInfo*(x1: HMIXEROBJ; x2: LPMIXERLINE; x3: DWORD): MMRESULT {.\u000A    stdcall, dynlib: \"winmm.dll\", importc: \"mixerGetLineInfoA\".}"
  }, 
  {
    "name": "mixerGetID", 
    "type": "skProc", 
    "code": "proc mixerGetID*(x1: HMIXEROBJ; x2: var uint32; x3: DWORD): MMRESULT {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"mixerGetID\".}"
  }, 
  {
    "name": "PlaySoundA", 
    "type": "skProc", 
    "code": "proc PlaySoundA*(x1: LPCSTR; x2: HMODULE; x3: DWORD): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"PlaySoundA\".}"
  }, 
  {
    "name": "PlaySoundW", 
    "type": "skProc", 
    "code": "proc PlaySoundW*(x1: LPCWSTR; x2: HMODULE; x3: DWORD): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"PlaySoundW\".}"
  }, 
  {
    "name": "PlaySound", 
    "type": "skProc", 
    "code": "proc PlaySound*(x1: cstring; x2: HMODULE; x3: DWORD): bool {.stdcall, \u000A    dynlib: \"winmm.dll\", importc: \"PlaySoundA\".}"
  }
]