[
  {
    "comment": ":Authors: Zahary Karadjov, Andreas Rumpf\u000A##\u000A## This module provides support for `memory mapped files`:idx:\u000A## (Posix's `mmap`:idx:) on the different operating systems."
  }, 
  {
    "name": "MemFile", 
    "type": "skType", 
    "description": "represents a memory mapped file", 
    "code": "MemFile* = object \u000A  mem*: pointer ## a pointer to the memory mapped file. The pointer\u000A                ## can be used directly to change the contents of the\u000A                ## file, if it was opened with write access.\u000A  size*: int                  ## size of the memory mapped file\u000A  when defined(windows): \u000A      fHandle: int\u000A      mapHandle: int\u000A\u000A  else: \u000A      handle: cint\u000A\u000A  "
  }, 
  {
    "name": "mapMem", 
    "type": "skProc", 
    "code": "proc mapMem*(m: var MemFile; mode: FileMode = fmRead; mappedSize = - 1; \u000A             offset = 0): pointer"
  }, 
  {
    "name": "unmapMem", 
    "type": "skProc", 
    "description": "unmaps the memory region <tt class=\"docutils literal\"><span class=\"pre\">(p, &lt;p+size)</span></tt> of the mapped file <cite>f</cite>. All changes are written back to the file system, if <cite>f</cite> was opened with write access. <tt class=\"docutils literal\"><span class=\"pre\">size</span></tt> must be of exactly the size that was requested via <tt class=\"docutils literal\"><span class=\"pre\">mapMem</span></tt>.", 
    "code": "proc unmapMem*(f: var MemFile; p: pointer; size: int)"
  }, 
  {
    "name": "open", 
    "type": "skProc", 
    "description": "opens a memory mapped file. If this fails, <tt class=\"docutils literal\"><span class=\"pre\">EOS</span></tt> is raised. <cite>newFileSize</cite> can only be set if the file does not exist and is opened with write access (e.g., with fmReadWrite). <cite>mappedSize</cite> and <cite>offset</cite> can be used to map only a slice of the file. Example:<pre><span class=\"Keyword\">var</span>\u000A  <span class=\"Identifier\">mm</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mm_full</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mm_half</span><span class=\"Punctuation\">:</span> <span class=\"Identifier\">MemFile</span>\u000A\u000A<span class=\"Identifier\">mm</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">memfiles</span><span class=\"Operator\">.</span><span class=\"Identifier\">open</span><span class=\"Punctuation\">(</span><span class=\"StringLit\">&quot;/tmp/test.mmap&quot;</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mode</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">fmWrite</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">newFileSize</span> <span class=\"Operator\">=</span> <span class=\"DecNumber\">1024</span><span class=\"Punctuation\">)</span>    <span class=\"Comment\"># Create a new file</span>\u000A<span class=\"Identifier\">mm</span><span class=\"Operator\">.</span><span class=\"Identifier\">close</span><span class=\"Punctuation\">(</span><span class=\"Punctuation\">)</span>\u000A\u000A<span class=\"Comment\"># Read the whole file, would fail if newFileSize was set</span>\u000A<span class=\"Identifier\">mm_full</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">memfiles</span><span class=\"Operator\">.</span><span class=\"Identifier\">open</span><span class=\"Punctuation\">(</span><span class=\"StringLit\">&quot;/tmp/test.mmap&quot;</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mode</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">fmReadWrite</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mappedSize</span> <span class=\"Operator\">=</span> <span class=\"Operator\">-</span><span class=\"DecNumber\">1</span><span class=\"Punctuation\">)</span>\u000A\u000A<span class=\"Comment\"># Read the first 512 bytes</span>\u000A<span class=\"Identifier\">mm_half</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">memfiles</span><span class=\"Operator\">.</span><span class=\"Identifier\">open</span><span class=\"Punctuation\">(</span><span class=\"StringLit\">&quot;/tmp/test.mmap&quot;</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mode</span> <span class=\"Operator\">=</span> <span class=\"Identifier\">fmReadWrite</span><span class=\"Punctuation\">,</span> <span class=\"Identifier\">mappedSize</span> <span class=\"Operator\">=</span> <span class=\"DecNumber\">512</span><span class=\"Punctuation\">)</span></pre>", 
    "code": "proc open*(filename: string; mode: FileMode = fmRead; mappedSize = - 1; \u000A           offset = 0; newFileSize = - 1): MemFile"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "description": "closes the memory mapped file <cite>f</cite>. All changes are written back to the file system, if <cite>f</cite> was opened with write access.", 
    "code": "proc close*(f: var MemFile)"
  }
]