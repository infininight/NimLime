[
  {
    "name": "MAX_UDPADDRESSES", 
    "type": "skConst", 
    "code": "MAX_UDPADDRESSES* = 4"
  }, 
  {
    "name": "TGenericSocket", 
    "type": "skType", 
    "code": "TGenericSocket* {.final.} = object \u000A  ready*: int\u000A"
  }, 
  {
    "name": "version", 
    "type": "skProc", 
    "code": "proc version*(x: var Tversion)"
  }, 
  {
    "name": "init", 
    "type": "skProc", 
    "code": "proc init*(): int {.cdecl, importc: \"SDLNet_Init\", dynlib: NetLibName.}"
  }, 
  {
    "name": "quit", 
    "type": "skProc", 
    "code": "proc quit*() {.cdecl, importc: \"SDLNet_Quit\", dynlib: NetLibName.}"
  }, 
  {
    "name": "resolveHost", 
    "type": "skProc", 
    "code": "proc resolveHost*(address: var TIPAddress; host: cstring; port: uint16): int {.\u000A    cdecl, importc: \"SDLNet_ResolveHost\", dynlib: NetLibName.}"
  }, 
  {
    "name": "resolveIP", 
    "type": "skProc", 
    "code": "proc resolveIP*(ip: var TIPAddress): cstring {.cdecl, \u000A    importc: \"SDLNet_ResolveIP\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpOpen", 
    "type": "skProc", 
    "code": "proc tcpOpen*(ip: var TIPAddress): PTCPSocket {.cdecl, \u000A    importc: \"SDLNet_TCP_Open\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpAccept", 
    "type": "skProc", 
    "code": "proc tcpAccept*(server: PTCPSocket): PTCPSocket {.cdecl, \u000A    importc: \"SDLNet_TCP_Accept\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpGetPeerAddress", 
    "type": "skProc", 
    "code": "proc tcpGetPeerAddress*(sock: PTCPSocket): PIPAddress {.cdecl, \u000A    importc: \"SDLNet_TCP_GetPeerAddress\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpSend", 
    "type": "skProc", 
    "code": "proc tcpSend*(sock: PTCPSocket; data: pointer; length: int): int {.cdecl, \u000A    importc: \"SDLNet_TCP_Send\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpRecv", 
    "type": "skProc", 
    "code": "proc tcpRecv*(sock: PTCPSocket; data: pointer; maxlen: int): int {.cdecl, \u000A    importc: \"SDLNet_TCP_Recv\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpClose", 
    "type": "skProc", 
    "code": "proc tcpClose*(sock: PTCPSocket) {.cdecl, importc: \"SDLNet_TCP_Close\", \u000A                                   dynlib: NetLibName.}"
  }, 
  {
    "name": "allocPacket", 
    "type": "skProc", 
    "code": "proc allocPacket*(size: int): PUDPpacket {.cdecl, importc: \"SDLNet_AllocPacket\", \u000A    dynlib: NetLibName.}"
  }, 
  {
    "name": "resizePacket", 
    "type": "skProc", 
    "code": "proc resizePacket*(packet: PUDPpacket; newsize: int): int {.cdecl, \u000A    importc: \"SDLNet_ResizePacket\", dynlib: NetLibName.}"
  }, 
  {
    "name": "freePacket", 
    "type": "skProc", 
    "code": "proc freePacket*(packet: PUDPpacket) {.cdecl, importc: \"SDLNet_FreePacket\", \u000A                                       dynlib: NetLibName.}"
  }, 
  {
    "name": "allocPacketV", 
    "type": "skProc", 
    "code": "proc allocPacketV*(howmany: int; size: int): PUDPpacket {.cdecl, \u000A    importc: \"SDLNet_AllocPacketV\", dynlib: NetLibName.}"
  }, 
  {
    "name": "freePacketV", 
    "type": "skProc", 
    "code": "proc freePacketV*(packetV: PUDPpacket) {.cdecl, importc: \"SDLNet_FreePacketV\", \u000A    dynlib: NetLibName.}"
  }, 
  {
    "name": "udpOpen", 
    "type": "skProc", 
    "code": "proc udpOpen*(port: uint16): PUDPSocket {.cdecl, importc: \"SDLNet_UDP_Open\", \u000A    dynlib: NetLibName.}"
  }, 
  {
    "name": "udpBind", 
    "type": "skProc", 
    "code": "proc udpBind*(sock: PUDPSocket; channel: int; address: var TIPAddress): int {.\u000A    cdecl, importc: \"SDLNet_UDP_Bind\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpUnbind", 
    "type": "skProc", 
    "code": "proc udpUnbind*(sock: PUDPSocket; channel: int) {.cdecl, \u000A    importc: \"SDLNet_UDP_Unbind\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpGetPeerAddress", 
    "type": "skProc", 
    "code": "proc udpGetPeerAddress*(sock: PUDPSocket; channel: int): PIPAddress {.cdecl, \u000A    importc: \"SDLNet_UDP_GetPeerAddress\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpSendV", 
    "type": "skProc", 
    "code": "proc udpSendV*(sock: PUDPSocket; packets: PPUDPpacket; npackets: int): int {.\u000A    cdecl, importc: \"SDLNet_UDP_SendV\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpSend", 
    "type": "skProc", 
    "code": "proc udpSend*(sock: PUDPSocket; channel: int; packet: PUDPpacket): int {.cdecl, \u000A    importc: \"SDLNet_UDP_Send\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpRecvV", 
    "type": "skProc", 
    "code": "proc udpRecvV*(sock: PUDPSocket; packets: PPUDPpacket): int {.cdecl, \u000A    importc: \"SDLNet_UDP_RecvV\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpRecv", 
    "type": "skProc", 
    "code": "proc udpRecv*(sock: PUDPSocket; packet: PUDPpacket): int {.cdecl, \u000A    importc: \"SDLNet_UDP_Recv\", dynlib: NetLibName.}"
  }, 
  {
    "name": "udpClose", 
    "type": "skProc", 
    "code": "proc udpClose*(sock: PUDPSocket) {.cdecl, importc: \"SDLNet_UDP_Close\", \u000A                                   dynlib: NetLibName.}"
  }, 
  {
    "name": "allocSocketSet", 
    "type": "skProc", 
    "code": "proc allocSocketSet*(maxsockets: int): PSocketSet {.cdecl, \u000A    importc: \"SDLNet_AllocSocketSet\", dynlib: NetLibName.}"
  }, 
  {
    "name": "addSocket", 
    "type": "skProc", 
    "code": "proc addSocket*(theSet: PSocketSet; sock: PGenericSocket): int {.cdecl, \u000A    importc: \"SDLNet_AddSocket\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpAddSocket", 
    "type": "skProc", 
    "code": "proc tcpAddSocket*(theSet: PSocketSet; sock: PTCPSocket): int"
  }, 
  {
    "name": "udpAddSocket", 
    "type": "skProc", 
    "code": "proc udpAddSocket*(theSet: PSocketSet; sock: PUDPSocket): int"
  }, 
  {
    "name": "delSocket", 
    "type": "skProc", 
    "code": "proc delSocket*(theSet: PSocketSet; sock: PGenericSocket): int {.cdecl, \u000A    importc: \"SDLNet_DelSocket\", dynlib: NetLibName.}"
  }, 
  {
    "name": "tcpDelSocket", 
    "type": "skProc", 
    "code": "proc tcpDelSocket*(theSet: PSocketSet; sock: PTCPSocket): int"
  }, 
  {
    "name": "udpDelSocket", 
    "type": "skProc", 
    "code": "proc udpDelSocket*(theSet: PSocketSet; sock: PUDPSocket): int"
  }, 
  {
    "name": "checkSockets", 
    "type": "skProc", 
    "code": "proc checkSockets*(theSet: PSocketSet; timeout: int32): int {.cdecl, \u000A    importc: \"SDLNet_CheckSockets\", dynlib: NetLibName.}"
  }, 
  {
    "name": "socketReady", 
    "type": "skProc", 
    "code": "proc socketReady*(sock: PGenericSocket): bool"
  }, 
  {
    "name": "freeSocketSet", 
    "type": "skProc", 
    "code": "proc freeSocketSet*(theSet: PSocketSet) {.cdecl, \u000A    importc: \"SDLNet_FreeSocketSet\", dynlib: NetLibName.}"
  }, 
  {
    "name": "write16", 
    "type": "skProc", 
    "code": "proc write16*(value: uint16; area: pointer) {.cdecl, importc: \"SDLNet_Write16\", \u000A    dynlib: NetLibName.}"
  }, 
  {
    "name": "write32", 
    "type": "skProc", 
    "code": "proc write32*(value: uint32; area: pointer) {.cdecl, importc: \"SDLNet_Write32\", \u000A    dynlib: NetLibName.}"
  }, 
  {
    "name": "read16", 
    "type": "skProc", 
    "code": "proc read16*(area: pointer): uint16 {.cdecl, importc: \"SDLNet_Read16\", \u000A                                      dynlib: NetLibName.}"
  }, 
  {
    "name": "read32", 
    "type": "skProc", 
    "code": "proc read32*(area: pointer): uint32 {.cdecl, importc: \"SDLNet_Read32\", \u000A                                      dynlib: NetLibName.}"
  }
]