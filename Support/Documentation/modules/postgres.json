[
  {
    "name": "Oid", 
    "type": "skType", 
    "code": "Oid* = int32"
  }, 
  {
    "name": "CMDSTATUS_LEN", 
    "type": "skConst", 
    "code": "CMDSTATUS_LEN* = 40"
  }, 
  {
    "name": "PQArgBlock", 
    "type": "skType", 
    "code": "PQArgBlock* {.pure, final.} = object \u000A  length*: int32\u000A  isint*: int32\u000A  p*: pointer\u000A"
  }, 
  {
    "name": "pqconnectStart", 
    "type": "skProc", 
    "code": "proc pqconnectStart*(conninfo: cstring): PPGconn {.cdecl, dynlib: dllName, \u000A    importc: \"PQconnectStart\".}"
  }, 
  {
    "name": "pqconnectPoll", 
    "type": "skProc", 
    "code": "proc pqconnectPoll*(conn: PPGconn): PostgresPollingStatusType {.cdecl, \u000A    dynlib: dllName, importc: \"PQconnectPoll\".}"
  }, 
  {
    "name": "pqconnectdb", 
    "type": "skProc", 
    "code": "proc pqconnectdb*(conninfo: cstring): PPGconn {.cdecl, dynlib: dllName, \u000A    importc: \"PQconnectdb\".}"
  }, 
  {
    "name": "pqsetdbLogin", 
    "type": "skProc", 
    "code": "proc pqsetdbLogin*(pghost: cstring; pgport: cstring; pgoptions: cstring; \u000A                   pgtty: cstring; dbName: cstring; login: cstring; pwd: cstring): PPGconn {.\u000A    cdecl, dynlib: dllName, importc: \"PQsetdbLogin\".}"
  }, 
  {
    "name": "pqsetdb", 
    "type": "skProc", 
    "code": "proc pqsetdb*(M_PGHOST, M_PGPORT, M_PGOPT, M_PGTTY, M_DBNAME: cstring): Ppgconn"
  }, 
  {
    "name": "pqfinish", 
    "type": "skProc", 
    "code": "proc pqfinish*(conn: PPGconn) {.cdecl, dynlib: dllName, importc: \"PQfinish\".}"
  }, 
  {
    "name": "pqconndefaults", 
    "type": "skProc", 
    "code": "proc pqconndefaults*(): PPQconninfoOption {.cdecl, dynlib: dllName, \u000A    importc: \"PQconndefaults\".}"
  }, 
  {
    "name": "pqconninfoFree", 
    "type": "skProc", 
    "code": "proc pqconninfoFree*(connOptions: PPQconninfoOption) {.cdecl, dynlib: dllName, \u000A    importc: \"PQconninfoFree\".}"
  }, 
  {
    "name": "pqresetStart", 
    "type": "skProc", 
    "code": "proc pqresetStart*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQresetStart\".}"
  }, 
  {
    "name": "pqresetPoll", 
    "type": "skProc", 
    "code": "proc pqresetPoll*(conn: PPGconn): PostgresPollingStatusType {.cdecl, \u000A    dynlib: dllName, importc: \"PQresetPoll\".}"
  }, 
  {
    "name": "pqreset", 
    "type": "skProc", 
    "code": "proc pqreset*(conn: PPGconn) {.cdecl, dynlib: dllName, importc: \"PQreset\".}"
  }, 
  {
    "name": "pqrequestCancel", 
    "type": "skProc", 
    "code": "proc pqrequestCancel*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQrequestCancel\".}"
  }, 
  {
    "name": "pqdb", 
    "type": "skProc", 
    "code": "proc pqdb*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQdb\".}"
  }, 
  {
    "name": "pquser", 
    "type": "skProc", 
    "code": "proc pquser*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQuser\".}"
  }, 
  {
    "name": "pqpass", 
    "type": "skProc", 
    "code": "proc pqpass*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQpass\".}"
  }, 
  {
    "name": "pqhost", 
    "type": "skProc", 
    "code": "proc pqhost*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQhost\".}"
  }, 
  {
    "name": "pqport", 
    "type": "skProc", 
    "code": "proc pqport*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQport\".}"
  }, 
  {
    "name": "pqtty", 
    "type": "skProc", 
    "code": "proc pqtty*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, importc: \"PQtty\".}"
  }, 
  {
    "name": "pqoptions", 
    "type": "skProc", 
    "code": "proc pqoptions*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQoptions\".}"
  }, 
  {
    "name": "pqstatus", 
    "type": "skProc", 
    "code": "proc pqstatus*(conn: PPGconn): TConnStatusType {.cdecl, dynlib: dllName, \u000A    importc: \"PQstatus\".}"
  }, 
  {
    "name": "pqtransactionStatus", 
    "type": "skProc", 
    "code": "proc pqtransactionStatus*(conn: PPGconn): PGTransactionStatusType {.cdecl, \u000A    dynlib: dllName, importc: \"PQtransactionStatus\".}"
  }, 
  {
    "name": "pqparameterStatus", 
    "type": "skProc", 
    "code": "proc pqparameterStatus*(conn: PPGconn; paramName: cstring): cstring {.cdecl, \u000A    dynlib: dllName, importc: \"PQparameterStatus\".}"
  }, 
  {
    "name": "pqprotocolVersion", 
    "type": "skProc", 
    "code": "proc pqprotocolVersion*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQprotocolVersion\".}"
  }, 
  {
    "name": "pqerrorMessage", 
    "type": "skProc", 
    "code": "proc pqerrorMessage*(conn: PPGconn): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQerrorMessage\".}"
  }, 
  {
    "name": "pqsocket", 
    "type": "skProc", 
    "code": "proc pqsocket*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A                                       importc: \"PQsocket\".}"
  }, 
  {
    "name": "pqbackendPID", 
    "type": "skProc", 
    "code": "proc pqbackendPID*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQbackendPID\".}"
  }, 
  {
    "name": "pqclientEncoding", 
    "type": "skProc", 
    "code": "proc pqclientEncoding*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQclientEncoding\".}"
  }, 
  {
    "name": "pqsetClientEncoding", 
    "type": "skProc", 
    "code": "proc pqsetClientEncoding*(conn: PPGconn; encoding: cstring): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQsetClientEncoding\".}"
  }, 
  {
    "name": "pqgetssl", 
    "type": "skProc", 
    "code": "proc pqgetssl*(conn: PPGconn): PSSL {.cdecl, dynlib: dllName, \u000A                                      importc: \"PQgetssl\".}"
  }, 
  {
    "name": "pqsetErrorVerbosity", 
    "type": "skProc", 
    "code": "proc pqsetErrorVerbosity*(conn: PPGconn; verbosity: PGVerbosity): PGVerbosity {.\u000A    cdecl, dynlib: dllName, importc: \"PQsetErrorVerbosity\".}"
  }, 
  {
    "name": "pqtrace", 
    "type": "skProc", 
    "code": "proc pqtrace*(conn: PPGconn; debug_port: File) {.cdecl, dynlib: dllName, \u000A    importc: \"PQtrace\".}"
  }, 
  {
    "name": "pquntrace", 
    "type": "skProc", 
    "code": "proc pquntrace*(conn: PPGconn) {.cdecl, dynlib: dllName, importc: \"PQuntrace\".}"
  }, 
  {
    "name": "pqsetNoticeReceiver", 
    "type": "skProc", 
    "code": "proc pqsetNoticeReceiver*(conn: PPGconn; theProc: PQnoticeReceiver; arg: pointer): PQnoticeReceiver {.\u000A    cdecl, dynlib: dllName, importc: \"PQsetNoticeReceiver\".}"
  }, 
  {
    "name": "pqsetNoticeProcessor", 
    "type": "skProc", 
    "code": "proc pqsetNoticeProcessor*(conn: PPGconn; theProc: PQnoticeProcessor; \u000A                           arg: pointer): PQnoticeProcessor {.cdecl, \u000A    dynlib: dllName, importc: \"PQsetNoticeProcessor\".}"
  }, 
  {
    "name": "pqexec", 
    "type": "skProc", 
    "code": "proc pqexec*(conn: PPGconn; query: cstring): PPGresult {.cdecl, dynlib: dllName, \u000A    importc: \"PQexec\".}"
  }, 
  {
    "name": "pqexecParams", 
    "type": "skProc", 
    "code": "proc pqexecParams*(conn: PPGconn; command: cstring; nParams: int32; \u000A                   paramTypes: POid; paramValues: cstringArray; \u000A                   paramLengths, paramFormats: ptr int32; resultFormat: int32): PPGresult {.\u000A    cdecl, dynlib: dllName, importc: \"PQexecParams\".}"
  }, 
  {
    "name": "pqprepare", 
    "type": "skProc", 
    "code": "proc pqprepare*(conn: PPGconn; stmtName, query: cstring; nParams: int32; \u000A                paramTypes: POid): PPGresult {.cdecl, dynlib: dllName, \u000A    importc: \"PQprepare\".}"
  }, 
  {
    "name": "pqexecPrepared", 
    "type": "skProc", 
    "code": "proc pqexecPrepared*(conn: PPGconn; stmtName: cstring; nParams: int32; \u000A                     paramValues: cstringArray; \u000A                     paramLengths, paramFormats: ptr int32; resultFormat: int32): PPGresult {.\u000A    cdecl, dynlib: dllName, importc: \"PQexecPrepared\".}"
  }, 
  {
    "name": "pqsendQuery", 
    "type": "skProc", 
    "code": "proc pqsendQuery*(conn: PPGconn; query: cstring): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQsendQuery\".}"
  }, 
  {
    "name": "pqsendQueryParams", 
    "type": "skProc", 
    "code": "proc pqsendQueryParams*(conn: PPGconn; command: cstring; nParams: int32; \u000A                        paramTypes: POid; paramValues: cstringArray; \u000A                        paramLengths, paramFormats: ptr int32; \u000A                        resultFormat: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQsendQueryParams\".}"
  }, 
  {
    "name": "pqsendQueryPrepared", 
    "type": "skProc", 
    "code": "proc pqsendQueryPrepared*(conn: PPGconn; stmtName: cstring; nParams: int32; \u000A                          paramValues: cstringArray; \u000A                          paramLengths, paramFormats: ptr int32; \u000A                          resultFormat: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQsendQueryPrepared\".}"
  }, 
  {
    "name": "pqgetResult", 
    "type": "skProc", 
    "code": "proc pqgetResult*(conn: PPGconn): PPGresult {.cdecl, dynlib: dllName, \u000A    importc: \"PQgetResult\".}"
  }, 
  {
    "name": "pqisBusy", 
    "type": "skProc", 
    "code": "proc pqisBusy*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A                                       importc: \"PQisBusy\".}"
  }, 
  {
    "name": "pqconsumeInput", 
    "type": "skProc", 
    "code": "proc pqconsumeInput*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQconsumeInput\".}"
  }, 
  {
    "name": "pqnotifies", 
    "type": "skProc", 
    "code": "proc pqnotifies*(conn: PPGconn): PPGnotify {.cdecl, dynlib: dllName, \u000A    importc: \"PQnotifies\".}"
  }, 
  {
    "name": "pqputCopyData", 
    "type": "skProc", 
    "code": "proc pqputCopyData*(conn: PPGconn; buffer: cstring; nbytes: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"PQputCopyData\".}"
  }, 
  {
    "name": "pqputCopyEnd", 
    "type": "skProc", 
    "code": "proc pqputCopyEnd*(conn: PPGconn; errormsg: cstring): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQputCopyEnd\".}"
  }, 
  {
    "name": "pqgetCopyData", 
    "type": "skProc", 
    "code": "proc pqgetCopyData*(conn: PPGconn; buffer: cstringArray; async: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"PQgetCopyData\".}"
  }, 
  {
    "name": "pqgetline", 
    "type": "skProc", 
    "code": "proc pqgetline*(conn: PPGconn; str: cstring; len: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQgetline\".}"
  }, 
  {
    "name": "pqputline", 
    "type": "skProc", 
    "code": "proc pqputline*(conn: PPGconn; str: cstring): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQputline\".}"
  }, 
  {
    "name": "pqgetlineAsync", 
    "type": "skProc", 
    "code": "proc pqgetlineAsync*(conn: PPGconn; buffer: cstring; bufsize: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"PQgetlineAsync\".}"
  }, 
  {
    "name": "pqputnbytes", 
    "type": "skProc", 
    "code": "proc pqputnbytes*(conn: PPGconn; buffer: cstring; nbytes: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQputnbytes\".}"
  }, 
  {
    "name": "pqendcopy", 
    "type": "skProc", 
    "code": "proc pqendcopy*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A                                        importc: \"PQendcopy\".}"
  }, 
  {
    "name": "pqsetnonblocking", 
    "type": "skProc", 
    "code": "proc pqsetnonblocking*(conn: PPGconn; arg: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQsetnonblocking\".}"
  }, 
  {
    "name": "pqisnonblocking", 
    "type": "skProc", 
    "code": "proc pqisnonblocking*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQisnonblocking\".}"
  }, 
  {
    "name": "pqflush", 
    "type": "skProc", 
    "code": "proc pqflush*(conn: PPGconn): int32 {.cdecl, dynlib: dllName, importc: \"PQflush\".}"
  }, 
  {
    "name": "pqfn", 
    "type": "skProc", 
    "code": "proc pqfn*(conn: PPGconn; fnid: int32; result_buf, result_len: ptr int32; \u000A           result_is_int: int32; args: PPQArgBlock; nargs: int32): PPGresult {.\u000A    cdecl, dynlib: dllName, importc: \"PQfn\".}"
  }, 
  {
    "name": "pqresultStatus", 
    "type": "skProc", 
    "code": "proc pqresultStatus*(res: PPGresult): TExecStatusType {.cdecl, dynlib: dllName, \u000A    importc: \"PQresultStatus\".}"
  }, 
  {
    "name": "pqresStatus", 
    "type": "skProc", 
    "code": "proc pqresStatus*(status: TExecStatusType): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQresStatus\".}"
  }, 
  {
    "name": "pqresultErrorMessage", 
    "type": "skProc", 
    "code": "proc pqresultErrorMessage*(res: PPGresult): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQresultErrorMessage\".}"
  }, 
  {
    "name": "pqresultErrorField", 
    "type": "skProc", 
    "code": "proc pqresultErrorField*(res: PPGresult; fieldcode: int32): cstring {.cdecl, \u000A    dynlib: dllName, importc: \"PQresultErrorField\".}"
  }, 
  {
    "name": "pqntuples", 
    "type": "skProc", 
    "code": "proc pqntuples*(res: PPGresult): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQntuples\".}"
  }, 
  {
    "name": "pqnfields", 
    "type": "skProc", 
    "code": "proc pqnfields*(res: PPGresult): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQnfields\".}"
  }, 
  {
    "name": "pqbinaryTuples", 
    "type": "skProc", 
    "code": "proc pqbinaryTuples*(res: PPGresult): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQbinaryTuples\".}"
  }, 
  {
    "name": "pqfname", 
    "type": "skProc", 
    "code": "proc pqfname*(res: PPGresult; field_num: int32): cstring {.cdecl, \u000A    dynlib: dllName, importc: \"PQfname\".}"
  }, 
  {
    "name": "pqfnumber", 
    "type": "skProc", 
    "code": "proc pqfnumber*(res: PPGresult; field_name: cstring): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQfnumber\".}"
  }, 
  {
    "name": "pqftable", 
    "type": "skProc", 
    "code": "proc pqftable*(res: PPGresult; field_num: int32): Oid {.cdecl, dynlib: dllName, \u000A    importc: \"PQftable\".}"
  }, 
  {
    "name": "pqftablecol", 
    "type": "skProc", 
    "code": "proc pqftablecol*(res: PPGresult; field_num: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQftablecol\".}"
  }, 
  {
    "name": "pqfformat", 
    "type": "skProc", 
    "code": "proc pqfformat*(res: PPGresult; field_num: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"PQfformat\".}"
  }, 
  {
    "name": "pqftype", 
    "type": "skProc", 
    "code": "proc pqftype*(res: PPGresult; field_num: int32): Oid {.cdecl, dynlib: dllName, \u000A    importc: \"PQftype\".}"
  }, 
  {
    "name": "pqfsize", 
    "type": "skProc", 
    "code": "proc pqfsize*(res: PPGresult; field_num: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQfsize\".}"
  }, 
  {
    "name": "pqfmod", 
    "type": "skProc", 
    "code": "proc pqfmod*(res: PPGresult; field_num: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQfmod\".}"
  }, 
  {
    "name": "pqcmdStatus", 
    "type": "skProc", 
    "code": "proc pqcmdStatus*(res: PPGresult): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQcmdStatus\".}"
  }, 
  {
    "name": "pqoidStatus", 
    "type": "skProc", 
    "code": "proc pqoidStatus*(res: PPGresult): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQoidStatus\".}"
  }, 
  {
    "name": "pqoidValue", 
    "type": "skProc", 
    "code": "proc pqoidValue*(res: PPGresult): Oid {.cdecl, dynlib: dllName, \u000A                                        importc: \"PQoidValue\".}"
  }, 
  {
    "name": "pqcmdTuples", 
    "type": "skProc", 
    "code": "proc pqcmdTuples*(res: PPGresult): cstring {.cdecl, dynlib: dllName, \u000A    importc: \"PQcmdTuples\".}"
  }, 
  {
    "name": "pqgetvalue", 
    "type": "skProc", 
    "code": "proc pqgetvalue*(res: PPGresult; tup_num: int32; field_num: int32): cstring {.\u000A    cdecl, dynlib: dllName, importc: \"PQgetvalue\".}"
  }, 
  {
    "name": "pqgetlength", 
    "type": "skProc", 
    "code": "proc pqgetlength*(res: PPGresult; tup_num: int32; field_num: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"PQgetlength\".}"
  }, 
  {
    "name": "pqgetisnull", 
    "type": "skProc", 
    "code": "proc pqgetisnull*(res: PPGresult; tup_num: int32; field_num: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"PQgetisnull\".}"
  }, 
  {
    "name": "pqclear", 
    "type": "skProc", 
    "code": "proc pqclear*(res: PPGresult) {.cdecl, dynlib: dllName, importc: \"PQclear\".}"
  }, 
  {
    "name": "pqfreemem", 
    "type": "skProc", 
    "code": "proc pqfreemem*(p: pointer) {.cdecl, dynlib: dllName, importc: \"PQfreemem\".}"
  }, 
  {
    "name": "pqmakeEmptyPGresult", 
    "type": "skProc", 
    "code": "proc pqmakeEmptyPGresult*(conn: PPGconn; status: TExecStatusType): PPGresult {.\u000A    cdecl, dynlib: dllName, importc: \"PQmakeEmptyPGresult\".}"
  }, 
  {
    "name": "pqescapeString", 
    "type": "skProc", 
    "code": "proc pqescapeString*(till, `from`: cstring; len: int): int {.cdecl, \u000A    dynlib: dllName, importc: \"PQescapeString\".}"
  }, 
  {
    "name": "pqescapeBytea", 
    "type": "skProc", 
    "code": "proc pqescapeBytea*(bintext: cstring; binlen: int; bytealen: var int): cstring {.\u000A    cdecl, dynlib: dllName, importc: \"PQescapeBytea\".}"
  }, 
  {
    "name": "pqunescapeBytea", 
    "type": "skProc", 
    "code": "proc pqunescapeBytea*(strtext: cstring; retbuflen: var int): cstring {.cdecl, \u000A    dynlib: dllName, importc: \"PQunescapeBytea\".}"
  }, 
  {
    "name": "pqprint", 
    "type": "skProc", 
    "code": "proc pqprint*(fout: File; res: PPGresult; ps: PPQprintOpt) {.cdecl, \u000A    dynlib: dllName, importc: \"PQprint\".}"
  }, 
  {
    "name": "pqdisplayTuples", 
    "type": "skProc", 
    "code": "proc pqdisplayTuples*(res: PPGresult; fp: File; fillAlign: int32; \u000A                      fieldSep: cstring; printHeader: int32; quiet: int32) {.\u000A    cdecl, dynlib: dllName, importc: \"PQdisplayTuples\".}"
  }, 
  {
    "name": "pqprintTuples", 
    "type": "skProc", 
    "code": "proc pqprintTuples*(res: PPGresult; fout: File; printAttName: int32; \u000A                    terseOutput: int32; width: int32) {.cdecl, dynlib: dllName, \u000A    importc: \"PQprintTuples\".}"
  }, 
  {
    "name": "lo_open", 
    "type": "skProc", 
    "code": "proc lo_open*(conn: PPGconn; lobjId: Oid; mode: int32): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"lo_open\".}"
  }, 
  {
    "name": "lo_close", 
    "type": "skProc", 
    "code": "proc lo_close*(conn: PPGconn; fd: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"lo_close\".}"
  }, 
  {
    "name": "lo_read", 
    "type": "skProc", 
    "code": "proc lo_read*(conn: PPGconn; fd: int32; buf: cstring; length: int): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"lo_read\".}"
  }, 
  {
    "name": "lo_write", 
    "type": "skProc", 
    "code": "proc lo_write*(conn: PPGconn; fd: int32; buf: cstring; length: int): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"lo_write\".}"
  }, 
  {
    "name": "lo_lseek", 
    "type": "skProc", 
    "code": "proc lo_lseek*(conn: PPGconn; fd: int32; offset: int32; whence: int32): int32 {.\u000A    cdecl, dynlib: dllName, importc: \"lo_lseek\".}"
  }, 
  {
    "name": "lo_creat", 
    "type": "skProc", 
    "code": "proc lo_creat*(conn: PPGconn; mode: int32): Oid {.cdecl, dynlib: dllName, \u000A    importc: \"lo_creat\".}"
  }, 
  {
    "name": "lo_tell", 
    "type": "skProc", 
    "code": "proc lo_tell*(conn: PPGconn; fd: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"lo_tell\".}"
  }, 
  {
    "name": "lo_unlink", 
    "type": "skProc", 
    "code": "proc lo_unlink*(conn: PPGconn; lobjId: Oid): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"lo_unlink\".}"
  }, 
  {
    "name": "lo_import", 
    "type": "skProc", 
    "code": "proc lo_import*(conn: PPGconn; filename: cstring): Oid {.cdecl, dynlib: dllName, \u000A    importc: \"lo_import\".}"
  }, 
  {
    "name": "lo_export", 
    "type": "skProc", 
    "code": "proc lo_export*(conn: PPGconn; lobjId: Oid; filename: cstring): int32 {.cdecl, \u000A    dynlib: dllName, importc: \"lo_export\".}"
  }, 
  {
    "name": "pqmblen", 
    "type": "skProc", 
    "code": "proc pqmblen*(s: cstring; encoding: int32): int32 {.cdecl, dynlib: dllName, \u000A    importc: \"PQmblen\".}"
  }, 
  {
    "name": "pqenv2encoding", 
    "type": "skProc", 
    "code": "proc pqenv2encoding*(): int32 {.cdecl, dynlib: dllName, \u000A                                importc: \"PQenv2encoding\".}"
  }
]