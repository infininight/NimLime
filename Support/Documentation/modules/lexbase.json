[
  {
    "comment": "This module implements a base object of a lexer with efficient buffer\u000A## handling. Only at line endings checks are necessary if the buffer\u000A## needs refilling."
  }, 
  {
    "name": "NewLines", 
    "type": "skConst", 
    "code": "NewLines* = {'\\x0D', '\\x0A'}"
  }, 
  {
    "name": "BaseLexer", 
    "type": "skType", 
    "description": "the base lexer. Inherit your lexer from this object.", 
    "code": "BaseLexer* = object of RootObj\u000A  bufpos*: int                ## the current position within the buffer\u000A  buf*: cstring               ## the buffer itself\u000A  bufLen*: int                ## length of buffer in characters\u000A  input: Stream               ## the input stream\u000A  lineNumber*: int            ## the current line number\u000A  sentinel: int\u000A  lineStart: int\u000A  fileOpened: bool\u000A"
  }, 
  {
    "name": "open", 
    "type": "skProc", 
    "description": "inits the TBaseLexer with a stream to read from", 
    "code": "proc open*(L: var BaseLexer; input: Stream; bufLen: int = 8192)"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "description": "closes the base lexer. This closes <cite>L</cite>'s associated stream too.", 
    "code": "proc close*(L: var BaseLexer)"
  }, 
  {
    "name": "getCurrentLine", 
    "type": "skProc", 
    "description": "retrieves the current line.", 
    "code": "proc getCurrentLine*(L: BaseLexer; marker: bool = true): string"
  }, 
  {
    "name": "getColNumber", 
    "type": "skProc", 
    "description": "retrieves the current column.", 
    "code": "proc getColNumber*(L: BaseLexer; pos: int): int"
  }, 
  {
    "name": "handleCR", 
    "type": "skProc", 
    "description": "Call this if you scanned over 'c' in the buffer; it returns the the position to continue the scanning from. <cite>pos</cite> must be the position of the 'c'.", 
    "code": "proc handleCR*(L: var BaseLexer; pos: int): int"
  }, 
  {
    "name": "handleLF", 
    "type": "skProc", 
    "description": "Call this if you scanned over 'L' in the buffer; it returns the the position to continue the scanning from. <cite>pos</cite> must be the position of the 'L'.", 
    "code": "proc handleLF*(L: var BaseLexer; pos: int): int"
  }
]