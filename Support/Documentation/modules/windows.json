[
  {
    "comment": "Define ``winUnicode`` before importing this module for the\u000A## Unicode version."
  }, 
  {
    "name": "PWideChar", 
    "type": "skType", 
    "code": "PWideChar* = ptr uint16"
  }, 
  {
    "name": "PCSTR", 
    "type": "skType", 
    "code": "PCSTR* = cstring"
  }, 
  {
    "name": "PKAFFINITY", 
    "type": "skType", 
    "code": "PKAFFINITY* = ptr KAFFINITY"
  }, 
  {
    "name": "TFILETIME", 
    "type": "skType", 
    "code": "TFILETIME* = FILETIME"
  }, 
  {
    "name": "DC_DATATYPE_PRODUCED", 
    "type": "skConst", 
    "code": "DC_DATATYPE_PRODUCED* = 21"
  }, 
  {
    "name": "LPBOOL", 
    "type": "skType", 
    "code": "LPBOOL* = ptr WINBOOL"
  }, 
  {
    "name": "LPCTSTR", 
    "type": "skType", 
    "code": "LPCTSTR* = PWideChar"
  }, 
  {
    "name": "LPPCWSTR", 
    "type": "skType", 
    "code": "LPPCWSTR* = ptr LPCWSTR"
  }, 
  {
    "name": "LPTSTR", 
    "type": "skType", 
    "code": "LPTSTR* = PWideChar"
  }, 
  {
    "name": "PSHORT", 
    "type": "skType", 
    "code": "PSHORT* = ptr SHORT"
  }, 
  {
    "name": "PTSTR", 
    "type": "skType", 
    "code": "PTSTR* = PWideChar"
  }, 
  {
    "name": "SERVICE_STATUS_HANDLE", 
    "type": "skType", 
    "code": "SERVICE_STATUS_HANDLE* = DWORD"
  }, 
  {
    "name": "BCHAR", 
    "type": "skType", 
    "code": "BCHAR* = int16"
  }, 
  {
    "name": "MEDIA_TYPE", 
    "type": "skType", 
    "code": "MEDIA_TYPE* = enum \u000A  Unknown, F5_1Pt2_512, F3_1Pt44_512, F3_2Pt88_512, F3_20Pt8_512, F3_720_512, \u000A  F5_360_512, F5_320_512, F5_320_1024, F5_180_512, F5_160_512, RemovableMedia, \u000A  FixedMedia"
  }, 
  {
    "name": "RASCS_PAUSED", 
    "type": "skConst", 
    "code": "RASCS_PAUSED* = 0x00001000"
  }, 
  {
    "name": "MakeIntResource", 
    "type": "skType", 
    "code": "MakeIntResource* = MakeIntResourceA"
  }, 
  {
    "name": "PFNPROCESSPOLICIES", 
    "type": "skType", 
    "code": "PFNPROCESSPOLICIES* = proc (para1: HWND; para2: LPCTSTR; para3: LPCTSTR; \u000A                            para4: LPCTSTR; para5: DWORD): WINBOOL {.stdcall.}"
  }, 
  {
    "name": "SC_GROUP_IDENTIFIERA", 
    "type": "skConst", 
    "code": "SC_GROUP_IDENTIFIERA* = \"+\""
  }, 
  {
    "name": "SC_GROUP_IDENTIFIER", 
    "type": "skConst", 
    "code": "SC_GROUP_IDENTIFIER* = SC_GROUP_IDENTIFIERW"
  }, 
  {
    "name": "LPCCSTYLEFLAGA", 
    "type": "skType", 
    "code": "LPCCSTYLEFLAGA* = ptr CCSTYLEFLAGA"
  }, 
  {
    "name": "CERT_E_CHAINING", 
    "type": "skConst", 
    "code": "CERT_E_CHAINING* = HRESULT(0x800B010A)"
  }, 
  {
    "name": "UNICODE_NULL", 
    "type": "skProc", 
    "code": "proc UNICODE_NULL*(): WCHAR"
  }, 
  {
    "name": "OBJ_ENHMETADC", 
    "type": "skConst", 
    "code": "OBJ_ENHMETADC* = 12"
  }, 
  {
    "name": "RT_MANIFEST", 
    "type": "skConst", 
    "code": "RT_MANIFEST* = cast[MAKEINTRESOURCE](24)"
  }, 
  {
    "name": "IDI_INFORMATION", 
    "type": "skConst", 
    "code": "IDI_INFORMATION* = IDI_ASTERISK"
  }, 
  {
    "name": "INVALID_FILE_ATTRIBUTES", 
    "type": "skConst", 
    "code": "INVALID_FILE_ATTRIBUTES* = ULONG(- 1)"
  }, 
  {
    "name": "TIME_FORCE24HOURFORMAT", 
    "type": "skConst", 
    "code": "TIME_FORCE24HOURFORMAT* = 8"
  }, 
  {
    "name": "HWND_BROADCAST", 
    "type": "skConst", 
    "code": "HWND_BROADCAST* = HWND(0x0000FFFF)"
  }, 
  {
    "name": "HKEY_DYN_DATA", 
    "type": "skConst", 
    "code": "HKEY_DYN_DATA* = HKEY(0x80000006)"
  }, 
  {
    "name": "HWND_TOPMOST", 
    "type": "skConst", 
    "code": "HWND_TOPMOST* = HWND(- 1)"
  }, 
  {
    "name": "VS_FILE_INFO", 
    "type": "skConst", 
    "code": "VS_FILE_INFO* = cast[MAKEINTRESOURCE](16)"
  }, 
  {
    "name": "WC_TREEVIEWA", 
    "type": "skConst", 
    "code": "WC_TREEVIEWA* = \"SysTreeView32\""
  }, 
  {
    "name": "WC_TREEVIEW", 
    "type": "skConst", 
    "code": "WC_TREEVIEW* = WC_TREEVIEWW"
  }, 
  {
    "name": "HINST_COMMCTRL", 
    "type": "skConst", 
    "code": "HINST_COMMCTRL* = HINST(- 1)"
  }, 
  {
    "name": "LPSTR_TEXTCALLBACKA", 
    "type": "skConst", 
    "code": "LPSTR_TEXTCALLBACKA* = cast[LPSTR](- 1)"
  }, 
  {
    "name": "LPSTR_TEXTCALLBACK", 
    "type": "skConst", 
    "code": "LPSTR_TEXTCALLBACK* = cast[LPWSTR](- 1)"
  }, 
  {
    "name": "I_IMAGECALLBACK", 
    "type": "skConst", 
    "code": "I_IMAGECALLBACK* = - 1"
  }, 
  {
    "name": "PTREEITEM", 
    "type": "skType", 
    "code": "PTREEITEM* = ptr TTREEITEM"
  }, 
  {
    "name": "TVI_SORT", 
    "type": "skConst", 
    "code": "TVI_SORT* = cast[HTREEITEM](0xFFFF0003)"
  }, 
  {
    "name": "SHAREVISTRINGA", 
    "type": "skConst", 
    "code": "SHAREVISTRINGA* = \"commdlg_ShareViolation\""
  }, 
  {
    "name": "SHAREVISTRING", 
    "type": "skConst", 
    "code": "SHAREVISTRING* = SHAREVISTRINGW"
  }, 
  {
    "name": "HWND_DESKTOP", 
    "type": "skConst", 
    "code": "HWND_DESKTOP* = HWND(0)"
  }, 
  {
    "name": "C3_LEXICAL", 
    "type": "skConst", 
    "code": "C3_LEXICAL* = 1024"
  }, 
  {
    "name": "GetFirstChild", 
    "type": "skProc", 
    "code": "proc GetFirstChild*(h: HWND): HWND"
  }, 
  {
    "name": "GetNextSibling", 
    "type": "skProc", 
    "code": "proc GetNextSibling*(h: HWND): HWND"
  }, 
  {
    "name": "GetWindowID", 
    "type": "skProc", 
    "code": "proc GetWindowID*(h: HWND): int32"
  }, 
  {
    "name": "SubclassWindow", 
    "type": "skProc", 
    "code": "proc SubclassWindow*(h: HWND; p: LONG): LONG"
  }, 
  {
    "name": "GET_WM_COMMAND_CMD", 
    "type": "skProc", 
    "code": "proc GET_WM_COMMAND_CMD*(w, L: int32): int32"
  }, 
  {
    "name": "GET_WM_COMMAND_ID", 
    "type": "skProc", 
    "code": "proc GET_WM_COMMAND_ID*(w, L: int32): int32"
  }, 
  {
    "name": "GET_WM_CTLCOLOR_HDC", 
    "type": "skProc", 
    "code": "proc GET_WM_CTLCOLOR_HDC*(w, L, msg: int32): HDC"
  }, 
  {
    "name": "GET_WM_CTLCOLOR_HWND", 
    "type": "skProc", 
    "code": "proc GET_WM_CTLCOLOR_HWND*(w, L, msg: int32): HWND"
  }, 
  {
    "name": "GET_WM_HSCROLL_CODE", 
    "type": "skProc", 
    "code": "proc GET_WM_HSCROLL_CODE*(w, L: int32): int32"
  }, 
  {
    "name": "GET_WM_HSCROLL_HWND", 
    "type": "skProc", 
    "code": "proc GET_WM_HSCROLL_HWND*(w, L: int32): HWND"
  }, 
  {
    "name": "GET_WM_HSCROLL_POS", 
    "type": "skProc", 
    "code": "proc GET_WM_HSCROLL_POS*(w, L: int32): int32"
  }, 
  {
    "name": "GET_WM_MDIACTIVATE_FACTIVATE", 
    "type": "skProc", 
    "code": "proc GET_WM_MDIACTIVATE_FACTIVATE*(h, a, b: int32): int32"
  }, 
  {
    "name": "GET_WM_MDIACTIVATE_HWNDACTIVATE", 
    "type": "skProc", 
    "code": "proc GET_WM_MDIACTIVATE_HWNDACTIVATE*(a, b: int32): HWND"
  }, 
  {
    "name": "GET_WM_MDIACTIVATE_HWNDDEACT", 
    "type": "skProc", 
    "code": "proc GET_WM_MDIACTIVATE_HWNDDEACT*(a, b: int32): HWND"
  }, 
  {
    "name": "GET_WM_VSCROLL_CODE", 
    "type": "skProc", 
    "code": "proc GET_WM_VSCROLL_CODE*(w, L: int32): int32"
  }, 
  {
    "name": "GET_WM_VSCROLL_HWND", 
    "type": "skProc", 
    "code": "proc GET_WM_VSCROLL_HWND*(w, L: int32): HWND"
  }, 
  {
    "name": "GET_WM_VSCROLL_POS", 
    "type": "skProc", 
    "code": "proc GET_WM_VSCROLL_POS*(w, L: int32): int32"
  }, 
  {
    "name": "PROCESSOR_ARCHITECTURE_PPC", 
    "type": "skConst", 
    "code": "PROCESSOR_ARCHITECTURE_PPC* = 3"
  }, 
  {
    "name": "SIZEICONIC", 
    "type": "skConst", 
    "code": "SIZEICONIC* = SIZE_MINIMIZED"
  }, 
  {
    "name": "EXCEPTION_WRITE_FAULT", 
    "type": "skConst", 
    "code": "EXCEPTION_WRITE_FAULT* = 1"
  }, 
  {
    "name": "EXCEPTION_EXECUTE_FAULT", 
    "type": "skConst", 
    "code": "EXCEPTION_EXECUTE_FAULT* = 2"
  }, 
  {
    "name": "CONTEXT_DEBUGGER", 
    "type": "skConst", 
    "code": "CONTEXT_DEBUGGER* = CONTEXT_FULL"
  }, 
  {
    "name": "CONTEXT_DEBUGGER", 
    "type": "skConst", 
    "code": "CONTEXT_DEBUGGER* = CONTEXT_FULL or CONTEXT_FLOATING_POINT"
  }, 
  {
    "name": "CONTEXT_EXCEPTION_REPORTING", 
    "type": "skConst", 
    "code": "CONTEXT_EXCEPTION_REPORTING* = 0x80000000"
  }, 
  {
    "name": "VT_RESERVED", 
    "type": "skConst", 
    "code": "VT_RESERVED* = 0x00008000"
  }, 
  {
    "name": "UISF_ACTIVE", 
    "type": "skConst", 
    "code": "UISF_ACTIVE* = 0x00000004"
  }, 
  {
    "name": "PDCB", 
    "type": "skType", 
    "code": "PDCB* = ptr DCB"
  }, 
  {
    "name": "bp_DCB_fDummy2", 
    "type": "skConst", 
    "code": "bp_DCB_fDummy2* = 15'i32"
  }, 
  {
    "name": "fBinary", 
    "type": "skProc", 
    "code": "proc fBinary*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fBinary", 
    "type": "skProc", 
    "code": "proc set_fBinary*(a: var DCB; fBinary: DWORD)"
  }, 
  {
    "name": "fParity", 
    "type": "skProc", 
    "code": "proc fParity*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fParity", 
    "type": "skProc", 
    "code": "proc set_fParity*(a: var DCB; fParity: DWORD)"
  }, 
  {
    "name": "fOutxCtsFlow", 
    "type": "skProc", 
    "code": "proc fOutxCtsFlow*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fOutxCtsFlow", 
    "type": "skProc", 
    "code": "proc set_fOutxCtsFlow*(a: var DCB; fOutxCtsFlow: DWORD)"
  }, 
  {
    "name": "fOutxDsrFlow", 
    "type": "skProc", 
    "code": "proc fOutxDsrFlow*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fOutxDsrFlow", 
    "type": "skProc", 
    "code": "proc set_fOutxDsrFlow*(a: var DCB; fOutxDsrFlow: DWORD)"
  }, 
  {
    "name": "fDtrControl", 
    "type": "skProc", 
    "code": "proc fDtrControl*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fDtrControl", 
    "type": "skProc", 
    "code": "proc set_fDtrControl*(a: var DCB; fDtrControl: DWORD)"
  }, 
  {
    "name": "fDsrSensitivity", 
    "type": "skProc", 
    "code": "proc fDsrSensitivity*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fDsrSensitivity", 
    "type": "skProc", 
    "code": "proc set_fDsrSensitivity*(a: var DCB; fDsrSensitivity: DWORD)"
  }, 
  {
    "name": "fTXContinueOnXoff", 
    "type": "skProc", 
    "code": "proc fTXContinueOnXoff*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fTXContinueOnXoff", 
    "type": "skProc", 
    "code": "proc set_fTXContinueOnXoff*(a: var DCB; fTXContinueOnXoff: DWORD)"
  }, 
  {
    "name": "fOutX", 
    "type": "skProc", 
    "code": "proc fOutX*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fOutX", 
    "type": "skProc", 
    "code": "proc set_fOutX*(a: var DCB; fOutX: DWORD)"
  }, 
  {
    "name": "fInX", 
    "type": "skProc", 
    "code": "proc fInX*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fInX", 
    "type": "skProc", 
    "code": "proc set_fInX*(a: var DCB; fInX: DWORD)"
  }, 
  {
    "name": "fErrorChar", 
    "type": "skProc", 
    "code": "proc fErrorChar*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fErrorChar", 
    "type": "skProc", 
    "code": "proc set_fErrorChar*(a: var DCB; fErrorChar: DWORD)"
  }, 
  {
    "name": "fNull", 
    "type": "skProc", 
    "code": "proc fNull*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fNull", 
    "type": "skProc", 
    "code": "proc set_fNull*(a: var DCB; fNull: DWORD)"
  }, 
  {
    "name": "fRtsControl", 
    "type": "skProc", 
    "code": "proc fRtsControl*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fRtsControl", 
    "type": "skProc", 
    "code": "proc set_fRtsControl*(a: var DCB; fRtsControl: DWORD)"
  }, 
  {
    "name": "fAbortOnError", 
    "type": "skProc", 
    "code": "proc fAbortOnError*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fAbortOnError", 
    "type": "skProc", 
    "code": "proc set_fAbortOnError*(a: var DCB; fAbortOnError: DWORD)"
  }, 
  {
    "name": "fDummy2", 
    "type": "skProc", 
    "code": "proc fDummy2*(a: var DCB): DWORD"
  }, 
  {
    "name": "set_fDummy2", 
    "type": "skProc", 
    "code": "proc set_fDummy2*(a: var DCB; fDummy2: DWORD)"
  }, 
  {
    "name": "PCOMSTAT", 
    "type": "skType", 
    "code": "PCOMSTAT* = ptr COMSTAT"
  }, 
  {
    "name": "bp_COMSTAT_fReserved", 
    "type": "skConst", 
    "code": "bp_COMSTAT_fReserved* = 7'i32"
  }, 
  {
    "name": "fCtsHold", 
    "type": "skProc", 
    "code": "proc fCtsHold*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fCtsHold", 
    "type": "skProc", 
    "code": "proc set_fCtsHold*(a: var COMSTAT; fCtsHold: DWORD)"
  }, 
  {
    "name": "fDsrHold", 
    "type": "skProc", 
    "code": "proc fDsrHold*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fDsrHold", 
    "type": "skProc", 
    "code": "proc set_fDsrHold*(a: var COMSTAT; fDsrHold: DWORD)"
  }, 
  {
    "name": "fRlsdHold", 
    "type": "skProc", 
    "code": "proc fRlsdHold*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fRlsdHold", 
    "type": "skProc", 
    "code": "proc set_fRlsdHold*(a: var COMSTAT; fRlsdHold: DWORD)"
  }, 
  {
    "name": "fXoffHold", 
    "type": "skProc", 
    "code": "proc fXoffHold*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fXoffHold", 
    "type": "skProc", 
    "code": "proc set_fXoffHold*(a: var COMSTAT; fXoffHold: DWORD)"
  }, 
  {
    "name": "fXoffSent", 
    "type": "skProc", 
    "code": "proc fXoffSent*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fXoffSent", 
    "type": "skProc", 
    "code": "proc set_fXoffSent*(a: var COMSTAT; fXoffSent: DWORD)"
  }, 
  {
    "name": "fEof", 
    "type": "skProc", 
    "code": "proc fEof*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fEof", 
    "type": "skProc", 
    "code": "proc set_fEof*(a: var COMSTAT; fEof: DWORD)"
  }, 
  {
    "name": "fTxim", 
    "type": "skProc", 
    "code": "proc fTxim*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fTxim", 
    "type": "skProc", 
    "code": "proc set_fTxim*(a: var COMSTAT; fTxim: DWORD)"
  }, 
  {
    "name": "fReserved", 
    "type": "skProc", 
    "code": "proc fReserved*(a: var COMSTAT): DWORD"
  }, 
  {
    "name": "set_fReserved", 
    "type": "skProc", 
    "code": "proc set_fReserved*(a: var COMSTAT; fReserved: DWORD)"
  }, 
  {
    "name": "TCONSOLESCREENBUFFERINFO", 
    "type": "skType", 
    "code": "TCONSOLESCREENBUFFERINFO* = CONSOLE_SCREEN_BUFFER_INFO"
  }, 
  {
    "name": "CONTEXT", 
    "type": "skType", 
    "code": "CONTEXT* {.final, pure.} = object \u000A  ContextFlags*: DWORD\u000A  Dr0*: DWORD\u000A  Dr1*: DWORD\u000A  Dr2*: DWORD\u000A  Dr3*: DWORD\u000A  Dr6*: DWORD\u000A  Dr7*: DWORD\u000A  FloatSave*: FLOATING_SAVE_AREA\u000A  SegGs*: DWORD\u000A  SegFs*: DWORD\u000A  SegEs*: DWORD\u000A  SegDs*: DWORD\u000A  Edi*: DWORD\u000A  Esi*: DWORD\u000A  Ebx*: DWORD\u000A  Edx*: DWORD\u000A  Ecx*: DWORD\u000A  Eax*: DWORD\u000A  Ebp*: DWORD\u000A  Eip*: DWORD\u000A  SegCs*: DWORD\u000A  EFlags*: DWORD\u000A  Esp*: DWORD\u000A  SegSs*: DWORD\u000A"
  }, 
  {
    "name": "PCONTEXT", 
    "type": "skType", 
    "code": "PCONTEXT* = ptr CONTEXT"
  }, 
  {
    "name": "PDDEACK", 
    "type": "skType", 
    "code": "PDDEACK* = ptr DDEACK"
  }, 
  {
    "name": "bp_DDEACK_fAck", 
    "type": "skConst", 
    "code": "bp_DDEACK_fAck* = 15'i16"
  }, 
  {
    "name": "bAppReturnCode", 
    "type": "skProc", 
    "code": "proc bAppReturnCode*(a: var DDEACK): int16"
  }, 
  {
    "name": "set_bAppReturnCode", 
    "type": "skProc", 
    "code": "proc set_bAppReturnCode*(a: var DDEACK; bAppReturnCode: int16)"
  }, 
  {
    "name": "reserved", 
    "type": "skProc", 
    "code": "proc reserved*(a: var DDEACK): int16"
  }, 
  {
    "name": "set_reserved", 
    "type": "skProc", 
    "code": "proc set_reserved*(a: var DDEACK; reserved: int16)"
  }, 
  {
    "name": "fBusy", 
    "type": "skProc", 
    "code": "proc fBusy*(a: var DDEACK): int16"
  }, 
  {
    "name": "set_fBusy", 
    "type": "skProc", 
    "code": "proc set_fBusy*(a: var DDEACK; fBusy: int16)"
  }, 
  {
    "name": "fAck", 
    "type": "skProc", 
    "code": "proc fAck*(a: var DDEACK): int16"
  }, 
  {
    "name": "set_fAck", 
    "type": "skProc", 
    "code": "proc set_fAck*(a: var DDEACK; fAck: int16)"
  }, 
  {
    "name": "PDDEADVISE", 
    "type": "skType", 
    "code": "PDDEADVISE* = ptr DDEADVISE"
  }, 
  {
    "name": "bp_DDEADVISE_fAckReq", 
    "type": "skConst", 
    "code": "bp_DDEADVISE_fAckReq* = 15'i16"
  }, 
  {
    "name": "reserved", 
    "type": "skProc", 
    "code": "proc reserved*(a: var DDEADVISE): int16"
  }, 
  {
    "name": "set_reserved", 
    "type": "skProc", 
    "code": "proc set_reserved*(a: var DDEADVISE; reserved: int16)"
  }, 
  {
    "name": "fDeferUpd", 
    "type": "skProc", 
    "code": "proc fDeferUpd*(a: var DDEADVISE): int16"
  }, 
  {
    "name": "set_fDeferUpd", 
    "type": "skProc", 
    "code": "proc set_fDeferUpd*(a: var DDEADVISE; fDeferUpd: int16)"
  }, 
  {
    "name": "fAckReq", 
    "type": "skProc", 
    "code": "proc fAckReq*(a: var DDEADVISE): int16"
  }, 
  {
    "name": "set_fAckReq", 
    "type": "skProc", 
    "code": "proc set_fAckReq*(a: var DDEADVISE; fAckReq: int16)"
  }, 
  {
    "name": "PDDEDATA", 
    "type": "skType", 
    "code": "PDDEDATA* = ptr DDEDATA"
  }, 
  {
    "name": "bp_DDEDATA_fAckReq", 
    "type": "skConst", 
    "code": "bp_DDEDATA_fAckReq* = 15'i16"
  }, 
  {
    "name": "unused", 
    "type": "skProc", 
    "code": "proc unused*(a: var DDEDATA): int16"
  }, 
  {
    "name": "set_unused", 
    "type": "skProc", 
    "code": "proc set_unused*(a: var DDEDATA; unused: int16)"
  }, 
  {
    "name": "fResponse", 
    "type": "skProc", 
    "code": "proc fResponse*(a: var DDEDATA): int16"
  }, 
  {
    "name": "set_fResponse", 
    "type": "skProc", 
    "code": "proc set_fResponse*(a: var DDEDATA; fResponse: int16)"
  }, 
  {
    "name": "fRelease", 
    "type": "skProc", 
    "code": "proc fRelease*(a: var DDEDATA): int16"
  }, 
  {
    "name": "set_fRelease", 
    "type": "skProc", 
    "code": "proc set_fRelease*(a: var DDEDATA; fRelease: int16)"
  }, 
  {
    "name": "reserved", 
    "type": "skProc", 
    "code": "proc reserved*(a: var DDEDATA): int16"
  }, 
  {
    "name": "set_reserved", 
    "type": "skProc", 
    "code": "proc set_reserved*(a: var DDEDATA; reserved: int16)"
  }, 
  {
    "name": "fAckReq", 
    "type": "skProc", 
    "code": "proc fAckReq*(a: var DDEDATA): int16"
  }, 
  {
    "name": "set_fAckReq", 
    "type": "skProc", 
    "code": "proc set_fAckReq*(a: var DDEDATA; fAckReq: int16)"
  }, 
  {
    "name": "PDDELN", 
    "type": "skType", 
    "code": "PDDELN* = ptr DDELN"
  }, 
  {
    "name": "bp_DDELN_fAckReq", 
    "type": "skConst", 
    "code": "bp_DDELN_fAckReq* = 15'i16"
  }, 
  {
    "name": "unused", 
    "type": "skProc", 
    "code": "proc unused*(a: var DDELN): int16"
  }, 
  {
    "name": "set_unused", 
    "type": "skProc", 
    "code": "proc set_unused*(a: var DDELN; unused: int16)"
  }, 
  {
    "name": "fRelease", 
    "type": "skProc", 
    "code": "proc fRelease*(a: var DDELN): int16"
  }, 
  {
    "name": "set_fRelease", 
    "type": "skProc", 
    "code": "proc set_fRelease*(a: var DDELN; fRelease: int16)"
  }, 
  {
    "name": "fDeferUpd", 
    "type": "skProc", 
    "code": "proc fDeferUpd*(a: var DDELN): int16"
  }, 
  {
    "name": "set_fDeferUpd", 
    "type": "skProc", 
    "code": "proc set_fDeferUpd*(a: var DDELN; fDeferUpd: int16)"
  }, 
  {
    "name": "fAckReq", 
    "type": "skProc", 
    "code": "proc fAckReq*(a: var DDELN): int16"
  }, 
  {
    "name": "set_fAckReq", 
    "type": "skProc", 
    "code": "proc set_fAckReq*(a: var DDELN; fAckReq: int16)"
  }, 
  {
    "name": "PDDEPOKE", 
    "type": "skType", 
    "code": "PDDEPOKE* = ptr DDEPOKE"
  }, 
  {
    "name": "bp_DDEPOKE_fReserved", 
    "type": "skConst", 
    "code": "bp_DDEPOKE_fReserved* = 14'i16"
  }, 
  {
    "name": "unused", 
    "type": "skProc", 
    "code": "proc unused*(a: var DDEPOKE): int16"
  }, 
  {
    "name": "set_unused", 
    "type": "skProc", 
    "code": "proc set_unused*(a: var DDEPOKE; unused: int16)"
  }, 
  {
    "name": "fRelease", 
    "type": "skProc", 
    "code": "proc fRelease*(a: var DDEPOKE): int16"
  }, 
  {
    "name": "set_fRelease", 
    "type": "skProc", 
    "code": "proc set_fRelease*(a: var DDEPOKE; fRelease: int16)"
  }, 
  {
    "name": "fReserved", 
    "type": "skProc", 
    "code": "proc fReserved*(a: var DDEPOKE): int16"
  }, 
  {
    "name": "set_fReserved", 
    "type": "skProc", 
    "code": "proc set_fReserved*(a: var DDEPOKE; fReserved: int16)"
  }, 
  {
    "name": "PDDEUP", 
    "type": "skType", 
    "code": "PDDEUP* = ptr DDEUP"
  }, 
  {
    "name": "bp_DDEUP_fAckReq", 
    "type": "skConst", 
    "code": "bp_DDEUP_fAckReq* = 15'i16"
  }, 
  {
    "name": "unused", 
    "type": "skProc", 
    "code": "proc unused*(a: var DDEUP): int16"
  }, 
  {
    "name": "set_unused", 
    "type": "skProc", 
    "code": "proc set_unused*(a: var DDEUP; unused: int16)"
  }, 
  {
    "name": "fAck", 
    "type": "skProc", 
    "code": "proc fAck*(a: var DDEUP): int16"
  }, 
  {
    "name": "set_fAck", 
    "type": "skProc", 
    "code": "proc set_fAck*(a: var DDEUP; fAck: int16)"
  }, 
  {
    "name": "fRelease", 
    "type": "skProc", 
    "code": "proc fRelease*(a: var DDEUP): int16"
  }, 
  {
    "name": "set_fRelease", 
    "type": "skProc", 
    "code": "proc set_fRelease*(a: var DDEUP; fRelease: int16)"
  }, 
  {
    "name": "fReserved", 
    "type": "skProc", 
    "code": "proc fReserved*(a: var DDEUP): int16"
  }, 
  {
    "name": "set_fReserved", 
    "type": "skProc", 
    "code": "proc set_fReserved*(a: var DDEUP; fReserved: int16)"
  }, 
  {
    "name": "fAckReq", 
    "type": "skProc", 
    "code": "proc fAckReq*(a: var DDEUP): int16"
  }, 
  {
    "name": "set_fAckReq", 
    "type": "skProc", 
    "code": "proc set_fAckReq*(a: var DDEUP; fAckReq: int16)"
  }, 
  {
    "name": "TLDTENTRY", 
    "type": "skType", 
    "code": "TLDTENTRY* = LDT_ENTRY"
  }, 
  {
    "name": "bp_LDT_ENTRY_BaseHi", 
    "type": "skConst", 
    "code": "bp_LDT_ENTRY_BaseHi* = 24'i32"
  }, 
  {
    "name": "MMRESULT", 
    "type": "skType", 
    "code": "MMRESULT* = int32"
  }, 
  {
    "name": "PTrackMouseEvent", 
    "type": "skType", 
    "code": "PTrackMouseEvent* = ptr TTrackMouseEvent"
  }, 
  {
    "name": "ACM_OPENA", 
    "type": "skConst", 
    "code": "ACM_OPENA* = 1124"
  }, 
  {
    "name": "ACM_OPEN", 
    "type": "skConst", 
    "code": "ACM_OPEN* = ACM_OPENW"
  }, 
  {
    "name": "HDM_SETITEMA", 
    "type": "skConst", 
    "code": "HDM_SETITEMA* = 4612"
  }, 
  {
    "name": "HDM_SETITEM", 
    "type": "skConst", 
    "code": "HDM_SETITEM* = HDM_SETITEMW"
  }, 
  {
    "name": "HDN_TRACKA", 
    "type": "skConst", 
    "code": "HDN_TRACKA* = - 308"
  }, 
  {
    "name": "HDN_TRACK", 
    "type": "skConst", 
    "code": "HDN_TRACK* = HDN_TRACKW"
  }, 
  {
    "name": "LVM_SETITEMTEXTA", 
    "type": "skConst", 
    "code": "LVM_SETITEMTEXTA* = 4142"
  }, 
  {
    "name": "LVM_SETITEMTEXT", 
    "type": "skConst", 
    "code": "LVM_SETITEMTEXT* = LVM_SETITEMTEXTW"
  }, 
  {
    "name": "LVN_SETDISPINFOA", 
    "type": "skConst", 
    "code": "LVN_SETDISPINFOA* = - 151"
  }, 
  {
    "name": "LVN_SETDISPINFO", 
    "type": "skConst", 
    "code": "LVN_SETDISPINFO* = LVN_SETDISPINFOW"
  }, 
  {
    "name": "PSM_SETTITLEA", 
    "type": "skConst", 
    "code": "PSM_SETTITLEA* = 1135"
  }, 
  {
    "name": "PSM_SETTITLE", 
    "type": "skConst", 
    "code": "PSM_SETTITLE* = PSM_SETTITLEW"
  }, 
  {
    "name": "SB_SETTEXTA", 
    "type": "skConst", 
    "code": "SB_SETTEXTA* = 1025"
  }, 
  {
    "name": "SB_SETTEXT", 
    "type": "skConst", 
    "code": "SB_SETTEXT* = SB_SETTEXTW"
  }, 
  {
    "name": "TB_SAVERESTOREA", 
    "type": "skConst", 
    "code": "TB_SAVERESTOREA* = 1050"
  }, 
  {
    "name": "TB_SAVERESTORE", 
    "type": "skConst", 
    "code": "TB_SAVERESTORE* = TB_SAVERESTOREW"
  }, 
  {
    "name": "TBN_GETBUTTONINFOA", 
    "type": "skConst", 
    "code": "TBN_GETBUTTONINFOA* = - 700"
  }, 
  {
    "name": "TBN_GETBUTTONINFO", 
    "type": "skConst", 
    "code": "TBN_GETBUTTONINFO* = TBN_GETBUTTONINFOW"
  }, 
  {
    "name": "TCM_SETITEMA", 
    "type": "skConst", 
    "code": "TCM_SETITEMA* = 4870"
  }, 
  {
    "name": "TCM_SETITEM", 
    "type": "skConst", 
    "code": "TCM_SETITEM* = TCM_SETITEMW"
  }, 
  {
    "name": "TTM_UPDATETIPTEXTA", 
    "type": "skConst", 
    "code": "TTM_UPDATETIPTEXTA* = 1036"
  }, 
  {
    "name": "TTM_UPDATETIPTEXT", 
    "type": "skConst", 
    "code": "TTM_UPDATETIPTEXT* = TTM_UPDATETIPTEXTW"
  }, 
  {
    "name": "TTN_NEEDTEXTA", 
    "type": "skConst", 
    "code": "TTN_NEEDTEXTA* = - 520"
  }, 
  {
    "name": "TTN_NEEDTEXT", 
    "type": "skConst", 
    "code": "TTN_NEEDTEXT* = TTN_NEEDTEXTW"
  }, 
  {
    "name": "TVM_SETITEMA", 
    "type": "skConst", 
    "code": "TVM_SETITEMA* = 4365"
  }, 
  {
    "name": "TVM_SETITEM", 
    "type": "skConst", 
    "code": "TVM_SETITEM* = TVM_SETITEMW"
  }, 
  {
    "name": "TVN_SETDISPINFOA", 
    "type": "skConst", 
    "code": "TVN_SETDISPINFOA* = - 404"
  }, 
  {
    "name": "TVN_SETDISPINFO", 
    "type": "skConst", 
    "code": "TVN_SETDISPINFO* = TVN_SETDISPINFOW"
  }, 
  {
    "name": "WM_XBUTTONDBLCLK", 
    "type": "skConst", 
    "code": "WM_XBUTTONDBLCLK* = 525"
  }, 
  {
    "name": "HALFPARAMBOOL", 
    "type": "skType", 
    "code": "HALFPARAMBOOL* = WINBOOL"
  }, 
  {
    "name": "TWMMouseActivate", 
    "type": "skType", 
    "code": "TWMMouseActivate* {.final, pure.} = object \u000A  Msg*: int\u000A  TopLevel*: HWND\u000A  HitTestCode*: int16\u000A  MouseMsg*: int16\u000A  Result*: int32\u000A"
  }, 
  {
    "name": "GetBinaryTypeA", 
    "type": "skProc", 
    "code": "proc GetBinaryTypeA*(lpApplicationName: LPCSTR; lpBinaryType: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeA\".}"
  }, 
  {
    "name": "GetShortPathNameA", 
    "type": "skProc", 
    "code": "proc GetShortPathNameA*(lpszLongPath: LPCSTR; lpszShortPath: LPSTR; \u000A                        cchBuffer: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "GetEnvironmentStringsA", 
    "type": "skProc", 
    "code": "proc GetEnvironmentStringsA*(): LPSTR {.stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "FreeEnvironmentStringsA", 
    "type": "skProc", 
    "code": "proc FreeEnvironmentStringsA*(para1: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "FormatMessageA", 
    "type": "skProc", 
    "code": "proc FormatMessageA*(dwFlags: DWORD; lpSource: LPCVOID; dwMessageId: DWORD; \u000A                     dwLanguageId: DWORD; lpBuffer: LPSTR; nSize: DWORD; \u000A                     Arguments: va_list): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "CreateMailslotA", 
    "type": "skProc", 
    "code": "proc CreateMailslotA*(lpName: LPCSTR; nMaxMessageSize: DWORD; \u000A                      lReadTimeout: DWORD; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "lstrcmpA", 
    "type": "skProc", 
    "code": "proc lstrcmpA*(lpString1: LPCSTR; lpString2: LPCSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "lstrcmpiA", 
    "type": "skProc", 
    "code": "proc lstrcmpiA*(lpString1: LPCSTR; lpString2: LPCSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "lstrcpynA", 
    "type": "skProc", 
    "code": "proc lstrcpynA*(lpString1: LPSTR; lpString2: LPCSTR; iMaxLength: int32): LPSTR {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "CreateMutexA", 
    "type": "skProc", 
    "code": "proc CreateMutexA*(lpMutexAttributes: LPSECURITY_ATTRIBUTES; \u000A                   bInitialOwner: WINBOOL; lpName: LPCSTR): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "OpenMutexA", 
    "type": "skProc", 
    "code": "proc OpenMutexA*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; lpName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "CreateEventA", 
    "type": "skProc", 
    "code": "proc CreateEventA*(lpEventAttributes: LPSECURITY_ATTRIBUTES; \u000A                   bManualReset: WINBOOL; bInitialState: WINBOOL; lpName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "OpenEventA", 
    "type": "skProc", 
    "code": "proc OpenEventA*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; lpName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "CreateSemaphoreA", 
    "type": "skProc", 
    "code": "proc CreateSemaphoreA*(lpSemaphoreAttributes: LPSECURITY_ATTRIBUTES; \u000A                       lInitialCount: LONG; lMaximumCount: LONG; lpName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "OpenSemaphoreA", 
    "type": "skProc", 
    "code": "proc OpenSemaphoreA*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                     lpName: LPCSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "CreateFileMappingA", 
    "type": "skProc", 
    "code": "proc CreateFileMappingA*(hFile: HANDLE; \u000A                         lpFileMappingAttributes: LPSECURITY_ATTRIBUTES; \u000A                         flProtect: DWORD; dwMaximumSizeHigh: DWORD; \u000A                         dwMaximumSizeLow: DWORD; lpName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "OpenFileMappingA", 
    "type": "skProc", 
    "code": "proc OpenFileMappingA*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                       lpName: LPCSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "GetLogicalDriveStringsA", 
    "type": "skProc", 
    "code": "proc GetLogicalDriveStringsA*(nBufferLength: DWORD; lpBuffer: LPSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "LoadLibraryA", 
    "type": "skProc", 
    "code": "proc LoadLibraryA*(lpLibFileName: LPCSTR): HINST {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "LoadLibraryExA", 
    "type": "skProc", 
    "code": "proc LoadLibraryExA*(lpLibFileName: LPCSTR; hFile: HANDLE; dwFlags: DWORD): HINST {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "GetModuleFileNameA", 
    "type": "skProc", 
    "code": "proc GetModuleFileNameA*(hModule: HINST; lpFilename: LPSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "GetModuleHandleA", 
    "type": "skProc", 
    "code": "proc GetModuleHandleA*(lpModuleName: LPCSTR): HMODULE {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "FatalAppExitA", 
    "type": "skProc", 
    "code": "proc FatalAppExitA*(uAction: WINUINT; lpMessageText: LPCSTR) {.stdcall, \u000A    dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "GetCommandLineA", 
    "type": "skProc", 
    "code": "proc GetCommandLineA*(): LPSTR {.stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "GetEnvironmentVariableA", 
    "type": "skProc", 
    "code": "proc GetEnvironmentVariableA*(lpName: LPCSTR; lpBuffer: LPSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "SetEnvironmentVariableA", 
    "type": "skProc", 
    "code": "proc SetEnvironmentVariableA*(lpName: LPCSTR; lpValue: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "ExpandEnvironmentStringsA", 
    "type": "skProc", 
    "code": "proc ExpandEnvironmentStringsA*(lpSrc: LPCSTR; lpDst: LPSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "OutputDebugStringA", 
    "type": "skProc", 
    "code": "proc OutputDebugStringA*(lpOutputString: LPCSTR) {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "FindResourceA", 
    "type": "skProc", 
    "code": "proc FindResourceA*(hModule: HINST; lpName: LPCSTR; lpType: LPCSTR): HRSRC {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "FindResourceExA", 
    "type": "skProc", 
    "code": "proc FindResourceExA*(hModule: HINST; lpType: LPCSTR; lpName: LPCSTR; \u000A                      wLanguage: int16): HRSRC {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "EnumResourceTypesA", 
    "type": "skProc", 
    "code": "proc EnumResourceTypesA*(hModule: HINST; lpEnumFunc: ENUMRESTYPEPROC; \u000A                         lParam: LONG): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc.}"
  }, 
  {
    "name": "EnumResourceNamesA", 
    "type": "skProc", 
    "code": "proc EnumResourceNamesA*(hModule: HINST; lpType: LPCSTR; \u000A                         lpEnumFunc: ENUMRESNAMEPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc.}"
  }, 
  {
    "name": "EnumResourceLanguagesA", 
    "type": "skProc", 
    "code": "proc EnumResourceLanguagesA*(hModule: HINST; lpType: LPCSTR; lpName: LPCSTR; \u000A                             lpEnumFunc: ENUMRESLANGPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumResourceLanguagesA\".}"
  }, 
  {
    "name": "BeginUpdateResourceA", 
    "type": "skProc", 
    "code": "proc BeginUpdateResourceA*(pFileName: LPCSTR; bDeleteExistingResources: WINBOOL): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BeginUpdateResourceA\".}"
  }, 
  {
    "name": "UpdateResourceA", 
    "type": "skProc", 
    "code": "proc UpdateResourceA*(hUpdate: HANDLE; lpType: LPCSTR; lpName: LPCSTR; \u000A                      wLanguage: int16; lpData: LPVOID; cbData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UpdateResourceA\".}"
  }, 
  {
    "name": "EndUpdateResourceA", 
    "type": "skProc", 
    "code": "proc EndUpdateResourceA*(hUpdate: HANDLE; fDiscard: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EndUpdateResourceA\".}"
  }, 
  {
    "name": "GlobalAddAtomA", 
    "type": "skProc", 
    "code": "proc GlobalAddAtomA*(lpString: LPCSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalAddAtomA\".}"
  }, 
  {
    "name": "GlobalFindAtomA", 
    "type": "skProc", 
    "code": "proc GlobalFindAtomA*(lpString: LPCSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalFindAtomA\".}"
  }, 
  {
    "name": "GlobalGetAtomNameA", 
    "type": "skProc", 
    "code": "proc GlobalGetAtomNameA*(nAtom: ATOM; lpBuffer: LPSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GlobalGetAtomNameA\".}"
  }, 
  {
    "name": "AddAtomA", 
    "type": "skProc", 
    "code": "proc AddAtomA*(lpString: LPCSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"AddAtomA\".}"
  }, 
  {
    "name": "FindAtomA", 
    "type": "skProc", 
    "code": "proc FindAtomA*(lpString: LPCSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindAtomA\".}"
  }, 
  {
    "name": "GetAtomNameA", 
    "type": "skProc", 
    "code": "proc GetAtomNameA*(nAtom: ATOM; lpBuffer: LPSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetAtomNameA\".}"
  }, 
  {
    "name": "GetProfileIntA", 
    "type": "skProc", 
    "code": "proc GetProfileIntA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; nDefault: WINT): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProfileIntA\".}"
  }, 
  {
    "name": "GetProfileStringA", 
    "type": "skProc", 
    "code": "proc GetProfileStringA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; lpDefault: LPCSTR; \u000A                        lpReturnedString: LPSTR; nSize: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProfileStringA\".}"
  }, 
  {
    "name": "WriteProfileStringA", 
    "type": "skProc", 
    "code": "proc WriteProfileStringA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; lpString: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteProfileStringA\".}"
  }, 
  {
    "name": "GetProfileSectionA", 
    "type": "skProc", 
    "code": "proc GetProfileSectionA*(lpAppName: LPCSTR; lpReturnedString: LPSTR; \u000A                         nSize: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProfileSectionA\".}"
  }, 
  {
    "name": "WriteProfileSectionA", 
    "type": "skProc", 
    "code": "proc WriteProfileSectionA*(lpAppName: LPCSTR; lpString: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteProfileSectionA\".}"
  }, 
  {
    "name": "GetPrivateProfileIntA", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileIntA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; \u000A                            nDefault: WINT; lpFileName: LPCSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileIntA\".}"
  }, 
  {
    "name": "GetPrivateProfileStringA", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileStringA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; \u000A                               lpDefault: LPCSTR; lpReturnedString: LPSTR; \u000A                               nSize: DWORD; lpFileName: LPCSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStringA\".}"
  }, 
  {
    "name": "WritePrivateProfileStringA", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileStringA*(lpAppName: LPCSTR; lpKeyName: LPCSTR; \u000A                                 lpString: LPCSTR; lpFileName: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WritePrivateProfileStringA\".}"
  }, 
  {
    "name": "GetPrivateProfileSectionA", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSectionA*(lpAppName: LPCSTR; lpReturnedString: LPSTR; \u000A                                nSize: DWORD; lpFileName: LPCSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionA\".}"
  }, 
  {
    "name": "WritePrivateProfileSectionA", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileSectionA*(lpAppName: LPCSTR; lpString: LPCSTR; \u000A                                  lpFileName: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WritePrivateProfileSectionA\".}"
  }, 
  {
    "name": "GetDriveTypeA", 
    "type": "skProc", 
    "code": "proc GetDriveTypeA*(lpRootPathName: LPCSTR): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDriveTypeA\".}"
  }, 
  {
    "name": "GetSystemDirectoryA", 
    "type": "skProc", 
    "code": "proc GetSystemDirectoryA*(lpBuffer: LPSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetSystemDirectoryA\".}"
  }, 
  {
    "name": "GetTempPathA", 
    "type": "skProc", 
    "code": "proc GetTempPathA*(nBufferLength: DWORD; lpBuffer: LPSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTempPathA\".}"
  }, 
  {
    "name": "GetTempFileNameA", 
    "type": "skProc", 
    "code": "proc GetTempFileNameA*(lpPathName: LPCSTR; lpPrefixString: LPCSTR; \u000A                       uUnique: WINUINT; lpTempFileName: LPSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTempFileNameA\".}"
  }, 
  {
    "name": "GetWindowsDirectoryA", 
    "type": "skProc", 
    "code": "proc GetWindowsDirectoryA*(lpBuffer: LPSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetWindowsDirectoryA\".}"
  }, 
  {
    "name": "SetCurrentDirectoryA", 
    "type": "skProc", 
    "code": "proc SetCurrentDirectoryA*(lpPathName: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCurrentDirectoryA\".}"
  }, 
  {
    "name": "GetCurrentDirectoryA", 
    "type": "skProc", 
    "code": "proc GetCurrentDirectoryA*(nBufferLength: DWORD; lpBuffer: LPSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCurrentDirectoryA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceA", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceA*(lpRootPathName: LPCSTR; lpSectorsPerCluster: LPDWORD; \u000A                        lpBytesPerSector: LPDWORD; \u000A                        lpNumberOfFreeClusters: LPDWORD; \u000A                        lpTotalNumberOfClusters: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceA\".}"
  }, 
  {
    "name": "CreateDirectoryA", 
    "type": "skProc", 
    "code": "proc CreateDirectoryA*(lpPathName: LPCSTR; \u000A                       lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryA\".}"
  }, 
  {
    "name": "CreateDirectoryExA", 
    "type": "skProc", 
    "code": "proc CreateDirectoryExA*(lpTemplateDirectory: LPCSTR; lpNewDirectory: LPCSTR; \u000A                         lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryExA\".}"
  }, 
  {
    "name": "RemoveDirectoryA", 
    "type": "skProc", 
    "code": "proc RemoveDirectoryA*(lpPathName: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"RemoveDirectoryA\".}"
  }, 
  {
    "name": "GetFullPathNameA", 
    "type": "skProc", 
    "code": "proc GetFullPathNameA*(lpFileName: LPCSTR; nBufferLength: DWORD; \u000A                       lpBuffer: LPSTR; lpFilePart: var LPSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetFullPathNameA\".}"
  }, 
  {
    "name": "DefineDosDeviceA", 
    "type": "skProc", 
    "code": "proc DefineDosDeviceA*(dwFlags: DWORD; lpDeviceName: LPCSTR; \u000A                       lpTargetPath: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DefineDosDeviceA\".}"
  }, 
  {
    "name": "QueryDosDeviceA", 
    "type": "skProc", 
    "code": "proc QueryDosDeviceA*(lpDeviceName: LPCSTR; lpTargetPath: LPSTR; ucchMax: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"QueryDosDeviceA\".}"
  }, 
  {
    "name": "CreateFileA", 
    "type": "skProc", 
    "code": "proc CreateFileA*(lpFileName: LPCSTR; dwDesiredAccess: DWORD; \u000A                  dwShareMode: DWORD; \u000A                  lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                  dwCreationDisposition: DWORD; dwFlagsAndAttributes: DWORD; \u000A                  hTemplateFile: HANDLE): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CreateFileA\".}"
  }, 
  {
    "name": "SetFileAttributesA", 
    "type": "skProc", 
    "code": "proc SetFileAttributesA*(lpFileName: LPCSTR; dwFileAttributes: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFileAttributesA\".}"
  }, 
  {
    "name": "GetFileAttributesA", 
    "type": "skProc", 
    "code": "proc GetFileAttributesA*(lpFileName: LPCSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetFileAttributesA\".}"
  }, 
  {
    "name": "GetCompressedFileSizeA", 
    "type": "skProc", 
    "code": "proc GetCompressedFileSizeA*(lpFileName: LPCSTR; lpFileSizeHigh: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCompressedFileSizeA\".}"
  }, 
  {
    "name": "DeleteFileA", 
    "type": "skProc", 
    "code": "proc DeleteFileA*(lpFileName: LPCSTR): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"DeleteFileA\".}"
  }, 
  {
    "name": "SearchPathA", 
    "type": "skProc", 
    "code": "proc SearchPathA*(lpPath: LPCSTR; lpFileName: LPCSTR; lpExtension: LPCSTR; \u000A                  nBufferLength: DWORD; lpBuffer: LPSTR; lpFilePart: LPSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SearchPathA\".}"
  }, 
  {
    "name": "CopyFileA", 
    "type": "skProc", 
    "code": "proc CopyFileA*(lpExistingFileName: LPCSTR; lpNewFileName: LPCSTR; \u000A                bFailIfExists: WINBOOL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CopyFileA\".}"
  }, 
  {
    "name": "MoveFileA", 
    "type": "skProc", 
    "code": "proc MoveFileA*(lpExistingFileName: LPCSTR; lpNewFileName: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MoveFileA\".}"
  }, 
  {
    "name": "MoveFileExA", 
    "type": "skProc", 
    "code": "proc MoveFileExA*(lpExistingFileName: LPCSTR; lpNewFileName: LPCSTR; \u000A                  dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"MoveFileExA\".}"
  }, 
  {
    "name": "CreateNamedPipeA", 
    "type": "skProc", 
    "code": "proc CreateNamedPipeA*(lpName: LPCSTR; dwOpenMode: DWORD; dwPipeMode: DWORD; \u000A                       nMaxInstances: DWORD; nOutBufferSize: DWORD; \u000A                       nInBufferSize: DWORD; nDefaultTimeOut: DWORD; \u000A                       lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateNamedPipeA\".}"
  }, 
  {
    "name": "GetNamedPipeHandleStateA", 
    "type": "skProc", 
    "code": "proc GetNamedPipeHandleStateA*(hNamedPipe: HANDLE; lpState: LPDWORD; \u000A                               lpCurInstances: LPDWORD; \u000A                               lpMaxCollectionCount: LPDWORD; \u000A                               lpCollectDataTimeout: LPDWORD; lpUserName: LPSTR; \u000A                               nMaxUserNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetNamedPipeHandleStateA\".}"
  }, 
  {
    "name": "CallNamedPipeA", 
    "type": "skProc", 
    "code": "proc CallNamedPipeA*(lpNamedPipeName: LPCSTR; lpInBuffer: LPVOID; \u000A                     nInBufferSize: DWORD; lpOutBuffer: LPVOID; \u000A                     nOutBufferSize: DWORD; lpBytesRead: LPDWORD; \u000A                     nTimeOut: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CallNamedPipeA\".}"
  }, 
  {
    "name": "WaitNamedPipeA", 
    "type": "skProc", 
    "code": "proc WaitNamedPipeA*(lpNamedPipeName: LPCSTR; nTimeOut: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitNamedPipeA\".}"
  }, 
  {
    "name": "SetVolumeLabelA", 
    "type": "skProc", 
    "code": "proc SetVolumeLabelA*(lpRootPathName: LPCSTR; lpVolumeName: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetVolumeLabelA\".}"
  }, 
  {
    "name": "GetVolumeInformationA", 
    "type": "skProc", 
    "code": "proc GetVolumeInformationA*(lpRootPathName: LPCSTR; lpVolumeNameBuffer: LPSTR; \u000A                            nVolumeNameSize: DWORD; \u000A                            lpVolumeSerialNumber: LPDWORD; \u000A                            lpMaximumComponentLength: LPDWORD; \u000A                            lpFileSystemFlags: LPDWORD; \u000A                            lpFileSystemNameBuffer: LPSTR; \u000A                            nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationA\".}"
  }, 
  {
    "name": "ClearEventLogA", 
    "type": "skProc", 
    "code": "proc ClearEventLogA*(hEventLog: HANDLE; lpBackupFileName: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ClearEventLogA\".}"
  }, 
  {
    "name": "BackupEventLogA", 
    "type": "skProc", 
    "code": "proc BackupEventLogA*(hEventLog: HANDLE; lpBackupFileName: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"BackupEventLogA\".}"
  }, 
  {
    "name": "OpenEventLogA", 
    "type": "skProc", 
    "code": "proc OpenEventLogA*(lpUNCServerName: LPCSTR; lpSourceName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenEventLogA\".}"
  }, 
  {
    "name": "RegisterEventSourceA", 
    "type": "skProc", 
    "code": "proc RegisterEventSourceA*(lpUNCServerName: LPCSTR; lpSourceName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterEventSourceA\".}"
  }, 
  {
    "name": "OpenBackupEventLogA", 
    "type": "skProc", 
    "code": "proc OpenBackupEventLogA*(lpUNCServerName: LPCSTR; lpFileName: LPCSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenBackupEventLogA\".}"
  }, 
  {
    "name": "ReadEventLogA", 
    "type": "skProc", 
    "code": "proc ReadEventLogA*(hEventLog: HANDLE; dwReadFlags: DWORD; \u000A                    dwRecordOffset: DWORD; lpBuffer: LPVOID; \u000A                    nNumberOfBytesToRead: DWORD; pnBytesRead: LPDWORD; \u000A                    pnMinNumberOfBytesNeeded: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ReadEventLogA\".}"
  }, 
  {
    "name": "ReportEventA", 
    "type": "skProc", 
    "code": "proc ReportEventA*(hEventLog: HANDLE; wType: int16; wCategory: int16; \u000A                   dwEventID: DWORD; lpUserSid: PSID; wNumStrings: int16; \u000A                   dwDataSize: DWORD; lpStrings: LPPCSTR; lpRawData: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReportEventA\".}"
  }, 
  {
    "name": "AccessCheckAndAuditAlarmA", 
    "type": "skProc", 
    "code": "proc AccessCheckAndAuditAlarmA*(SubsystemName: LPCSTR; HandleId: LPVOID; \u000A                                ObjectTypeName: LPSTR; ObjectName: LPSTR; \u000A                                SecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                DesiredAccess: DWORD; \u000A                                GenericMapping: PGENERIC_MAPPING; \u000A                                ObjectCreation: WINBOOL; GrantedAccess: LPDWORD; \u000A                                AccessStatus: LPBOOL; pfGenerateOnClose: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AccessCheckAndAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarmA", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarmA*(SubsystemName: LPCSTR; HandleId: LPVOID; \u000A                            ObjectTypeName: LPSTR; ObjectName: LPSTR; \u000A                            pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                            ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                            GrantedAccess: DWORD; Privileges: PPRIVILEGE_SET; \u000A                            ObjectCreation: WINBOOL; AccessGranted: WINBOOL; \u000A                            GenerateOnClose: LPBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarmA", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarmA*(SubsystemName: LPCSTR; HandleId: LPVOID; \u000A                                 ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                                 Privileges: PPRIVILEGE_SET; \u000A                                 AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectCloseAuditAlarmA", 
    "type": "skProc", 
    "code": "proc ObjectCloseAuditAlarmA*(SubsystemName: LPCSTR; HandleId: LPVOID; \u000A                             GenerateOnClose: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectCloseAuditAlarmA\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarmA", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarmA*(SubsystemName: LPCSTR; ServiceName: LPCSTR; \u000A                                   ClientToken: HANDLE; \u000A                                   Privileges: PPRIVILEGE_SET; \u000A                                   AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmA\".}"
  }, 
  {
    "name": "SetFileSecurityA", 
    "type": "skProc", 
    "code": "proc SetFileSecurityA*(lpFileName: LPCSTR; \u000A                       SecurityInformation: SECURITY_INFORMATION; \u000A                       pSecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetFileSecurityA\".}"
  }, 
  {
    "name": "GetFileSecurityA", 
    "type": "skProc", 
    "code": "proc GetFileSecurityA*(lpFileName: LPCSTR; \u000A                       RequestedInformation: SECURITY_INFORMATION; \u000A                       pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                       nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetFileSecurityA\".}"
  }, 
  {
    "name": "FindFirstChangeNotificationA", 
    "type": "skProc", 
    "code": "proc FindFirstChangeNotificationA*(lpPathName: LPCSTR; bWatchSubtree: WINBOOL; \u000A                                   dwNotifyFilter: DWORD): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FindFirstChangeNotificationA\".}"
  }, 
  {
    "name": "IsBadStringPtrA", 
    "type": "skProc", 
    "code": "proc IsBadStringPtrA*(lpsz: LPCSTR; ucchMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadStringPtrA\".}"
  }, 
  {
    "name": "LookupAccountSidA", 
    "type": "skProc", 
    "code": "proc LookupAccountSidA*(lpSystemName: LPCSTR; Sid: PSID; Name: LPSTR; \u000A                        cbName: LPDWORD; ReferencedDomainName: LPSTR; \u000A                        cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountSidA\".}"
  }, 
  {
    "name": "LookupAccountNameA", 
    "type": "skProc", 
    "code": "proc LookupAccountNameA*(lpSystemName: LPCSTR; lpAccountName: LPCSTR; Sid: PSID; \u000A                         cbSid: LPDWORD; ReferencedDomainName: LPSTR; \u000A                         cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeValueA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValueA*(lpSystemName: LPCSTR; lpName: LPCSTR; lpLuid: PLUID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeValueA\".}"
  }, 
  {
    "name": "LookupPrivilegeNameA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeNameA*(lpSystemName: LPCSTR; lpLuid: PLUID; lpName: LPSTR; \u000A                           cbName: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayNameA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayNameA*(lpSystemName: LPCSTR; lpName: LPCSTR; \u000A                                  lpDisplayName: LPSTR; cbDisplayName: LPDWORD; \u000A                                  lpLanguageId: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameA\".}"
  }, 
  {
    "name": "BuildCommDCBA", 
    "type": "skProc", 
    "code": "proc BuildCommDCBA*(lpDef: LPCSTR; lpDCB: LPDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBA\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeoutsA", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeoutsA*(lpDef: LPCSTR; lpDCB: LPDCB; \u000A                               lpCommTimeouts: LPCOMMTIMEOUTS): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsA\".}"
  }, 
  {
    "name": "CommConfigDialogA", 
    "type": "skProc", 
    "code": "proc CommConfigDialogA*(lpszName: LPCSTR; wnd: HWND; lpCC: LPCOMMCONFIG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogA\".}"
  }, 
  {
    "name": "GetDefaultCommConfigA", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfigA*(lpszName: LPCSTR; lpCC: LPCOMMCONFIG; \u000A                            lpdwSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigA\".}"
  }, 
  {
    "name": "SetDefaultCommConfigA", 
    "type": "skProc", 
    "code": "proc SetDefaultCommConfigA*(lpszName: LPCSTR; lpCC: LPCOMMCONFIG; dwSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetDefaultCommConfigA\".}"
  }, 
  {
    "name": "GetComputerNameA", 
    "type": "skProc", 
    "code": "proc GetComputerNameA*(lpBuffer: LPSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameA\".}"
  }, 
  {
    "name": "SetComputerNameA", 
    "type": "skProc", 
    "code": "proc SetComputerNameA*(lpComputerName: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetComputerNameA\".}"
  }, 
  {
    "name": "GetUserNameA", 
    "type": "skProc", 
    "code": "proc GetUserNameA*(lpBuffer: LPSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameA\".}"
  }, 
  {
    "name": "LoadKeyboardLayoutA", 
    "type": "skProc", 
    "code": "proc LoadKeyboardLayoutA*(pwszKLID: LPCSTR; Flags: WINUINT): HKL {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadKeyboardLayoutA\".}"
  }, 
  {
    "name": "GetKeyboardLayoutNameA", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayoutNameA*(pwszKLID: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetKeyboardLayoutNameA\".}"
  }, 
  {
    "name": "CreateDesktopA", 
    "type": "skProc", 
    "code": "proc CreateDesktopA*(lpszDesktop: LPSTR; lpszDevice: LPSTR; pDevmode: LPDEVMODE; \u000A                     dwFlags: DWORD; dwDesiredAccess: DWORD; \u000A                     lpsa: LPSECURITY_ATTRIBUTES): HDESK {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDesktopA\".}"
  }, 
  {
    "name": "OpenDesktopA", 
    "type": "skProc", 
    "code": "proc OpenDesktopA*(lpszDesktop: LPSTR; dwFlags: DWORD; fInherit: WINBOOL; \u000A                   dwDesiredAccess: DWORD): HDESK {.stdcall, dynlib: \"user32\", \u000A    importc: \"OpenDesktopA\".}"
  }, 
  {
    "name": "EnumDesktopsA", 
    "type": "skProc", 
    "code": "proc EnumDesktopsA*(hwinsta: HWINSTA; lpEnumFunc: DESKTOPENUMPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumDesktopsA\".}"
  }, 
  {
    "name": "CreateWindowStationA", 
    "type": "skProc", 
    "code": "proc CreateWindowStationA*(lpwinsta: LPSTR; dwReserved: DWORD; \u000A                           dwDesiredAccess: DWORD; lpsa: LPSECURITY_ATTRIBUTES): HWINSTA {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowStationA\".}"
  }, 
  {
    "name": "OpenWindowStationA", 
    "type": "skProc", 
    "code": "proc OpenWindowStationA*(lpszWinSta: LPSTR; fInherit: WINBOOL; \u000A                         dwDesiredAccess: DWORD): HWINSTA {.stdcall, \u000A    dynlib: \"user32\", importc: \"OpenWindowStationA\".}"
  }, 
  {
    "name": "EnumWindowStationsA", 
    "type": "skProc", 
    "code": "proc EnumWindowStationsA*(lpEnumFunc: ENUMWINDOWSTATIONPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumWindowStationsA\".}"
  }, 
  {
    "name": "GetUserObjectInformationA", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformationA*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                                nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationA\".}"
  }, 
  {
    "name": "SetUserObjectInformationA", 
    "type": "skProc", 
    "code": "proc SetUserObjectInformationA*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                                nLength: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetUserObjectInformationA\".}"
  }, 
  {
    "name": "RegisterWindowMessageA", 
    "type": "skProc", 
    "code": "proc RegisterWindowMessageA*(lpString: LPCSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterWindowMessageA\".}"
  }, 
  {
    "name": "GetMessageA", 
    "type": "skProc", 
    "code": "proc GetMessageA*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                  wMsgFilterMax: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMessageA\".}"
  }, 
  {
    "name": "DispatchMessageA", 
    "type": "skProc", 
    "code": "proc DispatchMessageA*(lpMsg: LPMSG): LONG {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageA\".}"
  }, 
  {
    "name": "PeekMessageA", 
    "type": "skProc", 
    "code": "proc PeekMessageA*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                   wMsgFilterMax: WINUINT; wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageA\".}"
  }, 
  {
    "name": "SendMessageA", 
    "type": "skProc", 
    "code": "proc SendMessageA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageA\".}"
  }, 
  {
    "name": "SendMessageTimeoutA", 
    "type": "skProc", 
    "code": "proc SendMessageTimeoutA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                          fuFlags: WINUINT; uTimeout: WINUINT; \u000A                          lpdwResult: LPDWORD): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendMessageTimeoutA\".}"
  }, 
  {
    "name": "SendNotifyMessageA", 
    "type": "skProc", 
    "code": "proc SendNotifyMessageA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendNotifyMessageA\".}"
  }, 
  {
    "name": "SendMessageCallbackA", 
    "type": "skProc", 
    "code": "proc SendMessageCallbackA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                           lpResultCallBack: SENDASYNCPROC; dwData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageCallbackA\".}"
  }, 
  {
    "name": "PostMessageA", 
    "type": "skProc", 
    "code": "proc PostMessageA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostMessageA\".}"
  }, 
  {
    "name": "PostThreadMessageA", 
    "type": "skProc", 
    "code": "proc PostThreadMessageA*(idThread: DWORD; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostThreadMessageA\".}"
  }, 
  {
    "name": "DefWindowProcA", 
    "type": "skProc", 
    "code": "proc DefWindowProcA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefWindowProcA\".}"
  }, 
  {
    "name": "CallWindowProcA", 
    "type": "skProc", 
    "code": "proc CallWindowProcA*(lpPrevWndFunc: WNDPROC; wnd: HWND; Msg: WINUINT; \u000A                      wp: WPARAM; lp: LPARAM): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallWindowProcA\".}"
  }, 
  {
    "name": "RegisterClassA", 
    "type": "skProc", 
    "code": "proc RegisterClassA*(lpWndClass: LPWNDCLASS): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassA\".}"
  }, 
  {
    "name": "UnregisterClassA", 
    "type": "skProc", 
    "code": "proc UnregisterClassA*(lpClassName: LPCSTR; hInstance: HINST): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnregisterClassA\".}"
  }, 
  {
    "name": "GetClassInfoA", 
    "type": "skProc", 
    "code": "proc GetClassInfoA*(hInstance: HINST; lpClassName: LPCSTR; \u000A                    lpWndClass: LPWNDCLASS): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassInfoA\".}"
  }, 
  {
    "name": "RegisterClassExA", 
    "type": "skProc", 
    "code": "proc RegisterClassExA*(para1: LPWNDCLASSEX): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassExA\".}"
  }, 
  {
    "name": "GetClassInfoExA", 
    "type": "skProc", 
    "code": "proc GetClassInfoExA*(para1: HINST; para2: LPCSTR; para3: LPWNDCLASSEX): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassInfoExA\".}"
  }, 
  {
    "name": "CreateWindowExA", 
    "type": "skProc", 
    "code": "proc CreateWindowExA*(dwExStyle: DWORD; lpClassName: LPCSTR; \u000A                      lpWindowName: LPCSTR; dwStyle: DWORD; X: int32; Y: int32; \u000A                      nWidth: int32; nHeight: int32; hWndParent: HWND; \u000A                      menu: HMENU; hInstance: HINST; lpParam: LPVOID): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowExA\".}"
  }, 
  {
    "name": "CreateDialogParamA", 
    "type": "skProc", 
    "code": "proc CreateDialogParamA*(hInstance: HINST; lpTemplateName: LPCSTR; \u000A                         hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                         dwInitParam: LPARAM): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateDialogParamA\".}"
  }, 
  {
    "name": "CreateDialogIndirectParamA", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectParamA*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                                 hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                                 dwInitParam: LPARAM): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDialogIndirectParamA\".}"
  }, 
  {
    "name": "DialogBoxParamA", 
    "type": "skProc", 
    "code": "proc DialogBoxParamA*(hInstance: HINST; lpTemplateName: LPCSTR; \u000A                      hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                      dwInitParam: LPARAM): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DialogBoxParamA\".}"
  }, 
  {
    "name": "DialogBoxIndirectParamA", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParamA*(hInstance: HINST; hDialogTemplate: LPCDLGTEMPLATE; \u000A                              hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                              dwInitParam: LPARAM): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamA\".}"
  }, 
  {
    "name": "SetDlgItemTextA", 
    "type": "skProc", 
    "code": "proc SetDlgItemTextA*(hDlg: HWND; nIDDlgItem: int32; lpString: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetDlgItemTextA\".}"
  }, 
  {
    "name": "GetDlgItemTextA", 
    "type": "skProc", 
    "code": "proc GetDlgItemTextA*(hDlg: HWND; nIDDlgItem: int32; lpString: LPSTR; \u000A                      nMaxCount: int32): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetDlgItemTextA\".}"
  }, 
  {
    "name": "SendDlgItemMessageA", 
    "type": "skProc", 
    "code": "proc SendDlgItemMessageA*(hDlg: HWND; nIDDlgItem: int32; Msg: WINUINT; \u000A                          wp: WPARAM; lp: LPARAM): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendDlgItemMessageA\".}"
  }, 
  {
    "name": "DefDlgProcA", 
    "type": "skProc", 
    "code": "proc DefDlgProcA*(hDlg: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefDlgProcA\".}"
  }, 
  {
    "name": "CallMsgFilterA", 
    "type": "skProc", 
    "code": "proc CallMsgFilterA*(lpMsg: LPMSG; nCode: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterA\".}"
  }, 
  {
    "name": "RegisterClipboardFormatA", 
    "type": "skProc", 
    "code": "proc RegisterClipboardFormatA*(lpszFormat: LPCSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterClipboardFormatA\".}"
  }, 
  {
    "name": "GetClipboardFormatNameA", 
    "type": "skProc", 
    "code": "proc GetClipboardFormatNameA*(format: WINUINT; lpszFormatName: LPSTR; \u000A                              cchMaxCount: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClipboardFormatNameA\".}"
  }, 
  {
    "name": "CharToOemA", 
    "type": "skProc", 
    "code": "proc CharToOemA*(lpszSrc: LPCSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharToOemA\".}"
  }, 
  {
    "name": "OemToCharA", 
    "type": "skProc", 
    "code": "proc OemToCharA*(lpszSrc: LPCSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OemToCharA\".}"
  }, 
  {
    "name": "CharToOemBuffA", 
    "type": "skProc", 
    "code": "proc CharToOemBuffA*(lpszSrc: LPCSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CharToOemBuffA\".}"
  }, 
  {
    "name": "OemToCharBuffA", 
    "type": "skProc", 
    "code": "proc OemToCharBuffA*(lpszSrc: LPCSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"OemToCharBuffA\".}"
  }, 
  {
    "name": "CharUpperA", 
    "type": "skProc", 
    "code": "proc CharUpperA*(lpsz: LPSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"CharUpperA\".}"
  }, 
  {
    "name": "CharUpperBuffA", 
    "type": "skProc", 
    "code": "proc CharUpperBuffA*(lpsz: LPSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharUpperBuffA\".}"
  }, 
  {
    "name": "CharLowerA", 
    "type": "skProc", 
    "code": "proc CharLowerA*(lpsz: LPSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"CharLowerA\".}"
  }, 
  {
    "name": "CharLowerBuffA", 
    "type": "skProc", 
    "code": "proc CharLowerBuffA*(lpsz: LPSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharLowerBuffA\".}"
  }, 
  {
    "name": "CharNextA", 
    "type": "skProc", 
    "code": "proc CharNextA*(lpsz: LPCSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"CharNextA\".}"
  }, 
  {
    "name": "CharPrevA", 
    "type": "skProc", 
    "code": "proc CharPrevA*(lpszStart: LPCSTR; lpszCurrent: LPCSTR): LPSTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharPrevA\".}"
  }, 
  {
    "name": "IsCharAlphaA", 
    "type": "skProc", 
    "code": "proc IsCharAlphaA*(ch: char): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharAlphaA\".}"
  }, 
  {
    "name": "IsCharAlphaNumericA", 
    "type": "skProc", 
    "code": "proc IsCharAlphaNumericA*(ch: char): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharAlphaNumericA\".}"
  }, 
  {
    "name": "IsCharUpperA", 
    "type": "skProc", 
    "code": "proc IsCharUpperA*(ch: char): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharUpperA\".}"
  }, 
  {
    "name": "IsCharLowerA", 
    "type": "skProc", 
    "code": "proc IsCharLowerA*(ch: char): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharLowerA\".}"
  }, 
  {
    "name": "GetKeyNameTextA", 
    "type": "skProc", 
    "code": "proc GetKeyNameTextA*(lParam: LONG; lpString: LPSTR; nSize: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetKeyNameTextA\".}"
  }, 
  {
    "name": "VkKeyScanA", 
    "type": "skProc", 
    "code": "proc VkKeyScanA*(ch: char): SHORT {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"VkKeyScanA\".}"
  }, 
  {
    "name": "VkKeyScanExA", 
    "type": "skProc", 
    "code": "proc VkKeyScanExA*(ch: char; dwhkl: HKL): SHORT {.stdcall, dynlib: \"user32\", \u000A    importc: \"VkKeyScanExA\".}"
  }, 
  {
    "name": "MapVirtualKeyA", 
    "type": "skProc", 
    "code": "proc MapVirtualKeyA*(uCode: WINUINT; uMapType: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"MapVirtualKeyA\".}"
  }, 
  {
    "name": "MapVirtualKeyExA", 
    "type": "skProc", 
    "code": "proc MapVirtualKeyExA*(uCode: WINUINT; uMapType: WINUINT; dwhkl: HKL): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"MapVirtualKeyExA\".}"
  }, 
  {
    "name": "LoadAcceleratorsA", 
    "type": "skProc", 
    "code": "proc LoadAcceleratorsA*(hInstance: HINST; lpTableName: LPCSTR): HACCEL {.\u000A    stdcall, dynlib: \"user32\", importc: \"LoadAcceleratorsA\".}"
  }, 
  {
    "name": "CreateAcceleratorTableA", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTableA*(para1: LPACCEL; para2: int32): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableA\".}"
  }, 
  {
    "name": "CopyAcceleratorTableA", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTableA*(hAccelSrc: HACCEL; lpAccelDst: LPACCEL; \u000A                            cAccelEntries: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyAcceleratorTableA\".}"
  }, 
  {
    "name": "TranslateAcceleratorA", 
    "type": "skProc", 
    "code": "proc TranslateAcceleratorA*(wnd: HWND; hAccTable: HACCEL; lpMsg: LPMSG): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorA\".}"
  }, 
  {
    "name": "LoadMenuA", 
    "type": "skProc", 
    "code": "proc LoadMenuA*(hInstance: HINST; lpMenuName: LPCSTR): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuA\".}"
  }, 
  {
    "name": "LoadMenuIndirectA", 
    "type": "skProc", 
    "code": "proc LoadMenuIndirectA*(lpMenuTemplate: LPMENUTEMPLATE): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuIndirectA\".}"
  }, 
  {
    "name": "ChangeMenuA", 
    "type": "skProc", 
    "code": "proc ChangeMenuA*(menu: HMENU; cmd: WINUINT; lpszNewItem: LPCSTR; \u000A                  cmdInsert: WINUINT; flags: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ChangeMenuA\".}"
  }, 
  {
    "name": "GetMenuStringA", 
    "type": "skProc", 
    "code": "proc GetMenuStringA*(menu: HMENU; uIDItem: WINUINT; lpString: LPSTR; \u000A                     nMaxCount: int32; uFlag: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuStringA\".}"
  }, 
  {
    "name": "InsertMenuA", 
    "type": "skProc", 
    "code": "proc InsertMenuA*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                  uIDNewItem: WINUINT; lpNewItem: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuA\".}"
  }, 
  {
    "name": "AppendMenuA", 
    "type": "skProc", 
    "code": "proc AppendMenuA*(menu: HMENU; uFlags: WINUINT; uIDNewItem: WINUINT; \u000A                  lpNewItem: LPCSTR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"AppendMenuA\".}"
  }, 
  {
    "name": "ModifyMenuA", 
    "type": "skProc", 
    "code": "proc ModifyMenuA*(hMnu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                  uIDNewItem: WINUINT; lpNewItem: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ModifyMenuA\".}"
  }, 
  {
    "name": "InsertMenuItemA", 
    "type": "skProc", 
    "code": "proc InsertMenuItemA*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                      para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuItemA\".}"
  }, 
  {
    "name": "GetMenuItemInfoA", 
    "type": "skProc", 
    "code": "proc GetMenuItemInfoA*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                       para4: LPMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuItemInfoA\".}"
  }, 
  {
    "name": "SetMenuItemInfoA", 
    "type": "skProc", 
    "code": "proc SetMenuItemInfoA*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                       para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetMenuItemInfoA\".}"
  }, 
  {
    "name": "DrawTextA", 
    "type": "skProc", 
    "code": "proc DrawTextA*(hDC: HDC; lpString: LPCSTR; nCount: int32; lpRect: LPRECT; \u000A                uFormat: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawTextA\".}"
  }, 
  {
    "name": "DrawTextExA", 
    "type": "skProc", 
    "code": "proc DrawTextExA*(para1: HDC; para2: LPSTR; para3: int32; para4: LPRECT; \u000A                  para5: WINUINT; para6: LPDRAWTEXTPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawTextExA\".}"
  }, 
  {
    "name": "GrayStringA", 
    "type": "skProc", 
    "code": "proc GrayStringA*(hDC: HDC; hBrush: HBRUSH; lpOutputFunc: GRAYSTRINGPROC; \u000A                  lpData: LPARAM; nCount: int32; X: int32; Y: int32; \u000A                  nWidth: int32; nHeight: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GrayStringA\".}"
  }, 
  {
    "name": "DrawStateA", 
    "type": "skProc", 
    "code": "proc DrawStateA*(para1: HDC; para2: HBRUSH; para3: DRAWSTATEPROC; para4: LPARAM; \u000A                 para5: WPARAM; para6: int32; para7: int32; para8: int32; \u000A                 para9: int32; para10: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawStateA\".}"
  }, 
  {
    "name": "TabbedTextOutA", 
    "type": "skProc", 
    "code": "proc TabbedTextOutA*(hDC: HDC; X: int32; Y: int32; lpString: LPCSTR; \u000A                     nCount: int32; nTabPositions: int32; \u000A                     lpnTabStopPositions: LPINT; nTabOrigin: int32): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"TabbedTextOutA\".}"
  }, 
  {
    "name": "GetTabbedTextExtentA", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtentA*(hDC: HDC; lpString: LPCSTR; nCount: int32; \u000A                           nTabPositions: int32; lpnTabStopPositions: LPINT): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetTabbedTextExtentA\".}"
  }, 
  {
    "name": "SetPropA", 
    "type": "skProc", 
    "code": "proc SetPropA*(wnd: HWND; lpString: LPCSTR; hData: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetPropA\".}"
  }, 
  {
    "name": "GetPropA", 
    "type": "skProc", 
    "code": "proc GetPropA*(wnd: HWND; lpString: LPCSTR): HANDLE {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetPropA\".}"
  }, 
  {
    "name": "RemovePropA", 
    "type": "skProc", 
    "code": "proc RemovePropA*(wnd: HWND; lpString: LPCSTR): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"RemovePropA\".}"
  }, 
  {
    "name": "EnumPropsExA", 
    "type": "skProc", 
    "code": "proc EnumPropsExA*(wnd: HWND; lpEnumFunc: PROPENUMPROCEX; lp: LPARAM): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumPropsExA\".}"
  }, 
  {
    "name": "EnumPropsA", 
    "type": "skProc", 
    "code": "proc EnumPropsA*(wnd: HWND; lpEnumFunc: PROPENUMPROC): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumPropsA\".}"
  }, 
  {
    "name": "SetWindowTextA", 
    "type": "skProc", 
    "code": "proc SetWindowTextA*(wnd: HWND; lpString: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowTextA\".}"
  }, 
  {
    "name": "GetWindowTextA", 
    "type": "skProc", 
    "code": "proc GetWindowTextA*(wnd: HWND; lpString: LPSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowTextA\".}"
  }, 
  {
    "name": "GetWindowTextLengthA", 
    "type": "skProc", 
    "code": "proc GetWindowTextLengthA*(wnd: HWND): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowTextLengthA\".}"
  }, 
  {
    "name": "MessageBoxA", 
    "type": "skProc", 
    "code": "proc MessageBoxA*(wnd: HWND; lpText: LPCSTR; lpCaption: LPCSTR; uType: int): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"MessageBoxA\".}"
  }, 
  {
    "name": "MessageBoxExA", 
    "type": "skProc", 
    "code": "proc MessageBoxExA*(wnd: HWND; lpText: LPCSTR; lpCaption: LPCSTR; \u000A                    uType: WINUINT; wLanguageId: int16): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxExA\".}"
  }, 
  {
    "name": "MessageBoxIndirectA", 
    "type": "skProc", 
    "code": "proc MessageBoxIndirectA*(para1: LPMSGBOXPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxIndirectA\".}"
  }, 
  {
    "name": "GetWindowLongA", 
    "type": "skProc", 
    "code": "proc GetWindowLongA*(wnd: HWND; nIndex: int32): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowLongA\".}"
  }, 
  {
    "name": "SetWindowLongA", 
    "type": "skProc", 
    "code": "proc SetWindowLongA*(wnd: HWND; nIndex: int32; dwNewLong: LONG): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowLongA\".}"
  }, 
  {
    "name": "GetClassLongA", 
    "type": "skProc", 
    "code": "proc GetClassLongA*(wnd: HWND; nIndex: int32): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassLongA\".}"
  }, 
  {
    "name": "SetClassLongA", 
    "type": "skProc", 
    "code": "proc SetClassLongA*(wnd: HWND; nIndex: int32; dwNewLong: LONG): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetClassLongA\".}"
  }, 
  {
    "name": "GetWindowLongPtrA", 
    "type": "skProc", 
    "code": "proc GetWindowLongPtrA*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowLongPtrA\".}"
  }, 
  {
    "name": "SetWindowLongPtrA", 
    "type": "skProc", 
    "code": "proc SetWindowLongPtrA*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetWindowLongPtrA\".}"
  }, 
  {
    "name": "GetClassLongPtrA", 
    "type": "skProc", 
    "code": "proc GetClassLongPtrA*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassLongPtrA\".}"
  }, 
  {
    "name": "SetClassLongPtrA", 
    "type": "skProc", 
    "code": "proc SetClassLongPtrA*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetClassLongPtrA\".}"
  }, 
  {
    "name": "FindWindowA", 
    "type": "skProc", 
    "code": "proc FindWindowA*(lpClassName: LPCSTR; lpWindowName: LPCSTR): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"FindWindowA\".}"
  }, 
  {
    "name": "FindWindowExA", 
    "type": "skProc", 
    "code": "proc FindWindowExA*(para1: HWND; para2: HWND; para3: LPCSTR; para4: LPCSTR): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"FindWindowExA\".}"
  }, 
  {
    "name": "GetClassNameA", 
    "type": "skProc", 
    "code": "proc GetClassNameA*(wnd: HWND; lpClassName: LPSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassNameA\".}"
  }, 
  {
    "name": "SetWindowsHookExA", 
    "type": "skProc", 
    "code": "proc SetWindowsHookExA*(idHook: int32; lpfn: HOOKPROC; hmod: HINST; \u000A                        dwThreadId: DWORD): HHOOK {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetWindowsHookExA\".}"
  }, 
  {
    "name": "LoadBitmapA", 
    "type": "skProc", 
    "code": "proc LoadBitmapA*(hInstance: HINST; lpBitmapName: LPCSTR): HBITMAP {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadBitmapA\".}"
  }, 
  {
    "name": "LoadCursorA", 
    "type": "skProc", 
    "code": "proc LoadCursorA*(hInstance: HINST; lpCursorName: LPCSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorA\".}"
  }, 
  {
    "name": "LoadCursorFromFileA", 
    "type": "skProc", 
    "code": "proc LoadCursorFromFileA*(lpFileName: LPCSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorFromFileA\".}"
  }, 
  {
    "name": "LoadIconA", 
    "type": "skProc", 
    "code": "proc LoadIconA*(hInstance: HINST; lpIconName: LPCSTR): HICON {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadIconA\".}"
  }, 
  {
    "name": "LoadImageA", 
    "type": "skProc", 
    "code": "proc LoadImageA*(para1: HINST; para2: LPCSTR; para3: WINUINT; para4: int32; \u000A                 para5: int32; para6: WINUINT): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadImageA\".}"
  }, 
  {
    "name": "LoadStringA", 
    "type": "skProc", 
    "code": "proc LoadStringA*(hInstance: HINST; uID: WINUINT; lpBuffer: LPSTR; \u000A                  nBufferMax: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"LoadStringA\".}"
  }, 
  {
    "name": "IsDialogMessageA", 
    "type": "skProc", 
    "code": "proc IsDialogMessageA*(hDlg: HWND; lpMsg: LPMSG): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageA\".}"
  }, 
  {
    "name": "DlgDirListA", 
    "type": "skProc", 
    "code": "proc DlgDirListA*(hDlg: HWND; lpPathSpec: LPSTR; nIDListBox: int32; \u000A                  nIDStaticPath: int32; uFileType: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirListA\".}"
  }, 
  {
    "name": "DlgDirSelectExA", 
    "type": "skProc", 
    "code": "proc DlgDirSelectExA*(hDlg: HWND; lpString: LPSTR; nCount: int32; \u000A                      nIDListBox: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DlgDirSelectExA\".}"
  }, 
  {
    "name": "DlgDirListComboBoxA", 
    "type": "skProc", 
    "code": "proc DlgDirListComboBoxA*(hDlg: HWND; lpPathSpec: LPSTR; nIDComboBox: int32; \u000A                          nIDStaticPath: int32; uFiletype: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"DlgDirListComboBoxA\".}"
  }, 
  {
    "name": "DlgDirSelectComboBoxExA", 
    "type": "skProc", 
    "code": "proc DlgDirSelectComboBoxExA*(hDlg: HWND; lpString: LPSTR; nCount: int32; \u000A                              nIDComboBox: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirSelectComboBoxExA\".}"
  }, 
  {
    "name": "DefFrameProcA", 
    "type": "skProc", 
    "code": "proc DefFrameProcA*(wnd: HWND; hWndMDIClient: HWND; uMsg: WINUINT; wp: WPARAM; \u000A                    lp: LPARAM): LRESULT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DefFrameProcA\".}"
  }, 
  {
    "name": "DefMDIChildProcA", 
    "type": "skProc", 
    "code": "proc DefMDIChildProcA*(wnd: HWND; uMsg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefMDIChildProcA\".}"
  }, 
  {
    "name": "CreateMDIWindowA", 
    "type": "skProc", 
    "code": "proc CreateMDIWindowA*(lpClassName: LPSTR; lpWindowName: LPSTR; dwStyle: DWORD; \u000A                       X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                       hWndParent: HWND; hInstance: HINST; lp: LPARAM): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateMDIWindowA\".}"
  }, 
  {
    "name": "WinHelpA", 
    "type": "skProc", 
    "code": "proc WinHelpA*(hWndMain: HWND; lpszHelp: LPCSTR; uCommand: WINUINT; \u000A               dwData: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"WinHelpA\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsA", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsA*(lpDevMode: LPDEVMODE; dwFlags: DWORD): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsA\".}"
  }, 
  {
    "name": "EnumDisplaySettingsA", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettingsA*(lpszDeviceName: LPCSTR; iModeNum: DWORD; \u000A                           lpDevMode: LPDEVMODE): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsA\".}"
  }, 
  {
    "name": "SystemParametersInfoA", 
    "type": "skProc", 
    "code": "proc SystemParametersInfoA*(uiAction: WINUINT; uiParam: WINUINT; pvParam: PVOID; \u000A                            fWinIni: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SystemParametersInfoA\".}"
  }, 
  {
    "name": "AddFontResourceA", 
    "type": "skProc", 
    "code": "proc AddFontResourceA*(para1: LPCSTR): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"AddFontResourceA\".}"
  }, 
  {
    "name": "CopyMetaFileA", 
    "type": "skProc", 
    "code": "proc CopyMetaFileA*(para1: HMETAFILE; para2: LPCSTR): HMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CopyMetaFileA\".}"
  }, 
  {
    "name": "CreateFontA", 
    "type": "skProc", 
    "code": "proc CreateFontA*(para1: int32; para2: int32; para3: int32; para4: int32; \u000A                  para5: int32; para6: DWORD; para7: DWORD; para8: DWORD; \u000A                  para9: DWORD; para10: DWORD; para11: DWORD; para12: DWORD; \u000A                  para13: DWORD; para14: LPCSTR): HFONT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateFontA\".}"
  }, 
  {
    "name": "CreateFontIndirectA", 
    "type": "skProc", 
    "code": "proc CreateFontIndirectA*(para1: LPLOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectA\".}"
  }, 
  {
    "name": "CreateFontIndirectA", 
    "type": "skProc", 
    "code": "proc CreateFontIndirectA*(para1: var LOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectA\".}"
  }, 
  {
    "name": "CreateICA", 
    "type": "skProc", 
    "code": "proc CreateICA*(para1: LPCSTR; para2: LPCSTR; para3: LPCSTR; para4: LPDEVMODE): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateICA\".}"
  }, 
  {
    "name": "CreateMetaFileA", 
    "type": "skProc", 
    "code": "proc CreateMetaFileA*(para1: LPCSTR): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateMetaFileA\".}"
  }, 
  {
    "name": "CreateScalableFontResourceA", 
    "type": "skProc", 
    "code": "proc CreateScalableFontResourceA*(para1: DWORD; para2: LPCSTR; para3: LPCSTR; \u000A                                  para4: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateScalableFontResourceA\".}"
  }, 
  {
    "name": "EnumFontFamiliesExA", 
    "type": "skProc", 
    "code": "proc EnumFontFamiliesExA*(para1: HDC; para2: LPLOGFONT; para3: FONTENUMEXPROC; \u000A                          para4: LPARAM; para5: DWORD): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"EnumFontFamiliesExA\".}"
  }, 
  {
    "name": "EnumFontFamiliesA", 
    "type": "skProc", 
    "code": "proc EnumFontFamiliesA*(para1: HDC; para2: LPCSTR; para3: FONTENUMPROC; \u000A                        para4: LPARAM): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumFontFamiliesA\".}"
  }, 
  {
    "name": "EnumFontsA", 
    "type": "skProc", 
    "code": "proc EnumFontsA*(para1: HDC; para2: LPCSTR; para3: ENUMFONTSPROC; para4: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumFontsA\".}"
  }, 
  {
    "name": "EnumFontsA", 
    "type": "skProc", 
    "code": "proc EnumFontsA*(para1: HDC; para2: LPCSTR; para3: ENUMFONTSPROC; para4: pointer): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumFontsA\".}"
  }, 
  {
    "name": "GetCharWidthA", 
    "type": "skProc", 
    "code": "proc GetCharWidthA*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthA\".}"
  }, 
  {
    "name": "GetCharWidth32A", 
    "type": "skProc", 
    "code": "proc GetCharWidth32A*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32A\".}"
  }, 
  {
    "name": "GetCharWidthFloatA", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloatA*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                         para4: ptr float32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharWidthFloatA\".}"
  }, 
  {
    "name": "GetCharABCWidthsA", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsA*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPABC): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsA\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloatA", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloatA*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                             para4: LPABCFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatA\".}"
  }, 
  {
    "name": "GetGlyphOutlineA", 
    "type": "skProc", 
    "code": "proc GetGlyphOutlineA*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                       para4: LPGLYPHMETRICS; para5: DWORD; para6: LPVOID; \u000A                       para7: PMAT2): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetGlyphOutlineA\".}"
  }, 
  {
    "name": "GetMetaFileA", 
    "type": "skProc", 
    "code": "proc GetMetaFileA*(para1: LPCSTR): HMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetMetaFileA\".}"
  }, 
  {
    "name": "GetOutlineTextMetricsA", 
    "type": "skProc", 
    "code": "proc GetOutlineTextMetricsA*(para1: HDC; para2: WINUINT; \u000A                             para3: LPOUTLINETEXTMETRIC): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetOutlineTextMetricsA\".}"
  }, 
  {
    "name": "GetTextExtentPointA", 
    "type": "skProc", 
    "code": "proc GetTextExtentPointA*(para1: HDC; para2: LPCSTR; para3: int32; para4: LPSIZE): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPointA\".}"
  }, 
  {
    "name": "GetTextExtentPoint32A", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32A*(para1: HDC; para2: LPCSTR; para3: int32; \u000A                            para4: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentPoint32A\".}"
  }, 
  {
    "name": "GetTextExtentExPointA", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPointA*(para1: HDC; para2: LPCSTR; para3: int32; \u000A                            para4: int32; para5: LPINT; para6: LPINT; \u000A                            para7: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointA\".}"
  }, 
  {
    "name": "GetCharacterPlacementA", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacementA*(para1: HDC; para2: LPCSTR; para3: int32; \u000A                             para4: int32; para5: LPGCP_RESULTS; para6: DWORD): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharacterPlacementA\".}"
  }, 
  {
    "name": "ResetDCA", 
    "type": "skProc", 
    "code": "proc ResetDCA*(para1: HDC; para2: LPDEVMODE): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ResetDCA\".}"
  }, 
  {
    "name": "RemoveFontResourceA", 
    "type": "skProc", 
    "code": "proc RemoveFontResourceA*(para1: LPCSTR): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"RemoveFontResourceA\".}"
  }, 
  {
    "name": "CopyEnhMetaFileA", 
    "type": "skProc", 
    "code": "proc CopyEnhMetaFileA*(para1: HENHMETAFILE; para2: LPCSTR): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CopyEnhMetaFileA\".}"
  }, 
  {
    "name": "CreateEnhMetaFileA", 
    "type": "skProc", 
    "code": "proc CreateEnhMetaFileA*(para1: HDC; para2: LPCSTR; para3: LPRECT; para4: LPCSTR): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateEnhMetaFileA\".}"
  }, 
  {
    "name": "GetEnhMetaFileA", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileA*(para1: LPCSTR): HENHMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetEnhMetaFileA\".}"
  }, 
  {
    "name": "GetEnhMetaFileDescriptionA", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileDescriptionA*(para1: HENHMETAFILE; para2: WINUINT; \u000A                                 para3: LPSTR): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetEnhMetaFileDescriptionA\".}"
  }, 
  {
    "name": "GetTextMetricsA", 
    "type": "skProc", 
    "code": "proc GetTextMetricsA*(para1: HDC; para2: LPTEXTMETRIC): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextMetricsA\".}"
  }, 
  {
    "name": "StartDocA", 
    "type": "skProc", 
    "code": "proc StartDocA*(para1: HDC; para2: PDOCINFO): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StartDocA\".}"
  }, 
  {
    "name": "GetObjectA", 
    "type": "skProc", 
    "code": "proc GetObjectA*(para1: HGDIOBJ; para2: int32; para3: LPVOID): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetObjectA\".}"
  }, 
  {
    "name": "TextOutA", 
    "type": "skProc", 
    "code": "proc TextOutA*(para1: HDC; para2: int32; para3: int32; para4: LPCSTR; \u000A               para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                        importc: \"TextOutA\".}"
  }, 
  {
    "name": "ExtTextOutA", 
    "type": "skProc", 
    "code": "proc ExtTextOutA*(para1: HDC; para2: int32; para3: int32; para4: WINUINT; \u000A                  para5: LPRECT; para6: LPCSTR; para7: WINUINT; para8: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ExtTextOutA\".}"
  }, 
  {
    "name": "PolyTextOutA", 
    "type": "skProc", 
    "code": "proc PolyTextOutA*(para1: HDC; para2: PPOLYTEXT; para3: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutA\".}"
  }, 
  {
    "name": "GetTextFaceA", 
    "type": "skProc", 
    "code": "proc GetTextFaceA*(para1: HDC; para2: int32; para3: LPSTR): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextFaceA\".}"
  }, 
  {
    "name": "GetKerningPairsA", 
    "type": "skProc", 
    "code": "proc GetKerningPairsA*(para1: HDC; para2: DWORD; para3: LPKERNINGPAIR): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetKerningPairsA\".}"
  }, 
  {
    "name": "CreateColorSpaceA", 
    "type": "skProc", 
    "code": "proc CreateColorSpaceA*(para1: LPLOGCOLORSPACE): HCOLORSPACE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateColorSpaceA\".}"
  }, 
  {
    "name": "GetLogColorSpaceA", 
    "type": "skProc", 
    "code": "proc GetLogColorSpaceA*(para1: HCOLORSPACE; para2: LPLOGCOLORSPACE; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetLogColorSpaceA\".}"
  }, 
  {
    "name": "GetICMProfileA", 
    "type": "skProc", 
    "code": "proc GetICMProfileA*(para1: HDC; para2: DWORD; para3: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetICMProfileA\".}"
  }, 
  {
    "name": "SetICMProfileA", 
    "type": "skProc", 
    "code": "proc SetICMProfileA*(para1: HDC; para2: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetICMProfileA\".}"
  }, 
  {
    "name": "UpdateICMRegKeyA", 
    "type": "skProc", 
    "code": "proc UpdateICMRegKeyA*(para1: DWORD; para2: DWORD; para3: LPSTR; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"UpdateICMRegKeyA\".}"
  }, 
  {
    "name": "EnumICMProfilesA", 
    "type": "skProc", 
    "code": "proc EnumICMProfilesA*(para1: HDC; para2: ICMENUMPROC; para3: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumICMProfilesA\".}"
  }, 
  {
    "name": "PropertySheetA", 
    "type": "skProc", 
    "code": "proc PropertySheetA*(lppsph: LPCPROPSHEETHEADER): int32 {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"PropertySheetA\".}"
  }, 
  {
    "name": "ImageList_LoadImageA", 
    "type": "skProc", 
    "code": "proc ImageList_LoadImageA*(hi: HINST; lpbmp: LPCSTR; cx: int32; cGrow: int32; \u000A                           crMask: COLORREF; uType: WINUINT; uFlags: WINUINT): HIMAGELIST {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_LoadImageA\".}"
  }, 
  {
    "name": "CreateStatusWindowA", 
    "type": "skProc", 
    "code": "proc CreateStatusWindowA*(style: LONG; lpszText: LPCSTR; hwndParent: HWND; \u000A                          wID: WINUINT): HWND {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"CreateStatusWindowA\".}"
  }, 
  {
    "name": "DrawStatusTextA", 
    "type": "skProc", 
    "code": "proc DrawStatusTextA*(hDC: HDC; lprc: LPRECT; pszText: LPCSTR; uFlags: WINUINT) {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"DrawStatusTextA\".}"
  }, 
  {
    "name": "GetOpenFileNameA", 
    "type": "skProc", 
    "code": "proc GetOpenFileNameA*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetOpenFileNameA\".}"
  }, 
  {
    "name": "GetSaveFileNameA", 
    "type": "skProc", 
    "code": "proc GetSaveFileNameA*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetSaveFileNameA\".}"
  }, 
  {
    "name": "GetFileTitleA", 
    "type": "skProc", 
    "code": "proc GetFileTitleA*(para1: LPCSTR; para2: LPSTR; para3: int16): int {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetFileTitleA\".}"
  }, 
  {
    "name": "ChooseColorA", 
    "type": "skProc", 
    "code": "proc ChooseColorA*(para1: LPCHOOSECOLOR): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseColorA\".}"
  }, 
  {
    "name": "FindTextA", 
    "type": "skProc", 
    "code": "proc FindTextA*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"FindTextA\".}"
  }, 
  {
    "name": "ReplaceTextA", 
    "type": "skProc", 
    "code": "proc ReplaceTextA*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ReplaceTextA\".}"
  }, 
  {
    "name": "ChooseFontA", 
    "type": "skProc", 
    "code": "proc ChooseFontA*(para1: LPCHOOSEFONT): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseFontA\".}"
  }, 
  {
    "name": "PrintDlgA", 
    "type": "skProc", 
    "code": "proc PrintDlgA*(para1: LPPRINTDLG): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"PrintDlgA\".}"
  }, 
  {
    "name": "PageSetupDlgA", 
    "type": "skProc", 
    "code": "proc PageSetupDlgA*(para1: LPPAGESETUPDLG): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"PageSetupDlgA\".}"
  }, 
  {
    "name": "CreateProcessA", 
    "type": "skProc", 
    "code": "proc CreateProcessA*(lpApplicationName: LPCSTR; lpCommandLine: LPSTR; \u000A                     lpProcessAttributes: LPSECURITY_ATTRIBUTES; \u000A                     lpThreadAttributes: LPSECURITY_ATTRIBUTES; \u000A                     bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                     lpEnvironment: LPVOID; lpCurrentDirectory: LPCSTR; \u000A                     lpStartupInfo: LPSTARTUPINFO; \u000A                     lpProcessInformation: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessA\".}"
  }, 
  {
    "name": "GetStartupInfoA", 
    "type": "skProc", 
    "code": "proc GetStartupInfoA*(lpStartupInfo: LPSTARTUPINFO) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStartupInfoA\".}"
  }, 
  {
    "name": "FindFirstFileA", 
    "type": "skProc", 
    "code": "proc FindFirstFileA*(lpFileName: LPCSTR; lpFindFileData: LPWIN32_FIND_DATA): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileA\".}"
  }, 
  {
    "name": "FindNextFileA", 
    "type": "skProc", 
    "code": "proc FindNextFileA*(hFindFile: HANDLE; lpFindFileData: LPWIN32_FIND_DATA): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileA\".}"
  }, 
  {
    "name": "GetVersionExA", 
    "type": "skProc", 
    "code": "proc GetVersionExA*(VersionInformation: LPOSVERSIONINFO): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVersionExA\".}"
  }, 
  {
    "name": "CreateWindowA", 
    "type": "skProc", 
    "code": "proc CreateWindowA*(lpClassName: LPCSTR; lpWindowName: LPCSTR; dwStyle: DWORD; \u000A                    X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                    hWndParent: HWND; menu: HMENU; hInstance: HINST; \u000A                    lpParam: LPVOID): HWND"
  }, 
  {
    "name": "CreateDialogA", 
    "type": "skProc", 
    "code": "proc CreateDialogA*(hInstance: HINST; lpTemplateName: LPCSTR; hWndParent: HWND; \u000A                    lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "CreateDialogIndirectA", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectA*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                            hWndParent: HWND; lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "DialogBoxA", 
    "type": "skProc", 
    "code": "proc DialogBoxA*(hInstance: HINST; lpTemplateName: LPCSTR; hWndParent: HWND; \u000A                 lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "DialogBoxIndirectA", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectA*(hInstance: HINST; hDialogTemplate: LPCDLGTEMPLATE; \u000A                         hWndParent: HWND; lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "CreateDCA", 
    "type": "skProc", 
    "code": "proc CreateDCA*(para1: LPCSTR; para2: LPCSTR; para3: LPCSTR; para4: PDEVMODE): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDCA\".}"
  }, 
  {
    "name": "VerInstallFileA", 
    "type": "skProc", 
    "code": "proc VerInstallFileA*(uFlags: DWORD; szSrcFileName: LPSTR; \u000A                      szDestFileName: LPSTR; szSrcDir: LPSTR; szDestDir: LPSTR; \u000A                      szCurDir: LPSTR; szTmpFile: LPSTR; lpuTmpFileLen: PUINT): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"VerInstallFileA\".}"
  }, 
  {
    "name": "GetFileVersionInfoSizeA", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSizeA*(lptstrFilename: LPSTR; lpdwHandle: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeA\".}"
  }, 
  {
    "name": "GetFileVersionInfoA", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoA*(lptstrFilename: LPSTR; dwHandle: DWORD; dwLen: DWORD; \u000A                          lpData: LPVOID): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"GetFileVersionInfoA\".}"
  }, 
  {
    "name": "VerLanguageNameA", 
    "type": "skProc", 
    "code": "proc VerLanguageNameA*(wLang: DWORD; szLang: LPSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VerLanguageNameA\".}"
  }, 
  {
    "name": "VerQueryValueA", 
    "type": "skProc", 
    "code": "proc VerQueryValueA*(pBlock: LPVOID; lpSubBlock: LPSTR; lplpBuffer: LPVOID; \u000A                     puLen: PUINT): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"VerQueryValueA\".}"
  }, 
  {
    "name": "VerFindFileA", 
    "type": "skProc", 
    "code": "proc VerFindFileA*(uFlags: DWORD; szFileName: LPSTR; szWinDir: LPSTR; \u000A                   szAppDir: LPSTR; szCurDir: LPSTR; lpuCurDirLen: PUINT; \u000A                   szDestDir: LPSTR; lpuDestDirLen: PUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileA\".}"
  }, 
  {
    "name": "RegConnectRegistryA", 
    "type": "skProc", 
    "code": "proc RegConnectRegistryA*(lpMachineName: LPSTR; key: HKEY; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryA\".}"
  }, 
  {
    "name": "RegCreateKeyA", 
    "type": "skProc", 
    "code": "proc RegCreateKeyA*(key: HKEY; lpSubKey: LPCSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyA\".}"
  }, 
  {
    "name": "RegCreateKeyExA", 
    "type": "skProc", 
    "code": "proc RegCreateKeyExA*(key: HKEY; lpSubKey: LPCSTR; Reserved: DWORD; \u000A                      lpClass: LPSTR; dwOptions: DWORD; samDesired: REGSAM; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                      phkResult: PHKEY; lpdwDisposition: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExA\".}"
  }, 
  {
    "name": "RegDeleteKeyA", 
    "type": "skProc", 
    "code": "proc RegDeleteKeyA*(key: HKEY; lpSubKey: LPCSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteKeyA\".}"
  }, 
  {
    "name": "RegDeleteValueA", 
    "type": "skProc", 
    "code": "proc RegDeleteValueA*(key: HKEY; lpValueName: LPCSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteValueA\".}"
  }, 
  {
    "name": "RegEnumKeyA", 
    "type": "skProc", 
    "code": "proc RegEnumKeyA*(key: HKEY; dwIndex: DWORD; lpName: LPSTR; cbName: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyA\".}"
  }, 
  {
    "name": "RegEnumKeyExA", 
    "type": "skProc", 
    "code": "proc RegEnumKeyExA*(key: HKEY; dwIndex: DWORD; lpName: LPSTR; lpcbName: LPDWORD; \u000A                    lpReserved: LPDWORD; lpClass: LPSTR; lpcbClass: LPDWORD; \u000A                    lpftLastWriteTime: PFILETIME): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegEnumKeyExA\".}"
  }, 
  {
    "name": "RegEnumValueA", 
    "type": "skProc", 
    "code": "proc RegEnumValueA*(key: HKEY; dwIndex: DWORD; lpValueName: LPSTR; \u000A                    lpcbValueName: LPDWORD; lpReserved: LPDWORD; \u000A                    lpType: LPDWORD; lpData: LPBYTE; lpcbData: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumValueA\".}"
  }, 
  {
    "name": "RegLoadKeyA", 
    "type": "skProc", 
    "code": "proc RegLoadKeyA*(key: HKEY; lpSubKey: LPCSTR; lpFile: LPCSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegLoadKeyA\".}"
  }, 
  {
    "name": "RegOpenKeyA", 
    "type": "skProc", 
    "code": "proc RegOpenKeyA*(key: HKEY; lpSubKey: LPCSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyA\".}"
  }, 
  {
    "name": "RegOpenKeyExA", 
    "type": "skProc", 
    "code": "proc RegOpenKeyExA*(key: HKEY; lpSubKey: LPCSTR; ulOptions: DWORD; \u000A                    samDesired: REGSAM; phkResult: PHKEY): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExA\".}"
  }, 
  {
    "name": "RegQueryInfoKeyA", 
    "type": "skProc", 
    "code": "proc RegQueryInfoKeyA*(key: HKEY; lpClass: LPSTR; lpcbClass: LPDWORD; \u000A                       lpReserved: LPDWORD; lpcSubKeys: LPDWORD; \u000A                       lpcbMaxSubKeyLen: LPDWORD; lpcbMaxClassLen: LPDWORD; \u000A                       lpcValues: LPDWORD; lpcbMaxValueNameLen: LPDWORD; \u000A                       lpcbMaxValueLen: LPDWORD; \u000A                       lpcbSecurityDescriptor: LPDWORD; \u000A                       lpftLastWriteTime: PFILETIME): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegQueryInfoKeyA\".}"
  }, 
  {
    "name": "RegQueryValueA", 
    "type": "skProc", 
    "code": "proc RegQueryValueA*(key: HKEY; lpSubKey: LPCSTR; lpValue: LPSTR; \u000A                     lpcbValue: PLONG): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueA\".}"
  }, 
  {
    "name": "RegQueryMultipleValuesA", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValuesA*(key: HKEY; val_list: PVALENT; num_vals: DWORD; \u000A                              lpValueBuf: LPSTR; ldwTotsize: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesA\".}"
  }, 
  {
    "name": "RegQueryValueExA", 
    "type": "skProc", 
    "code": "proc RegQueryValueExA*(key: HKEY; lpValueName: LPCSTR; lpReserved: LPDWORD; \u000A                       lpType: LPDWORD; lpData: LPBYTE; lpcbData: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryValueExA\".}"
  }, 
  {
    "name": "RegReplaceKeyA", 
    "type": "skProc", 
    "code": "proc RegReplaceKeyA*(key: HKEY; lpSubKey: LPCSTR; lpNewFile: LPCSTR; \u000A                     lpOldFile: LPCSTR): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegReplaceKeyA\".}"
  }, 
  {
    "name": "RegRestoreKeyA", 
    "type": "skProc", 
    "code": "proc RegRestoreKeyA*(key: HKEY; lpFile: LPCSTR; dwFlags: DWORD): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegRestoreKeyA\".}"
  }, 
  {
    "name": "RegSaveKeyA", 
    "type": "skProc", 
    "code": "proc RegSaveKeyA*(key: HKEY; lpFile: LPCSTR; \u000A                  lpSecurityAttributes: LPSECURITY_ATTRIBUTES): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegSaveKeyA\".}"
  }, 
  {
    "name": "RegSetValueA", 
    "type": "skProc", 
    "code": "proc RegSetValueA*(key: HKEY; lpSubKey: LPCSTR; dwType: DWORD; lpData: LPCSTR; \u000A                   cbData: DWORD): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegSetValueA\".}"
  }, 
  {
    "name": "RegSetValueExA", 
    "type": "skProc", 
    "code": "proc RegSetValueExA*(key: HKEY; lpValueName: LPCSTR; Reserved: DWORD; \u000A                     dwType: DWORD; lpData: LPBYTE; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExA\".}"
  }, 
  {
    "name": "RegUnLoadKeyA", 
    "type": "skProc", 
    "code": "proc RegUnLoadKeyA*(key: HKEY; lpSubKey: LPCSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegUnLoadKeyA\".}"
  }, 
  {
    "name": "InitiateSystemShutdownA", 
    "type": "skProc", 
    "code": "proc InitiateSystemShutdownA*(lpMachineName: LPSTR; lpMessage: LPSTR; \u000A                              dwTimeout: DWORD; bForceAppsClosed: WINBOOL; \u000A                              bRebootAfterShutdown: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitiateSystemShutdownA\".}"
  }, 
  {
    "name": "AbortSystemShutdownA", 
    "type": "skProc", 
    "code": "proc AbortSystemShutdownA*(lpMachineName: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AbortSystemShutdownA\".}"
  }, 
  {
    "name": "CompareStringA", 
    "type": "skProc", 
    "code": "proc CompareStringA*(Locale: LCID; dwCmpFlags: DWORD; lpString1: LPCSTR; \u000A                     cchCount1: int32; lpString2: LPCSTR; cchCount2: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CompareStringA\".}"
  }, 
  {
    "name": "LCMapStringA", 
    "type": "skProc", 
    "code": "proc LCMapStringA*(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: LPCSTR; \u000A                   cchSrc: int32; lpDestStr: LPSTR; cchDest: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LCMapStringA\".}"
  }, 
  {
    "name": "GetLocaleInfoA", 
    "type": "skProc", 
    "code": "proc GetLocaleInfoA*(Locale: LCID; LCType: LCTYPE; lpLCData: LPSTR; \u000A                     cchData: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetLocaleInfoA\".}"
  }, 
  {
    "name": "SetLocaleInfoA", 
    "type": "skProc", 
    "code": "proc SetLocaleInfoA*(Locale: LCID; LCType: LCTYPE; lpLCData: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetLocaleInfoA\".}"
  }, 
  {
    "name": "GetTimeFormatA", 
    "type": "skProc", 
    "code": "proc GetTimeFormatA*(Locale: LCID; dwFlags: DWORD; lpTime: LPSYSTEMTIME; \u000A                     lpFormat: LPCSTR; lpTimeStr: LPSTR; cchTime: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTimeFormatA\".}"
  }, 
  {
    "name": "GetDateFormatA", 
    "type": "skProc", 
    "code": "proc GetDateFormatA*(Locale: LCID; dwFlags: DWORD; lpDate: LPSYSTEMTIME; \u000A                     lpFormat: LPCSTR; lpDateStr: LPSTR; cchDate: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDateFormatA\".}"
  }, 
  {
    "name": "GetNumberFormatA", 
    "type": "skProc", 
    "code": "proc GetNumberFormatA*(Locale: LCID; dwFlags: DWORD; lpValue: LPCSTR; \u000A                       lpFormat: PNUMBERFMT; lpNumberStr: LPSTR; \u000A                       cchNumber: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetNumberFormatA\".}"
  }, 
  {
    "name": "GetCurrencyFormatA", 
    "type": "skProc", 
    "code": "proc GetCurrencyFormatA*(Locale: LCID; dwFlags: DWORD; lpValue: LPCSTR; \u000A                         lpFormat: PCURRENCYFMT; lpCurrencyStr: LPSTR; \u000A                         cchCurrency: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCurrencyFormatA\".}"
  }, 
  {
    "name": "EnumCalendarInfoA", 
    "type": "skProc", 
    "code": "proc EnumCalendarInfoA*(lpCalInfoEnumProc: CALINFO_ENUMPROC; Locale: LCID; \u000A                        Calendar: CALID; CalType: CALTYPE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EnumCalendarInfoA\".}"
  }, 
  {
    "name": "EnumTimeFormatsA", 
    "type": "skProc", 
    "code": "proc EnumTimeFormatsA*(lpTimeFmtEnumProc: TIMEFMT_ENUMPROC; Locale: LCID; \u000A                       dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumTimeFormatsA\".}"
  }, 
  {
    "name": "EnumDateFormatsA", 
    "type": "skProc", 
    "code": "proc EnumDateFormatsA*(lpDateFmtEnumProc: DATEFMT_ENUMPROC; Locale: LCID; \u000A                       dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumDateFormatsA\".}"
  }, 
  {
    "name": "GetStringTypeExA", 
    "type": "skProc", 
    "code": "proc GetStringTypeExA*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCSTR; \u000A                       cchSrc: int32; lpCharType: LPWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExA\".}"
  }, 
  {
    "name": "GetStringTypeA", 
    "type": "skProc", 
    "code": "proc GetStringTypeA*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCSTR; \u000A                     cchSrc: int32; lpCharType: LPWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeA\".}"
  }, 
  {
    "name": "FoldStringA", 
    "type": "skProc", 
    "code": "proc FoldStringA*(dwMapFlags: DWORD; lpSrcStr: LPCSTR; cchSrc: int32; \u000A                  lpDestStr: LPSTR; cchDest: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FoldStringA\".}"
  }, 
  {
    "name": "EnumSystemLocalesA", 
    "type": "skProc", 
    "code": "proc EnumSystemLocalesA*(lpLocaleEnumProc: LOCALE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemLocalesA\".}"
  }, 
  {
    "name": "EnumSystemCodePagesA", 
    "type": "skProc", 
    "code": "proc EnumSystemCodePagesA*(lpCodePageEnumProc: CODEPAGE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemCodePagesA\".}"
  }, 
  {
    "name": "PeekConsoleInputA", 
    "type": "skProc", 
    "code": "proc PeekConsoleInputA*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                        nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputA\".}"
  }, 
  {
    "name": "ReadConsoleInputA", 
    "type": "skProc", 
    "code": "proc ReadConsoleInputA*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                        nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputA\".}"
  }, 
  {
    "name": "WriteConsoleInputA", 
    "type": "skProc", 
    "code": "proc WriteConsoleInputA*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                         nLength: DWORD; lpNumberOfEventsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputA\".}"
  }, 
  {
    "name": "ReadConsoleOutputA", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputA*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                         dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                         lpReadRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputA\".}"
  }, 
  {
    "name": "WriteConsoleOutputA", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputA*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                          dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                          lpWriteRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputA\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacterA*(hConsoleOutput: HANDLE; lpCharacter: LPSTR; \u000A                                  nLength: DWORD; dwReadCoord: COORD; \u000A                                  lpNumberOfCharsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacterA*(hConsoleOutput: HANDLE; lpCharacter: LPCSTR; \u000A                                   nLength: DWORD; dwWriteCoord: COORD; \u000A                                   lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacterA*(hConsoleOutput: HANDLE; cCharacter: char; \u000A                                  nLength: DWORD; dwWriteCoord: COORD; \u000A                                  lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBufferA", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBufferA*(hConsoleOutput: HANDLE; \u000A                                 lpScrollRectangle: PSMALL_RECT; \u000A                                 lpClipRectangle: PSMALL_RECT; \u000A                                 dwDestinationOrigin: COORD; lpFill: PCHAR_INFO): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferA\".}"
  }, 
  {
    "name": "GetConsoleTitleA", 
    "type": "skProc", 
    "code": "proc GetConsoleTitleA*(lpConsoleTitle: LPSTR; nSize: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetConsoleTitleA\".}"
  }, 
  {
    "name": "SetConsoleTitleA", 
    "type": "skProc", 
    "code": "proc SetConsoleTitleA*(lpConsoleTitle: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleTitleA\".}"
  }, 
  {
    "name": "ReadConsoleA", 
    "type": "skProc", 
    "code": "proc ReadConsoleA*(hConsoleInput: HANDLE; lpBuffer: LPVOID; \u000A                   nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: LPDWORD; \u000A                   lpReserved: LPVOID): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleA\".}"
  }, 
  {
    "name": "WriteConsoleA", 
    "type": "skProc", 
    "code": "proc WriteConsoleA*(hConsoleOutput: HANDLE; lpBuffer: pointer; \u000A                    nNumberOfCharsToWrite: DWORD; \u000A                    lpNumberOfCharsWritten: LPDWORD; lpReserved: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleA\".}"
  }, 
  {
    "name": "WNetAddConnectionA", 
    "type": "skProc", 
    "code": "proc WNetAddConnectionA*(lpRemoteName: LPCSTR; lpPassword: LPCSTR; \u000A                         lpLocalName: LPCSTR): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetAddConnectionA\".}"
  }, 
  {
    "name": "WNetAddConnection2A", 
    "type": "skProc", 
    "code": "proc WNetAddConnection2A*(lpNetResource: LPNETRESOURCE; lpPassword: LPCSTR; \u000A                          lpUserName: LPCSTR; dwFlags: DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetAddConnection2A\".}"
  }, 
  {
    "name": "WNetAddConnection3A", 
    "type": "skProc", 
    "code": "proc WNetAddConnection3A*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                          lpPassword: LPCSTR; lpUserName: LPCSTR; dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetAddConnection3A\".}"
  }, 
  {
    "name": "WNetCancelConnectionA", 
    "type": "skProc", 
    "code": "proc WNetCancelConnectionA*(lpName: LPCSTR; fForce: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetCancelConnectionA\".}"
  }, 
  {
    "name": "WNetCancelConnection2A", 
    "type": "skProc", 
    "code": "proc WNetCancelConnection2A*(lpName: LPCSTR; dwFlags: DWORD; fForce: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetCancelConnection2A\".}"
  }, 
  {
    "name": "WNetGetConnectionA", 
    "type": "skProc", 
    "code": "proc WNetGetConnectionA*(lpLocalName: LPCSTR; lpRemoteName: LPSTR; \u000A                         lpnLength: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionA\".}"
  }, 
  {
    "name": "WNetUseConnectionA", 
    "type": "skProc", 
    "code": "proc WNetUseConnectionA*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                         lpUserID: LPCSTR; lpPassword: LPCSTR; dwFlags: DWORD; \u000A                         lpAccessName: LPSTR; lpBufferSize: LPDWORD; \u000A                         lpResult: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetUseConnectionA\".}"
  }, 
  {
    "name": "WNetSetConnectionA", 
    "type": "skProc", 
    "code": "proc WNetSetConnectionA*(lpName: LPCSTR; dwProperties: DWORD; pvValues: LPVOID): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetSetConnectionA\".}"
  }, 
  {
    "name": "WNetConnectionDialog1A", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog1A*(lpConnDlgStruct: LPCONNECTDLGSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetConnectionDialog1A\".}"
  }, 
  {
    "name": "WNetDisconnectDialog1A", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog1A*(lpConnDlgStruct: LPDISCDLGSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetDisconnectDialog1A\".}"
  }, 
  {
    "name": "WNetOpenEnumA", 
    "type": "skProc", 
    "code": "proc WNetOpenEnumA*(dwScope: DWORD; dwType: DWORD; dwUsage: DWORD; \u000A                    lpNetResource: LPNETRESOURCE; lphEnum: LPHANDLE): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetOpenEnumA\".}"
  }, 
  {
    "name": "WNetEnumResourceA", 
    "type": "skProc", 
    "code": "proc WNetEnumResourceA*(hEnum: HANDLE; lpcCount: LPDWORD; lpBuffer: LPVOID; \u000A                        lpBufferSize: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetEnumResourceA\".}"
  }, 
  {
    "name": "WNetGetUniversalNameA", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalNameA*(lpLocalPath: LPCSTR; dwInfoLevel: DWORD; \u000A                            lpBuffer: LPVOID; lpBufferSize: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameA\".}"
  }, 
  {
    "name": "WNetGetUserA", 
    "type": "skProc", 
    "code": "proc WNetGetUserA*(lpName: LPCSTR; lpUserName: LPSTR; lpnLength: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserA\".}"
  }, 
  {
    "name": "WNetGetProviderNameA", 
    "type": "skProc", 
    "code": "proc WNetGetProviderNameA*(dwNetType: DWORD; lpProviderName: LPSTR; \u000A                           lpBufferSize: LPDWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameA\".}"
  }, 
  {
    "name": "WNetGetNetworkInformationA", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformationA*(lpProvider: LPCSTR; \u000A                                 lpNetInfoStruct: LPNETINFOSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationA\".}"
  }, 
  {
    "name": "WNetGetLastErrorA", 
    "type": "skProc", 
    "code": "proc WNetGetLastErrorA*(lpError: LPDWORD; lpErrorBuf: LPSTR; \u000A                        nErrorBufSize: DWORD; lpNameBuf: LPSTR; \u000A                        nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorA\".}"
  }, 
  {
    "name": "MultinetGetConnectionPerformanceA", 
    "type": "skProc", 
    "code": "proc MultinetGetConnectionPerformanceA*(lpNetResource: LPNETRESOURCE; \u000A    lpNetConnectInfoStruct: LPNETCONNECTINFOSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"MultinetGetConnectionPerformanceA\".}"
  }, 
  {
    "name": "ChangeServiceConfigA", 
    "type": "skProc", 
    "code": "proc ChangeServiceConfigA*(hService: SC_HANDLE; dwServiceType: DWORD; \u000A                           dwStartType: DWORD; dwErrorControl: DWORD; \u000A                           lpBinaryPathName: LPCSTR; lpLoadOrderGroup: LPCSTR; \u000A                           lpdwTagId: LPDWORD; lpDependencies: LPCSTR; \u000A                           lpServiceStartName: LPCSTR; lpPassword: LPCSTR; \u000A                           lpDisplayName: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ChangeServiceConfigA\".}"
  }, 
  {
    "name": "CreateServiceA", 
    "type": "skProc", 
    "code": "proc CreateServiceA*(hSCManager: SC_HANDLE; lpServiceName: LPCSTR; \u000A                     lpDisplayName: LPCSTR; dwDesiredAccess: DWORD; \u000A                     dwServiceType: DWORD; dwStartType: DWORD; \u000A                     dwErrorControl: DWORD; lpBinaryPathName: LPCSTR; \u000A                     lpLoadOrderGroup: LPCSTR; lpdwTagId: LPDWORD; \u000A                     lpDependencies: LPCSTR; lpServiceStartName: LPCSTR; \u000A                     lpPassword: LPCSTR): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"CreateServiceA\".}"
  }, 
  {
    "name": "EnumDependentServicesA", 
    "type": "skProc", 
    "code": "proc EnumDependentServicesA*(hService: SC_HANDLE; dwServiceState: DWORD; \u000A                             lpServices: LPENUM_SERVICE_STATUS; \u000A                             cbBufSize: DWORD; pcbBytesNeeded: LPDWORD; \u000A                             lpServicesReturned: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EnumDependentServicesA\".}"
  }, 
  {
    "name": "EnumServicesStatusA", 
    "type": "skProc", 
    "code": "proc EnumServicesStatusA*(hSCManager: SC_HANDLE; dwServiceType: DWORD; \u000A                          dwServiceState: DWORD; \u000A                          lpServices: LPENUM_SERVICE_STATUS; cbBufSize: DWORD; \u000A                          pcbBytesNeeded: LPDWORD; lpServicesReturned: LPDWORD; \u000A                          lpResumeHandle: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EnumServicesStatusA\".}"
  }, 
  {
    "name": "GetServiceKeyNameA", 
    "type": "skProc", 
    "code": "proc GetServiceKeyNameA*(hSCManager: SC_HANDLE; lpDisplayName: LPCSTR; \u000A                         lpServiceName: LPSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceKeyNameA\".}"
  }, 
  {
    "name": "GetServiceDisplayNameA", 
    "type": "skProc", 
    "code": "proc GetServiceDisplayNameA*(hSCManager: SC_HANDLE; lpServiceName: LPCSTR; \u000A                             lpDisplayName: LPSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceDisplayNameA\".}"
  }, 
  {
    "name": "OpenSCManagerA", 
    "type": "skProc", 
    "code": "proc OpenSCManagerA*(lpMachineName: LPCSTR; lpDatabaseName: LPCSTR; \u000A                     dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenSCManagerA\".}"
  }, 
  {
    "name": "OpenServiceA", 
    "type": "skProc", 
    "code": "proc OpenServiceA*(hSCManager: SC_HANDLE; lpServiceName: LPCSTR; \u000A                   dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenServiceA\".}"
  }, 
  {
    "name": "QueryServiceConfigA", 
    "type": "skProc", 
    "code": "proc QueryServiceConfigA*(hService: SC_HANDLE; \u000A                          lpServiceConfig: LPQUERY_SERVICE_CONFIG; \u000A                          cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceConfigA\".}"
  }, 
  {
    "name": "QueryServiceLockStatusA", 
    "type": "skProc", 
    "code": "proc QueryServiceLockStatusA*(hSCManager: SC_HANDLE; \u000A                              lpLockStatus: LPQUERY_SERVICE_LOCK_STATUS; \u000A                              cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceLockStatusA\".}"
  }, 
  {
    "name": "RegisterServiceCtrlHandlerA", 
    "type": "skProc", 
    "code": "proc RegisterServiceCtrlHandlerA*(lpServiceName: LPCSTR; \u000A                                  lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterServiceCtrlHandlerA\".}"
  }, 
  {
    "name": "StartServiceCtrlDispatcherA", 
    "type": "skProc", 
    "code": "proc StartServiceCtrlDispatcherA*(lpServiceStartTable: LPSERVICE_TABLE_ENTRY): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"StartServiceCtrlDispatcherA\".}"
  }, 
  {
    "name": "StartServiceA", 
    "type": "skProc", 
    "code": "proc StartServiceA*(hService: SC_HANDLE; dwNumServiceArgs: DWORD; \u000A                    lpServiceArgVectors: LPCSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"StartServiceA\".}"
  }, 
  {
    "name": "DragQueryFileA", 
    "type": "skProc", 
    "code": "proc DragQueryFileA*(para1: HDROP; para2: int; para3: cstring; para4: int): int {.\u000A    stdcall, dynlib: \"shell32\", importc: \"DragQueryFileA\".}"
  }, 
  {
    "name": "ExtractAssociatedIconA", 
    "type": "skProc", 
    "code": "proc ExtractAssociatedIconA*(para1: HINST; para2: cstring; para3: LPWORD): HICON {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ExtractAssociatedIconA\".}"
  }, 
  {
    "name": "ExtractIconA", 
    "type": "skProc", 
    "code": "proc ExtractIconA*(para1: HINST; para2: cstring; para3: int): HICON {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ExtractIconA\".}"
  }, 
  {
    "name": "FindExecutableA", 
    "type": "skProc", 
    "code": "proc FindExecutableA*(para1: cstring; para2: cstring; para3: cstring): HINST {.\u000A    stdcall, dynlib: \"shell32\", importc: \"FindExecutableA\".}"
  }, 
  {
    "name": "ShellAboutA", 
    "type": "skProc", 
    "code": "proc ShellAboutA*(para1: HWND; para2: cstring; para3: cstring; para4: HICON): int32 {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ShellAboutA\".}"
  }, 
  {
    "name": "ShellExecuteA", 
    "type": "skProc", 
    "code": "proc ShellExecuteA*(para1: HWND; para2: cstring; para3: cstring; para4: cstring; \u000A                    para5: cstring; para6: int32): HINST {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ShellExecuteA\".}"
  }, 
  {
    "name": "Shell_NotifyIconA", 
    "type": "skProc", 
    "code": "proc Shell_NotifyIconA*(dwMessage: DWORD; lpData: PNotifyIconDataA): WINBOOL {.\u000A    stdcall, dynlib: \"shell32\", importc: \"Shell_NotifyIconA\".}"
  }, 
  {
    "name": "DdeCreateStringHandleA", 
    "type": "skProc", 
    "code": "proc DdeCreateStringHandleA*(para1: DWORD; para2: cstring; para3: int32): HSZ {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeCreateStringHandleA\".}"
  }, 
  {
    "name": "DdeInitializeA", 
    "type": "skProc", 
    "code": "proc DdeInitializeA*(para1: LPDWORD; para2: PFNCALLBACK; para3: DWORD; \u000A                     para4: DWORD): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeInitializeA\".}"
  }, 
  {
    "name": "DdeQueryStringA", 
    "type": "skProc", 
    "code": "proc DdeQueryStringA*(para1: DWORD; para2: HSZ; para3: cstring; para4: DWORD; \u000A                      para5: int32): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeQueryStringA\".}"
  }, 
  {
    "name": "LogonUserA", 
    "type": "skProc", 
    "code": "proc LogonUserA*(para1: LPSTR; para2: LPSTR; para3: LPSTR; para4: DWORD; \u000A                 para5: DWORD; para6: PHANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LogonUserA\".}"
  }, 
  {
    "name": "CreateProcessAsUserA", 
    "type": "skProc", 
    "code": "proc CreateProcessAsUserA*(para1: HANDLE; para2: LPCTSTR; para3: LPTSTR; \u000A                           para4: LPSECURITY_ATTRIBUTES; \u000A                           para5: LPSECURITY_ATTRIBUTES; para6: WINBOOL; \u000A                           para7: DWORD; para8: LPVOID; para9: LPCTSTR; \u000A                           para10: LPSTARTUPINFO; para11: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"CreateProcessAsUserA\".}"
  }, 
  {
    "name": "GetBinaryTypeW", 
    "type": "skProc", 
    "code": "proc GetBinaryTypeW*(lpApplicationName: LPCWSTR; lpBinaryType: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeW\".}"
  }, 
  {
    "name": "GetShortPathNameW", 
    "type": "skProc", 
    "code": "proc GetShortPathNameW*(lpszLongPath: LPCWSTR; lpszShortPath: LPWSTR; \u000A                        cchBuffer: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetShortPathNameW\".}"
  }, 
  {
    "name": "GetEnvironmentStringsW", 
    "type": "skProc", 
    "code": "proc GetEnvironmentStringsW*(): LPWSTR {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetEnvironmentStringsW\".}"
  }, 
  {
    "name": "FreeEnvironmentStringsW", 
    "type": "skProc", 
    "code": "proc FreeEnvironmentStringsW*(para1: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FreeEnvironmentStringsW\".}"
  }, 
  {
    "name": "FormatMessageW", 
    "type": "skProc", 
    "code": "proc FormatMessageW*(dwFlags: DWORD; lpSource: LPCVOID; dwMessageId: DWORD; \u000A                     dwLanguageId: DWORD; lpBuffer: LPWSTR; nSize: DWORD; \u000A                     Arguments: va_list): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FormatMessageW\".}"
  }, 
  {
    "name": "CreateMailslotW", 
    "type": "skProc", 
    "code": "proc CreateMailslotW*(lpName: LPCWSTR; nMaxMessageSize: DWORD; \u000A                      lReadTimeout: DWORD; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateMailslotW\".}"
  }, 
  {
    "name": "lstrcmpW", 
    "type": "skProc", 
    "code": "proc lstrcmpW*(lpString1: LPCWSTR; lpString2: LPCWSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcmpW\".}"
  }, 
  {
    "name": "lstrcmpiW", 
    "type": "skProc", 
    "code": "proc lstrcmpiW*(lpString1: LPCWSTR; lpString2: LPCWSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcmpiW\".}"
  }, 
  {
    "name": "lstrcpynW", 
    "type": "skProc", 
    "code": "proc lstrcpynW*(lpString1: LPWSTR; lpString2: LPCWSTR; iMaxLength: int32): LPWSTR {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"lstrcpynW\".}"
  }, 
  {
    "name": "lstrcpyW", 
    "type": "skProc", 
    "code": "proc lstrcpyW*(lpString1: LPWSTR; lpString2: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcpyW\".}"
  }, 
  {
    "name": "lstrcatW", 
    "type": "skProc", 
    "code": "proc lstrcatW*(lpString1: LPWSTR; lpString2: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcatW\".}"
  }, 
  {
    "name": "lstrlenW", 
    "type": "skProc", 
    "code": "proc lstrlenW*(lpString: LPCWSTR): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"lstrlenW\".}"
  }, 
  {
    "name": "CreateMutexW", 
    "type": "skProc", 
    "code": "proc CreateMutexW*(lpMutexAttributes: LPSECURITY_ATTRIBUTES; \u000A                   bInitialOwner: WINBOOL; lpName: LPCWSTR): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"CreateMutexW\".}"
  }, 
  {
    "name": "OpenMutexW", 
    "type": "skProc", 
    "code": "proc OpenMutexW*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                 lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenMutexW\".}"
  }, 
  {
    "name": "CreateEventW", 
    "type": "skProc", 
    "code": "proc CreateEventW*(lpEventAttributes: LPSECURITY_ATTRIBUTES; \u000A                   bManualReset: WINBOOL; bInitialState: WINBOOL; \u000A                   lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CreateEventW\".}"
  }, 
  {
    "name": "OpenEventW", 
    "type": "skProc", 
    "code": "proc OpenEventW*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                 lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenEventW\".}"
  }, 
  {
    "name": "CreateSemaphoreW", 
    "type": "skProc", 
    "code": "proc CreateSemaphoreW*(lpSemaphoreAttributes: LPSECURITY_ATTRIBUTES; \u000A                       lInitialCount: LONG; lMaximumCount: LONG; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateSemaphoreW\".}"
  }, 
  {
    "name": "OpenSemaphoreW", 
    "type": "skProc", 
    "code": "proc OpenSemaphoreW*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                     lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenSemaphoreW\".}"
  }, 
  {
    "name": "CreateFileMappingW", 
    "type": "skProc", 
    "code": "proc CreateFileMappingW*(hFile: HANDLE; \u000A                         lpFileMappingAttributes: LPSECURITY_ATTRIBUTES; \u000A                         flProtect: DWORD; dwMaximumSizeHigh: DWORD; \u000A                         dwMaximumSizeLow: DWORD; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateFileMappingW\".}"
  }, 
  {
    "name": "OpenFileMappingW", 
    "type": "skProc", 
    "code": "proc OpenFileMappingW*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                       lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenFileMappingW\".}"
  }, 
  {
    "name": "GetLogicalDriveStringsW", 
    "type": "skProc", 
    "code": "proc GetLogicalDriveStringsW*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetLogicalDriveStringsW\".}"
  }, 
  {
    "name": "LoadLibraryW", 
    "type": "skProc", 
    "code": "proc LoadLibraryW*(lpLibFileName: LPCWSTR): HINST {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LoadLibraryW\".}"
  }, 
  {
    "name": "LoadLibraryExW", 
    "type": "skProc", 
    "code": "proc LoadLibraryExW*(lpLibFileName: LPCWSTR; hFile: HANDLE; dwFlags: DWORD): HINST {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LoadLibraryExW\".}"
  }, 
  {
    "name": "GetModuleFileNameW", 
    "type": "skProc", 
    "code": "proc GetModuleFileNameW*(hModule: HINST; lpFilename: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetModuleFileNameW\".}"
  }, 
  {
    "name": "GetModuleHandleW", 
    "type": "skProc", 
    "code": "proc GetModuleHandleW*(lpModuleName: LPCWSTR): HMODULE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetModuleHandleW\".}"
  }, 
  {
    "name": "FatalAppExitW", 
    "type": "skProc", 
    "code": "proc FatalAppExitW*(uAction: WINUINT; lpMessageText: LPCWSTR) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FatalAppExitW\".}"
  }, 
  {
    "name": "GetCommandLineW", 
    "type": "skProc", 
    "code": "proc GetCommandLineW*(): LPWSTR {.stdcall, dynlib: \"kernel32\", \u000A                                  importc: \"GetCommandLineW\".}"
  }, 
  {
    "name": "GetEnvironmentVariableW", 
    "type": "skProc", 
    "code": "proc GetEnvironmentVariableW*(lpName: LPCWSTR; lpBuffer: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetEnvironmentVariableW\".}"
  }, 
  {
    "name": "SetEnvironmentVariableW", 
    "type": "skProc", 
    "code": "proc SetEnvironmentVariableW*(lpName: LPCWSTR; lpValue: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetEnvironmentVariableW\".}"
  }, 
  {
    "name": "ExpandEnvironmentStringsW", 
    "type": "skProc", 
    "code": "proc ExpandEnvironmentStringsW*(lpSrc: LPCWSTR; lpDst: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ExpandEnvironmentStringsW\".}"
  }, 
  {
    "name": "OutputDebugStringW", 
    "type": "skProc", 
    "code": "proc OutputDebugStringW*(lpOutputString: LPCWSTR) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OutputDebugStringW\".}"
  }, 
  {
    "name": "FindResourceW", 
    "type": "skProc", 
    "code": "proc FindResourceW*(hModule: HINST; lpName: LPCWSTR; lpType: LPCWSTR): HRSRC {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindResourceW\".}"
  }, 
  {
    "name": "FindResourceExW", 
    "type": "skProc", 
    "code": "proc FindResourceExW*(hModule: HINST; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                      wLanguage: int16): HRSRC {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindResourceExW\".}"
  }, 
  {
    "name": "EnumResourceTypesW", 
    "type": "skProc", 
    "code": "proc EnumResourceTypesW*(hModule: HINST; lpEnumFunc: ENUMRESTYPEPROC; \u000A                         lParam: LONG): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumResourceTypesW\".}"
  }, 
  {
    "name": "EnumResourceNamesW", 
    "type": "skProc", 
    "code": "proc EnumResourceNamesW*(hModule: HINST; lpType: LPCWSTR; \u000A                         lpEnumFunc: ENUMRESNAMEPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumResourceNamesW\".}"
  }, 
  {
    "name": "EnumResourceLanguagesW", 
    "type": "skProc", 
    "code": "proc EnumResourceLanguagesW*(hModule: HINST; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                             lpEnumFunc: ENUMRESLANGPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumResourceLanguagesW\".}"
  }, 
  {
    "name": "BeginUpdateResourceW", 
    "type": "skProc", 
    "code": "proc BeginUpdateResourceW*(pFileName: LPCWSTR; bDeleteExistingResources: WINBOOL): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BeginUpdateResourceW\".}"
  }, 
  {
    "name": "UpdateResourceW", 
    "type": "skProc", 
    "code": "proc UpdateResourceW*(hUpdate: HANDLE; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                      wLanguage: int16; lpData: LPVOID; cbData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UpdateResourceW\".}"
  }, 
  {
    "name": "EndUpdateResourceW", 
    "type": "skProc", 
    "code": "proc EndUpdateResourceW*(hUpdate: HANDLE; fDiscard: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EndUpdateResourceW\".}"
  }, 
  {
    "name": "GlobalAddAtomW", 
    "type": "skProc", 
    "code": "proc GlobalAddAtomW*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalAddAtomW\".}"
  }, 
  {
    "name": "GlobalFindAtomW", 
    "type": "skProc", 
    "code": "proc GlobalFindAtomW*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalFindAtomW\".}"
  }, 
  {
    "name": "GlobalGetAtomNameW", 
    "type": "skProc", 
    "code": "proc GlobalGetAtomNameW*(nAtom: ATOM; lpBuffer: LPWSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GlobalGetAtomNameW\".}"
  }, 
  {
    "name": "AddAtomW", 
    "type": "skProc", 
    "code": "proc AddAtomW*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"AddAtomW\".}"
  }, 
  {
    "name": "FindAtomW", 
    "type": "skProc", 
    "code": "proc FindAtomW*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindAtomW\".}"
  }, 
  {
    "name": "GetAtomNameW", 
    "type": "skProc", 
    "code": "proc GetAtomNameW*(nAtom: ATOM; lpBuffer: LPWSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetAtomNameW\".}"
  }, 
  {
    "name": "GetProfileIntW", 
    "type": "skProc", 
    "code": "proc GetProfileIntW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; nDefault: WINT): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProfileIntW\".}"
  }, 
  {
    "name": "GetProfileStringW", 
    "type": "skProc", 
    "code": "proc GetProfileStringW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                        lpDefault: LPCWSTR; lpReturnedString: LPWSTR; \u000A                        nSize: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProfileStringW\".}"
  }, 
  {
    "name": "WriteProfileStringW", 
    "type": "skProc", 
    "code": "proc WriteProfileStringW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                          lpString: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteProfileStringW\".}"
  }, 
  {
    "name": "GetProfileSectionW", 
    "type": "skProc", 
    "code": "proc GetProfileSectionW*(lpAppName: LPCWSTR; lpReturnedString: LPWSTR; \u000A                         nSize: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProfileSectionW\".}"
  }, 
  {
    "name": "WriteProfileSectionW", 
    "type": "skProc", 
    "code": "proc WriteProfileSectionW*(lpAppName: LPCWSTR; lpString: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteProfileSectionW\".}"
  }, 
  {
    "name": "GetPrivateProfileIntW", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileIntW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                            nDefault: WINT; lpFileName: LPCWSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileIntW\".}"
  }, 
  {
    "name": "GetPrivateProfileStringW", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileStringW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                               lpDefault: LPCWSTR; lpReturnedString: LPWSTR; \u000A                               nSize: DWORD; lpFileName: LPCWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStringW\".}"
  }, 
  {
    "name": "WritePrivateProfileStringW", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileStringW*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                                 lpString: LPCWSTR; lpFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WritePrivateProfileStringW\".}"
  }, 
  {
    "name": "GetPrivateProfileSectionW", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSectionW*(lpAppName: LPCWSTR; lpReturnedString: LPWSTR; \u000A                                nSize: DWORD; lpFileName: LPCWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionW\".}"
  }, 
  {
    "name": "WritePrivateProfileSectionW", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileSectionW*(lpAppName: LPCWSTR; lpString: LPCWSTR; \u000A                                  lpFileName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WritePrivateProfileSectionW\".}"
  }, 
  {
    "name": "GetDriveTypeW", 
    "type": "skProc", 
    "code": "proc GetDriveTypeW*(lpRootPathName: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDriveTypeW\".}"
  }, 
  {
    "name": "GetSystemDirectoryW", 
    "type": "skProc", 
    "code": "proc GetSystemDirectoryW*(lpBuffer: LPWSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetSystemDirectoryW\".}"
  }, 
  {
    "name": "GetTempPathW", 
    "type": "skProc", 
    "code": "proc GetTempPathW*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTempPathW\".}"
  }, 
  {
    "name": "GetTempFileNameW", 
    "type": "skProc", 
    "code": "proc GetTempFileNameW*(lpPathName: LPCWSTR; lpPrefixString: LPCWSTR; \u000A                       uUnique: WINUINT; lpTempFileName: LPWSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTempFileNameW\".}"
  }, 
  {
    "name": "GetWindowsDirectoryW", 
    "type": "skProc", 
    "code": "proc GetWindowsDirectoryW*(lpBuffer: LPWSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetWindowsDirectoryW\".}"
  }, 
  {
    "name": "SetCurrentDirectoryW", 
    "type": "skProc", 
    "code": "proc SetCurrentDirectoryW*(lpPathName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCurrentDirectoryW\".}"
  }, 
  {
    "name": "GetCurrentDirectoryW", 
    "type": "skProc", 
    "code": "proc GetCurrentDirectoryW*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCurrentDirectoryW\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceW", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceW*(lpRootPathName: LPCWSTR; lpSectorsPerCluster: LPDWORD; \u000A                        lpBytesPerSector: LPDWORD; \u000A                        lpNumberOfFreeClusters: LPDWORD; \u000A                        lpTotalNumberOfClusters: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceW\".}"
  }, 
  {
    "name": "CreateDirectoryW", 
    "type": "skProc", 
    "code": "proc CreateDirectoryW*(lpPathName: LPCWSTR; \u000A                       lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryW\".}"
  }, 
  {
    "name": "CreateDirectoryExW", 
    "type": "skProc", 
    "code": "proc CreateDirectoryExW*(lpTemplateDirectory: LPCWSTR; lpNewDirectory: LPCWSTR; \u000A                         lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryExW\".}"
  }, 
  {
    "name": "RemoveDirectoryW", 
    "type": "skProc", 
    "code": "proc RemoveDirectoryW*(lpPathName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"RemoveDirectoryW\".}"
  }, 
  {
    "name": "GetFullPathNameW", 
    "type": "skProc", 
    "code": "proc GetFullPathNameW*(lpFileName: LPCWSTR; nBufferLength: DWORD; \u000A                       lpBuffer: LPWSTR; lpFilePart: var LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetFullPathNameW\".}"
  }, 
  {
    "name": "DefineDosDeviceW", 
    "type": "skProc", 
    "code": "proc DefineDosDeviceW*(dwFlags: DWORD; lpDeviceName: LPCWSTR; \u000A                       lpTargetPath: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DefineDosDeviceW\".}"
  }, 
  {
    "name": "QueryDosDeviceW", 
    "type": "skProc", 
    "code": "proc QueryDosDeviceW*(lpDeviceName: LPCWSTR; lpTargetPath: LPWSTR; \u000A                      ucchMax: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"QueryDosDeviceW\".}"
  }, 
  {
    "name": "CreateFileW", 
    "type": "skProc", 
    "code": "proc CreateFileW*(lpFileName: LPCWSTR; dwDesiredAccess: DWORD; \u000A                  dwShareMode: DWORD; \u000A                  lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                  dwCreationDisposition: DWORD; dwFlagsAndAttributes: DWORD; \u000A                  hTemplateFile: HANDLE): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CreateFileW\".}"
  }, 
  {
    "name": "SetFileAttributesW", 
    "type": "skProc", 
    "code": "proc SetFileAttributesW*(lpFileName: LPCWSTR; dwFileAttributes: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFileAttributesW\".}"
  }, 
  {
    "name": "GetFileAttributesW", 
    "type": "skProc", 
    "code": "proc GetFileAttributesW*(lpFileName: LPCWSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetFileAttributesW\".}"
  }, 
  {
    "name": "GetCompressedFileSizeW", 
    "type": "skProc", 
    "code": "proc GetCompressedFileSizeW*(lpFileName: LPCWSTR; lpFileSizeHigh: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCompressedFileSizeW\".}"
  }, 
  {
    "name": "DeleteFileW", 
    "type": "skProc", 
    "code": "proc DeleteFileW*(lpFileName: LPCWSTR): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"DeleteFileW\".}"
  }, 
  {
    "name": "SearchPathW", 
    "type": "skProc", 
    "code": "proc SearchPathW*(lpPath: LPCWSTR; lpFileName: LPCWSTR; lpExtension: LPCWSTR; \u000A                  nBufferLength: DWORD; lpBuffer: LPWSTR; lpFilePart: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SearchPathW\".}"
  }, 
  {
    "name": "CopyFileW", 
    "type": "skProc", 
    "code": "proc CopyFileW*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR; \u000A                bFailIfExists: WINBOOL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CopyFileW\".}"
  }, 
  {
    "name": "MoveFileW", 
    "type": "skProc", 
    "code": "proc MoveFileW*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MoveFileW\".}"
  }, 
  {
    "name": "MoveFileExW", 
    "type": "skProc", 
    "code": "proc MoveFileExW*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR; \u000A                  dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"MoveFileExW\".}"
  }, 
  {
    "name": "CreateNamedPipeW", 
    "type": "skProc", 
    "code": "proc CreateNamedPipeW*(lpName: LPCWSTR; dwOpenMode: DWORD; dwPipeMode: DWORD; \u000A                       nMaxInstances: DWORD; nOutBufferSize: DWORD; \u000A                       nInBufferSize: DWORD; nDefaultTimeOut: DWORD; \u000A                       lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateNamedPipeW\".}"
  }, 
  {
    "name": "GetNamedPipeHandleStateW", 
    "type": "skProc", 
    "code": "proc GetNamedPipeHandleStateW*(hNamedPipe: HANDLE; lpState: LPDWORD; \u000A                               lpCurInstances: LPDWORD; \u000A                               lpMaxCollectionCount: LPDWORD; \u000A                               lpCollectDataTimeout: LPDWORD; \u000A                               lpUserName: LPWSTR; nMaxUserNameSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNamedPipeHandleStateW\".}"
  }, 
  {
    "name": "CallNamedPipeW", 
    "type": "skProc", 
    "code": "proc CallNamedPipeW*(lpNamedPipeName: LPCWSTR; lpInBuffer: LPVOID; \u000A                     nInBufferSize: DWORD; lpOutBuffer: LPVOID; \u000A                     nOutBufferSize: DWORD; lpBytesRead: LPDWORD; \u000A                     nTimeOut: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CallNamedPipeW\".}"
  }, 
  {
    "name": "WaitNamedPipeW", 
    "type": "skProc", 
    "code": "proc WaitNamedPipeW*(lpNamedPipeName: LPCWSTR; nTimeOut: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitNamedPipeW\".}"
  }, 
  {
    "name": "SetVolumeLabelW", 
    "type": "skProc", 
    "code": "proc SetVolumeLabelW*(lpRootPathName: LPCWSTR; lpVolumeName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetVolumeLabelW\".}"
  }, 
  {
    "name": "GetVolumeInformationW", 
    "type": "skProc", 
    "code": "proc GetVolumeInformationW*(lpRootPathName: LPCWSTR; lpVolumeNameBuffer: LPWSTR; \u000A                            nVolumeNameSize: DWORD; \u000A                            lpVolumeSerialNumber: LPDWORD; \u000A                            lpMaximumComponentLength: LPDWORD; \u000A                            lpFileSystemFlags: LPDWORD; \u000A                            lpFileSystemNameBuffer: LPWSTR; \u000A                            nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationW\".}"
  }, 
  {
    "name": "ClearEventLogW", 
    "type": "skProc", 
    "code": "proc ClearEventLogW*(hEventLog: HANDLE; lpBackupFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ClearEventLogW\".}"
  }, 
  {
    "name": "BackupEventLogW", 
    "type": "skProc", 
    "code": "proc BackupEventLogW*(hEventLog: HANDLE; lpBackupFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"BackupEventLogW\".}"
  }, 
  {
    "name": "OpenEventLogW", 
    "type": "skProc", 
    "code": "proc OpenEventLogW*(lpUNCServerName: LPCWSTR; lpSourceName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenEventLogW\".}"
  }, 
  {
    "name": "RegisterEventSourceW", 
    "type": "skProc", 
    "code": "proc RegisterEventSourceW*(lpUNCServerName: LPCWSTR; lpSourceName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterEventSourceW\".}"
  }, 
  {
    "name": "OpenBackupEventLogW", 
    "type": "skProc", 
    "code": "proc OpenBackupEventLogW*(lpUNCServerName: LPCWSTR; lpFileName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenBackupEventLogW\".}"
  }, 
  {
    "name": "ReadEventLogW", 
    "type": "skProc", 
    "code": "proc ReadEventLogW*(hEventLog: HANDLE; dwReadFlags: DWORD; \u000A                    dwRecordOffset: DWORD; lpBuffer: LPVOID; \u000A                    nNumberOfBytesToRead: DWORD; pnBytesRead: LPDWORD; \u000A                    pnMinNumberOfBytesNeeded: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ReadEventLogW\".}"
  }, 
  {
    "name": "ReportEventW", 
    "type": "skProc", 
    "code": "proc ReportEventW*(hEventLog: HANDLE; wType: int16; wCategory: int16; \u000A                   dwEventID: DWORD; lpUserSid: PSID; wNumStrings: int16; \u000A                   dwDataSize: DWORD; lpStrings: LPPCWSTR; lpRawData: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReportEventW\".}"
  }, 
  {
    "name": "AccessCheckAndAuditAlarmW", 
    "type": "skProc", 
    "code": "proc AccessCheckAndAuditAlarmW*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                                ObjectTypeName: LPWSTR; ObjectName: LPWSTR; \u000A                                SecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                DesiredAccess: DWORD; \u000A                                GenericMapping: PGENERIC_MAPPING; \u000A                                ObjectCreation: WINBOOL; GrantedAccess: LPDWORD; \u000A                                AccessStatus: LPBOOL; pfGenerateOnClose: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AccessCheckAndAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarmW", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarmW*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                            ObjectTypeName: LPWSTR; ObjectName: LPWSTR; \u000A                            pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                            ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                            GrantedAccess: DWORD; Privileges: PPRIVILEGE_SET; \u000A                            ObjectCreation: WINBOOL; AccessGranted: WINBOOL; \u000A                            GenerateOnClose: LPBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarmW", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarmW*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                                 ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                                 Privileges: PPRIVILEGE_SET; \u000A                                 AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectCloseAuditAlarmW", 
    "type": "skProc", 
    "code": "proc ObjectCloseAuditAlarmW*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                             GenerateOnClose: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectCloseAuditAlarmW\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarmW", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarmW*(SubsystemName: LPCWSTR; ServiceName: LPCWSTR; \u000A                                   ClientToken: HANDLE; \u000A                                   Privileges: PPRIVILEGE_SET; \u000A                                   AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmW\".}"
  }, 
  {
    "name": "SetFileSecurityW", 
    "type": "skProc", 
    "code": "proc SetFileSecurityW*(lpFileName: LPCWSTR; \u000A                       SecurityInformation: SECURITY_INFORMATION; \u000A                       pSecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetFileSecurityW\".}"
  }, 
  {
    "name": "GetFileSecurityW", 
    "type": "skProc", 
    "code": "proc GetFileSecurityW*(lpFileName: LPCWSTR; \u000A                       RequestedInformation: SECURITY_INFORMATION; \u000A                       pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                       nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetFileSecurityW\".}"
  }, 
  {
    "name": "FindFirstChangeNotificationW", 
    "type": "skProc", 
    "code": "proc FindFirstChangeNotificationW*(lpPathName: LPCWSTR; bWatchSubtree: WINBOOL; \u000A                                   dwNotifyFilter: DWORD): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FindFirstChangeNotificationW\".}"
  }, 
  {
    "name": "IsBadStringPtrW", 
    "type": "skProc", 
    "code": "proc IsBadStringPtrW*(lpsz: LPCWSTR; ucchMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadStringPtrW\".}"
  }, 
  {
    "name": "LookupAccountSidW", 
    "type": "skProc", 
    "code": "proc LookupAccountSidW*(lpSystemName: LPCWSTR; Sid: PSID; Name: LPWSTR; \u000A                        cbName: LPDWORD; ReferencedDomainName: LPWSTR; \u000A                        cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountSidW\".}"
  }, 
  {
    "name": "LookupAccountNameW", 
    "type": "skProc", 
    "code": "proc LookupAccountNameW*(lpSystemName: LPCWSTR; lpAccountName: LPCWSTR; \u000A                         Sid: PSID; cbSid: LPDWORD; \u000A                         ReferencedDomainName: LPWSTR; \u000A                         cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeValueW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValueW*(lpSystemName: LPCWSTR; lpName: LPCWSTR; \u000A                            lpLuid: PLUID): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeValueW\".}"
  }, 
  {
    "name": "LookupPrivilegeNameW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeNameW*(lpSystemName: LPCWSTR; lpLuid: PLUID; lpName: LPWSTR; \u000A                           cbName: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayNameW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayNameW*(lpSystemName: LPCWSTR; lpName: LPCWSTR; \u000A                                  lpDisplayName: LPWSTR; cbDisplayName: LPDWORD; \u000A                                  lpLanguageId: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameW\".}"
  }, 
  {
    "name": "BuildCommDCBW", 
    "type": "skProc", 
    "code": "proc BuildCommDCBW*(lpDef: LPCWSTR; lpDCB: LPDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBW\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeoutsW", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeoutsW*(lpDef: LPCWSTR; lpDCB: LPDCB; \u000A                               lpCommTimeouts: LPCOMMTIMEOUTS): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsW\".}"
  }, 
  {
    "name": "CommConfigDialogW", 
    "type": "skProc", 
    "code": "proc CommConfigDialogW*(lpszName: LPCWSTR; wnd: HWND; lpCC: LPCOMMCONFIG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogW\".}"
  }, 
  {
    "name": "GetDefaultCommConfigW", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfigW*(lpszName: LPCWSTR; lpCC: LPCOMMCONFIG; \u000A                            lpdwSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigW\".}"
  }, 
  {
    "name": "SetDefaultCommConfigW", 
    "type": "skProc", 
    "code": "proc SetDefaultCommConfigW*(lpszName: LPCWSTR; lpCC: LPCOMMCONFIG; dwSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetDefaultCommConfigW\".}"
  }, 
  {
    "name": "GetComputerNameW", 
    "type": "skProc", 
    "code": "proc GetComputerNameW*(lpBuffer: LPWSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameW\".}"
  }, 
  {
    "name": "SetComputerNameW", 
    "type": "skProc", 
    "code": "proc SetComputerNameW*(lpComputerName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetComputerNameW\".}"
  }, 
  {
    "name": "GetUserNameW", 
    "type": "skProc", 
    "code": "proc GetUserNameW*(lpBuffer: LPWSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameW\".}"
  }, 
  {
    "name": "LoadKeyboardLayoutW", 
    "type": "skProc", 
    "code": "proc LoadKeyboardLayoutW*(pwszKLID: LPCWSTR; Flags: WINUINT): HKL {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadKeyboardLayoutW\".}"
  }, 
  {
    "name": "GetKeyboardLayoutNameW", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayoutNameW*(pwszKLID: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetKeyboardLayoutNameW\".}"
  }, 
  {
    "name": "CreateDesktopW", 
    "type": "skProc", 
    "code": "proc CreateDesktopW*(lpszDesktop: LPWSTR; lpszDevice: LPWSTR; \u000A                     pDevmodew: LPDEVMODEw; dwFlags: DWORD; \u000A                     dwDesiredAccess: DWORD; lpsa: LPSECURITY_ATTRIBUTES): HDESK {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateDesktopW\".}"
  }, 
  {
    "name": "OpenDesktopW", 
    "type": "skProc", 
    "code": "proc OpenDesktopW*(lpszDesktop: LPWSTR; dwFlags: DWORD; fInherit: WINBOOL; \u000A                   dwDesiredAccess: DWORD): HDESK {.stdcall, dynlib: \"user32\", \u000A    importc: \"OpenDesktopW\".}"
  }, 
  {
    "name": "EnumDesktopsW", 
    "type": "skProc", 
    "code": "proc EnumDesktopsW*(hwinsta: HWINSTA; lpEnumFunc: DESKTOPENUMPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumDesktopsW\".}"
  }, 
  {
    "name": "CreateWindowStationW", 
    "type": "skProc", 
    "code": "proc CreateWindowStationW*(lpwinsta: LPWSTR; dwReserved: DWORD; \u000A                           dwDesiredAccess: DWORD; lpsa: LPSECURITY_ATTRIBUTES): HWINSTA {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowStationW\".}"
  }, 
  {
    "name": "OpenWindowStationW", 
    "type": "skProc", 
    "code": "proc OpenWindowStationW*(lpszWinSta: LPWSTR; fInherit: WINBOOL; \u000A                         dwDesiredAccess: DWORD): HWINSTA {.stdcall, \u000A    dynlib: \"user32\", importc: \"OpenWindowStationW\".}"
  }, 
  {
    "name": "EnumWindowStationsW", 
    "type": "skProc", 
    "code": "proc EnumWindowStationsW*(lpEnumFunc: ENUMWINDOWSTATIONPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumWindowStationsW\".}"
  }, 
  {
    "name": "GetUserObjectInformationW", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformationW*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                                nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationW\".}"
  }, 
  {
    "name": "SetUserObjectInformationW", 
    "type": "skProc", 
    "code": "proc SetUserObjectInformationW*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                                nLength: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetUserObjectInformationW\".}"
  }, 
  {
    "name": "RegisterWindowMessageW", 
    "type": "skProc", 
    "code": "proc RegisterWindowMessageW*(lpString: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterWindowMessageW\".}"
  }, 
  {
    "name": "GetMessageW", 
    "type": "skProc", 
    "code": "proc GetMessageW*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                  wMsgFilterMax: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMessageW\".}"
  }, 
  {
    "name": "DispatchMessageW", 
    "type": "skProc", 
    "code": "proc DispatchMessageW*(lpMsg: LPMSG): LONG {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageW\".}"
  }, 
  {
    "name": "PeekMessageW", 
    "type": "skProc", 
    "code": "proc PeekMessageW*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                   wMsgFilterMax: WINUINT; wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageW\".}"
  }, 
  {
    "name": "SendMessageW", 
    "type": "skProc", 
    "code": "proc SendMessageW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageW\".}"
  }, 
  {
    "name": "SendMessageTimeoutW", 
    "type": "skProc", 
    "code": "proc SendMessageTimeoutW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                          fuFlags: WINUINT; uTimeout: WINUINT; \u000A                          lpdwResult: LPDWORD): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendMessageTimeoutW\".}"
  }, 
  {
    "name": "SendNotifyMessageW", 
    "type": "skProc", 
    "code": "proc SendNotifyMessageW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendNotifyMessageW\".}"
  }, 
  {
    "name": "SendMessageCallbackW", 
    "type": "skProc", 
    "code": "proc SendMessageCallbackW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                           lpResultCallBack: SENDASYNCPROC; dwData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageCallbackW\".}"
  }, 
  {
    "name": "PostMessageW", 
    "type": "skProc", 
    "code": "proc PostMessageW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostMessageW\".}"
  }, 
  {
    "name": "PostThreadMessageW", 
    "type": "skProc", 
    "code": "proc PostThreadMessageW*(idThread: DWORD; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostThreadMessageW\".}"
  }, 
  {
    "name": "DefWindowProcW", 
    "type": "skProc", 
    "code": "proc DefWindowProcW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefWindowProcW\".}"
  }, 
  {
    "name": "CallWindowProcW", 
    "type": "skProc", 
    "code": "proc CallWindowProcW*(lpPrevWndFunc: WNDPROC; wnd: HWND; Msg: WINUINT; \u000A                      wp: WPARAM; lp: LPARAM): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallWindowProcW\".}"
  }, 
  {
    "name": "RegisterClassW", 
    "type": "skProc", 
    "code": "proc RegisterClassW*(lpWndClass: LPWNDCLASSW): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassW\".}"
  }, 
  {
    "name": "UnregisterClassW", 
    "type": "skProc", 
    "code": "proc UnregisterClassW*(lpClassName: LPCWSTR; hInstance: HINST): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnregisterClassW\".}"
  }, 
  {
    "name": "GetClassInfoW", 
    "type": "skProc", 
    "code": "proc GetClassInfoW*(hInstance: HINST; lpClassName: LPCWSTR; \u000A                    lpWndClass: LPWNDCLASS): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassInfoW\".}"
  }, 
  {
    "name": "RegisterClassExW", 
    "type": "skProc", 
    "code": "proc RegisterClassExW*(para1: LPWNDCLASSEXW): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassExW\".}"
  }, 
  {
    "name": "GetClassInfoExW", 
    "type": "skProc", 
    "code": "proc GetClassInfoExW*(para1: HINST; para2: LPCWSTR; para3: LPWNDCLASSEX): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassInfoExW\".}"
  }, 
  {
    "name": "CreateWindowExW", 
    "type": "skProc", 
    "code": "proc CreateWindowExW*(dwExStyle: DWORD; lpClassName: LPCWSTR; \u000A                      lpWindowName: LPCWSTR; dwStyle: DWORD; X: int32; Y: int32; \u000A                      nWidth: int32; nHeight: int32; hWndParent: HWND; \u000A                      menu: HMENU; hInstance: HINST; lpParam: LPVOID): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowExW\".}"
  }, 
  {
    "name": "CreateDialogParamW", 
    "type": "skProc", 
    "code": "proc CreateDialogParamW*(hInstance: HINST; lpTemplateName: LPCWSTR; \u000A                         hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                         dwInitParam: LPARAM): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateDialogParamW\".}"
  }, 
  {
    "name": "CreateDialogIndirectParamW", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectParamW*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                                 hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                                 dwInitParam: LPARAM): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDialogIndirectParamW\".}"
  }, 
  {
    "name": "DialogBoxParamW", 
    "type": "skProc", 
    "code": "proc DialogBoxParamW*(hInstance: HINST; lpTemplateName: LPCWSTR; \u000A                      hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                      dwInitParam: LPARAM): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DialogBoxParamW\".}"
  }, 
  {
    "name": "DialogBoxIndirectParamW", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParamW*(hInstance: HINST; hDialogTemplate: LPCDLGTEMPLATE; \u000A                              hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                              dwInitParam: LPARAM): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamW\".}"
  }, 
  {
    "name": "SetDlgItemTextW", 
    "type": "skProc", 
    "code": "proc SetDlgItemTextW*(hDlg: HWND; nIDDlgItem: int32; lpString: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetDlgItemTextW\".}"
  }, 
  {
    "name": "GetDlgItemTextW", 
    "type": "skProc", 
    "code": "proc GetDlgItemTextW*(hDlg: HWND; nIDDlgItem: int32; lpString: LPWSTR; \u000A                      nMaxCount: int32): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetDlgItemTextW\".}"
  }, 
  {
    "name": "SendDlgItemMessageW", 
    "type": "skProc", 
    "code": "proc SendDlgItemMessageW*(hDlg: HWND; nIDDlgItem: int32; Msg: WINUINT; \u000A                          wp: WPARAM; lp: LPARAM): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendDlgItemMessageW\".}"
  }, 
  {
    "name": "DefDlgProcW", 
    "type": "skProc", 
    "code": "proc DefDlgProcW*(hDlg: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefDlgProcW\".}"
  }, 
  {
    "name": "CallMsgFilterW", 
    "type": "skProc", 
    "code": "proc CallMsgFilterW*(lpMsg: LPMSG; nCode: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterW\".}"
  }, 
  {
    "name": "RegisterClipboardFormatW", 
    "type": "skProc", 
    "code": "proc RegisterClipboardFormatW*(lpszFormat: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterClipboardFormatW\".}"
  }, 
  {
    "name": "GetClipboardFormatNameW", 
    "type": "skProc", 
    "code": "proc GetClipboardFormatNameW*(format: WINUINT; lpszFormatName: LPWSTR; \u000A                              cchMaxCount: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClipboardFormatNameW\".}"
  }, 
  {
    "name": "CharToOemW", 
    "type": "skProc", 
    "code": "proc CharToOemW*(lpszSrc: LPCWSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharToOemW\".}"
  }, 
  {
    "name": "OemToCharW", 
    "type": "skProc", 
    "code": "proc OemToCharW*(lpszSrc: LPCSTR; lpszDst: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OemToCharW\".}"
  }, 
  {
    "name": "CharToOemBuffW", 
    "type": "skProc", 
    "code": "proc CharToOemBuffW*(lpszSrc: LPCWSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CharToOemBuffW\".}"
  }, 
  {
    "name": "OemToCharBuffW", 
    "type": "skProc", 
    "code": "proc OemToCharBuffW*(lpszSrc: LPCSTR; lpszDst: LPWSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"OemToCharBuffW\".}"
  }, 
  {
    "name": "CharUpperW", 
    "type": "skProc", 
    "code": "proc CharUpperW*(lpsz: LPWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A    importc: \"CharUpperW\".}"
  }, 
  {
    "name": "CharUpperBuffW", 
    "type": "skProc", 
    "code": "proc CharUpperBuffW*(lpsz: LPWSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharUpperBuffW\".}"
  }, 
  {
    "name": "CharLowerW", 
    "type": "skProc", 
    "code": "proc CharLowerW*(lpsz: LPWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A    importc: \"CharLowerW\".}"
  }, 
  {
    "name": "CharLowerBuffW", 
    "type": "skProc", 
    "code": "proc CharLowerBuffW*(lpsz: LPWSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharLowerBuffW\".}"
  }, 
  {
    "name": "CharNextW", 
    "type": "skProc", 
    "code": "proc CharNextW*(lpsz: LPCWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A    importc: \"CharNextW\".}"
  }, 
  {
    "name": "CharPrevW", 
    "type": "skProc", 
    "code": "proc CharPrevW*(lpszStart: LPCWSTR; lpszCurrent: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharPrevW\".}"
  }, 
  {
    "name": "IsCharAlphaW", 
    "type": "skProc", 
    "code": "proc IsCharAlphaW*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharAlphaW\".}"
  }, 
  {
    "name": "IsCharAlphaNumericW", 
    "type": "skProc", 
    "code": "proc IsCharAlphaNumericW*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharAlphaNumericW\".}"
  }, 
  {
    "name": "IsCharUpperW", 
    "type": "skProc", 
    "code": "proc IsCharUpperW*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharUpperW\".}"
  }, 
  {
    "name": "IsCharLowerW", 
    "type": "skProc", 
    "code": "proc IsCharLowerW*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharLowerW\".}"
  }, 
  {
    "name": "GetKeyNameTextW", 
    "type": "skProc", 
    "code": "proc GetKeyNameTextW*(lParam: LONG; lpString: LPWSTR; nSize: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetKeyNameTextW\".}"
  }, 
  {
    "name": "VkKeyScanW", 
    "type": "skProc", 
    "code": "proc VkKeyScanW*(ch: WCHAR): SHORT {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"VkKeyScanW\".}"
  }, 
  {
    "name": "VkKeyScanExW", 
    "type": "skProc", 
    "code": "proc VkKeyScanExW*(ch: WCHAR; dwhkl: HKL): SHORT {.stdcall, dynlib: \"user32\", \u000A    importc: \"VkKeyScanExW\".}"
  }, 
  {
    "name": "MapVirtualKeyW", 
    "type": "skProc", 
    "code": "proc MapVirtualKeyW*(uCode: WINUINT; uMapType: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"MapVirtualKeyW\".}"
  }, 
  {
    "name": "MapVirtualKeyExW", 
    "type": "skProc", 
    "code": "proc MapVirtualKeyExW*(uCode: WINUINT; uMapType: WINUINT; dwhkl: HKL): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"MapVirtualKeyExW\".}"
  }, 
  {
    "name": "LoadAcceleratorsW", 
    "type": "skProc", 
    "code": "proc LoadAcceleratorsW*(hInstance: HINST; lpTableName: LPCWSTR): HACCEL {.\u000A    stdcall, dynlib: \"user32\", importc: \"LoadAcceleratorsW\".}"
  }, 
  {
    "name": "CreateAcceleratorTableW", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTableW*(para1: LPACCEL; para2: int32): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableW\".}"
  }, 
  {
    "name": "CopyAcceleratorTableW", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTableW*(hAccelSrc: HACCEL; lpAccelDst: LPACCEL; \u000A                            cAccelEntries: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyAcceleratorTableW\".}"
  }, 
  {
    "name": "TranslateAcceleratorW", 
    "type": "skProc", 
    "code": "proc TranslateAcceleratorW*(wnd: HWND; hAccTable: HACCEL; lpMsg: LPMSG): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorW\".}"
  }, 
  {
    "name": "LoadMenuW", 
    "type": "skProc", 
    "code": "proc LoadMenuW*(hInstance: HINST; lpMenuName: LPCWSTR): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuW\".}"
  }, 
  {
    "name": "LoadMenuIndirectW", 
    "type": "skProc", 
    "code": "proc LoadMenuIndirectW*(lpMenuTemplate: LPMENUTEMPLATE): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuIndirectW\".}"
  }, 
  {
    "name": "ChangeMenuW", 
    "type": "skProc", 
    "code": "proc ChangeMenuW*(menu: HMENU; cmd: WINUINT; lpszNewItem: LPCWSTR; \u000A                  cmdInsert: WINUINT; flags: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ChangeMenuW\".}"
  }, 
  {
    "name": "GetMenuStringW", 
    "type": "skProc", 
    "code": "proc GetMenuStringW*(menu: HMENU; uIDItem: WINUINT; lpString: LPWSTR; \u000A                     nMaxCount: int32; uFlag: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuStringW\".}"
  }, 
  {
    "name": "InsertMenuW", 
    "type": "skProc", 
    "code": "proc InsertMenuW*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                  uIDNewItem: WINUINT; lpNewItem: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuW\".}"
  }, 
  {
    "name": "AppendMenuW", 
    "type": "skProc", 
    "code": "proc AppendMenuW*(menu: HMENU; uFlags: WINUINT; uIDNewItem: WINUINT; \u000A                  lpNewItem: LPCWSTR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"AppendMenuW\".}"
  }, 
  {
    "name": "ModifyMenuW", 
    "type": "skProc", 
    "code": "proc ModifyMenuW*(hMnu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                  uIDNewItem: WINUINT; lpNewItem: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ModifyMenuW\".}"
  }, 
  {
    "name": "InsertMenuItemW", 
    "type": "skProc", 
    "code": "proc InsertMenuItemW*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                      para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuItemW\".}"
  }, 
  {
    "name": "GetMenuItemInfoW", 
    "type": "skProc", 
    "code": "proc GetMenuItemInfoW*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                       para4: LPMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuItemInfoW\".}"
  }, 
  {
    "name": "SetMenuItemInfoW", 
    "type": "skProc", 
    "code": "proc SetMenuItemInfoW*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                       para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetMenuItemInfoW\".}"
  }, 
  {
    "name": "DrawTextW", 
    "type": "skProc", 
    "code": "proc DrawTextW*(hDC: HDC; lpString: LPCWSTR; nCount: int32; lpRect: LPRECT; \u000A                uFormat: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawTextW\".}"
  }, 
  {
    "name": "DrawTextExW", 
    "type": "skProc", 
    "code": "proc DrawTextExW*(para1: HDC; para2: LPWSTR; para3: int32; para4: LPRECT; \u000A                  para5: WINUINT; para6: LPDRAWTEXTPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawTextExW\".}"
  }, 
  {
    "name": "GrayStringW", 
    "type": "skProc", 
    "code": "proc GrayStringW*(hDC: HDC; hBrush: HBRUSH; lpOutputFunc: GRAYSTRINGPROC; \u000A                  lpData: LPARAM; nCount: int32; X: int32; Y: int32; \u000A                  nWidth: int32; nHeight: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GrayStringW\".}"
  }, 
  {
    "name": "DrawStateW", 
    "type": "skProc", 
    "code": "proc DrawStateW*(para1: HDC; para2: HBRUSH; para3: DRAWSTATEPROC; para4: LPARAM; \u000A                 para5: WPARAM; para6: int32; para7: int32; para8: int32; \u000A                 para9: int32; para10: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawStateW\".}"
  }, 
  {
    "name": "TabbedTextOutW", 
    "type": "skProc", 
    "code": "proc TabbedTextOutW*(hDC: HDC; X: int32; Y: int32; lpString: LPCWSTR; \u000A                     nCount: int32; nTabPositions: int32; \u000A                     lpnTabStopPositions: LPINT; nTabOrigin: int32): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"TabbedTextOutW\".}"
  }, 
  {
    "name": "GetTabbedTextExtentW", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtentW*(hDC: HDC; lpString: LPCWSTR; nCount: int32; \u000A                           nTabPositions: int32; lpnTabStopPositions: LPINT): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetTabbedTextExtentW\".}"
  }, 
  {
    "name": "SetPropW", 
    "type": "skProc", 
    "code": "proc SetPropW*(wnd: HWND; lpString: LPCWSTR; hData: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetPropW\".}"
  }, 
  {
    "name": "GetPropW", 
    "type": "skProc", 
    "code": "proc GetPropW*(wnd: HWND; lpString: LPCWSTR): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetPropW\".}"
  }, 
  {
    "name": "RemovePropW", 
    "type": "skProc", 
    "code": "proc RemovePropW*(wnd: HWND; lpString: LPCWSTR): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"RemovePropW\".}"
  }, 
  {
    "name": "EnumPropsExW", 
    "type": "skProc", 
    "code": "proc EnumPropsExW*(wnd: HWND; lpEnumFunc: PROPENUMPROCEX; lp: LPARAM): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumPropsExW\".}"
  }, 
  {
    "name": "EnumPropsW", 
    "type": "skProc", 
    "code": "proc EnumPropsW*(wnd: HWND; lpEnumFunc: PROPENUMPROC): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumPropsW\".}"
  }, 
  {
    "name": "SetWindowTextW", 
    "type": "skProc", 
    "code": "proc SetWindowTextW*(wnd: HWND; lpString: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowTextW\".}"
  }, 
  {
    "name": "GetWindowTextW", 
    "type": "skProc", 
    "code": "proc GetWindowTextW*(wnd: HWND; lpString: LPWSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowTextW\".}"
  }, 
  {
    "name": "GetWindowTextLengthW", 
    "type": "skProc", 
    "code": "proc GetWindowTextLengthW*(wnd: HWND): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowTextLengthW\".}"
  }, 
  {
    "name": "MessageBoxW", 
    "type": "skProc", 
    "code": "proc MessageBoxW*(wnd: HWND; lpText: LPCWSTR; lpCaption: LPCWSTR; uType: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"MessageBoxW\".}"
  }, 
  {
    "name": "MessageBoxExW", 
    "type": "skProc", 
    "code": "proc MessageBoxExW*(wnd: HWND; lpText: LPCWSTR; lpCaption: LPCWSTR; \u000A                    uType: WINUINT; wLanguageId: int16): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxExW\".}"
  }, 
  {
    "name": "MessageBoxIndirectW", 
    "type": "skProc", 
    "code": "proc MessageBoxIndirectW*(para1: LPMSGBOXPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxIndirectW\".}"
  }, 
  {
    "name": "GetWindowLongW", 
    "type": "skProc", 
    "code": "proc GetWindowLongW*(wnd: HWND; nIndex: int32): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowLongW\".}"
  }, 
  {
    "name": "SetWindowLongW", 
    "type": "skProc", 
    "code": "proc SetWindowLongW*(wnd: HWND; nIndex: int32; dwNewLong: LONG): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowLongW\".}"
  }, 
  {
    "name": "GetClassLongW", 
    "type": "skProc", 
    "code": "proc GetClassLongW*(wnd: HWND; nIndex: int32): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassLongW\".}"
  }, 
  {
    "name": "SetClassLongW", 
    "type": "skProc", 
    "code": "proc SetClassLongW*(wnd: HWND; nIndex: int32; dwNewLong: LONG): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetClassLongW\".}"
  }, 
  {
    "name": "GetWindowLongPtrW", 
    "type": "skProc", 
    "code": "proc GetWindowLongPtrW*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowLongPtrW\".}"
  }, 
  {
    "name": "SetWindowLongPtrW", 
    "type": "skProc", 
    "code": "proc SetWindowLongPtrW*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetWindowLongPtrW\".}"
  }, 
  {
    "name": "GetClassLongPtrW", 
    "type": "skProc", 
    "code": "proc GetClassLongPtrW*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassLongPtrW\".}"
  }, 
  {
    "name": "SetClassLongPtrW", 
    "type": "skProc", 
    "code": "proc SetClassLongPtrW*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetClassLongPtrW\".}"
  }, 
  {
    "name": "FindWindowW", 
    "type": "skProc", 
    "code": "proc FindWindowW*(lpClassName: LPCWSTR; lpWindowName: LPCWSTR): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"FindWindowW\".}"
  }, 
  {
    "name": "FindWindowExW", 
    "type": "skProc", 
    "code": "proc FindWindowExW*(para1: HWND; para2: HWND; para3: LPCWSTR; para4: LPCWSTR): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"FindWindowExW\".}"
  }, 
  {
    "name": "GetClassNameW", 
    "type": "skProc", 
    "code": "proc GetClassNameW*(wnd: HWND; lpClassName: LPWSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassNameW\".}"
  }, 
  {
    "name": "SetWindowsHookExW", 
    "type": "skProc", 
    "code": "proc SetWindowsHookExW*(idHook: int32; lpfn: HOOKPROC; hmod: HINST; \u000A                        dwThreadId: DWORD): HHOOK {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetWindowsHookExW\".}"
  }, 
  {
    "name": "LoadBitmapW", 
    "type": "skProc", 
    "code": "proc LoadBitmapW*(hInstance: HINST; lpBitmapName: LPCWSTR): HBITMAP {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadBitmapW\".}"
  }, 
  {
    "name": "LoadCursorW", 
    "type": "skProc", 
    "code": "proc LoadCursorW*(hInstance: HINST; lpCursorName: LPCWSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorW\".}"
  }, 
  {
    "name": "LoadCursorFromFileW", 
    "type": "skProc", 
    "code": "proc LoadCursorFromFileW*(lpFileName: LPCWSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorFromFileW\".}"
  }, 
  {
    "name": "LoadIconW", 
    "type": "skProc", 
    "code": "proc LoadIconW*(hInstance: HINST; lpIconName: LPCWSTR): HICON {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadIconW\".}"
  }, 
  {
    "name": "LoadImageW", 
    "type": "skProc", 
    "code": "proc LoadImageW*(para1: HINST; para2: LPCWSTR; para3: WINUINT; para4: int32; \u000A                 para5: int32; para6: WINUINT): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadImageW\".}"
  }, 
  {
    "name": "LoadStringW", 
    "type": "skProc", 
    "code": "proc LoadStringW*(hInstance: HINST; uID: WINUINT; lpBuffer: LPWSTR; \u000A                  nBufferMax: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"LoadStringW\".}"
  }, 
  {
    "name": "IsDialogMessageW", 
    "type": "skProc", 
    "code": "proc IsDialogMessageW*(hDlg: HWND; lpMsg: LPMSG): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageW\".}"
  }, 
  {
    "name": "DlgDirListW", 
    "type": "skProc", 
    "code": "proc DlgDirListW*(hDlg: HWND; lpPathSpec: LPWSTR; nIDListBox: int32; \u000A                  nIDStaticPath: int32; uFileType: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirListW\".}"
  }, 
  {
    "name": "DlgDirSelectExW", 
    "type": "skProc", 
    "code": "proc DlgDirSelectExW*(hDlg: HWND; lpString: LPWSTR; nCount: int32; \u000A                      nIDListBox: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DlgDirSelectExW\".}"
  }, 
  {
    "name": "DlgDirListComboBoxW", 
    "type": "skProc", 
    "code": "proc DlgDirListComboBoxW*(hDlg: HWND; lpPathSpec: LPWSTR; nIDComboBox: int32; \u000A                          nIDStaticPath: int32; uFiletype: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"DlgDirListComboBoxW\".}"
  }, 
  {
    "name": "DlgDirSelectComboBoxExW", 
    "type": "skProc", 
    "code": "proc DlgDirSelectComboBoxExW*(hDlg: HWND; lpString: LPWSTR; nCount: int32; \u000A                              nIDComboBox: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirSelectComboBoxExW\".}"
  }, 
  {
    "name": "DefFrameProcW", 
    "type": "skProc", 
    "code": "proc DefFrameProcW*(wnd: HWND; hWndMDIClient: HWND; uMsg: WINUINT; w: WPARAM; \u000A                    lp: LPARAM): LRESULT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DefFrameProcW\".}"
  }, 
  {
    "name": "DefMDIChildProcW", 
    "type": "skProc", 
    "code": "proc DefMDIChildProcW*(wnd: HWND; uMsg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefMDIChildProcW\".}"
  }, 
  {
    "name": "CreateMDIWindowW", 
    "type": "skProc", 
    "code": "proc CreateMDIWindowW*(lpClassName: LPWSTR; lpWindowName: LPWSTR; \u000A                       dwStyle: DWORD; X: int32; Y: int32; nWidth: int32; \u000A                       nHeight: int32; hWndParent: HWND; hInstance: HINST; \u000A                       lp: LPARAM): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateMDIWindowW\".}"
  }, 
  {
    "name": "WinHelpW", 
    "type": "skProc", 
    "code": "proc WinHelpW*(hWndMain: HWND; lpszHelp: LPCWSTR; uCommand: WINUINT; \u000A               dwData: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"WinHelpW\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsW", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsW*(lpDevMode: LPDEVMODEW; dwFlags: DWORD): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsW\".}"
  }, 
  {
    "name": "EnumDisplaySettingsW", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettingsW*(lpszDeviceName: LPCWSTR; iModeNum: DWORD; \u000A                           lpDevMode: LPDEVMODEW): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsW\".}"
  }, 
  {
    "name": "SystemParametersInfoW", 
    "type": "skProc", 
    "code": "proc SystemParametersInfoW*(uiAction: WINUINT; uiParam: WINUINT; pvParam: PVOID; \u000A                            fWinIni: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SystemParametersInfoW\".}"
  }, 
  {
    "name": "AddFontResourceW", 
    "type": "skProc", 
    "code": "proc AddFontResourceW*(para1: LPCWSTR): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"AddFontResourceW\".}"
  }, 
  {
    "name": "CopyMetaFileW", 
    "type": "skProc", 
    "code": "proc CopyMetaFileW*(para1: HMETAFILE; para2: LPCWSTR): HMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CopyMetaFileW\".}"
  }, 
  {
    "name": "CreateFontIndirectW", 
    "type": "skProc", 
    "code": "proc CreateFontIndirectW*(para1: PLOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectW\".}"
  }, 
  {
    "name": "CreateFontIndirectW", 
    "type": "skProc", 
    "code": "proc CreateFontIndirectW*(para1: var LOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectW\".}"
  }, 
  {
    "name": "CreateFontW", 
    "type": "skProc", 
    "code": "proc CreateFontW*(para1: int32; para2: int32; para3: int32; para4: int32; \u000A                  para5: int32; para6: DWORD; para7: DWORD; para8: DWORD; \u000A                  para9: DWORD; para10: DWORD; para11: DWORD; para12: DWORD; \u000A                  para13: DWORD; para14: LPCWSTR): HFONT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateFontW\".}"
  }, 
  {
    "name": "CreateICW", 
    "type": "skProc", 
    "code": "proc CreateICW*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR; \u000A                para4: LPDEVMODEw): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateICW\".}"
  }, 
  {
    "name": "CreateMetaFileW", 
    "type": "skProc", 
    "code": "proc CreateMetaFileW*(para1: LPCWSTR): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateMetaFileW\".}"
  }, 
  {
    "name": "CreateScalableFontResourceW", 
    "type": "skProc", 
    "code": "proc CreateScalableFontResourceW*(para1: DWORD; para2: LPCWSTR; para3: LPCWSTR; \u000A                                  para4: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateScalableFontResourceW\".}"
  }, 
  {
    "name": "EnumFontFamiliesExW", 
    "type": "skProc", 
    "code": "proc EnumFontFamiliesExW*(para1: HDC; para2: LPLOGFONT; para3: FONTENUMEXPROC; \u000A                          para4: LPARAM; para5: DWORD): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"EnumFontFamiliesExW\".}"
  }, 
  {
    "name": "EnumFontFamiliesW", 
    "type": "skProc", 
    "code": "proc EnumFontFamiliesW*(para1: HDC; para2: LPCWSTR; para3: FONTENUMPROC; \u000A                        para4: LPARAM): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumFontFamiliesW\".}"
  }, 
  {
    "name": "EnumFontsW", 
    "type": "skProc", 
    "code": "proc EnumFontsW*(para1: HDC; para2: LPCWSTR; para3: ENUMFONTSPROC; para4: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumFontsW\".}"
  }, 
  {
    "name": "EnumFontsW", 
    "type": "skProc", 
    "code": "proc EnumFontsW*(para1: HDC; para2: LPCWSTR; para3: ENUMFONTSPROC; \u000A                 para4: pointer): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumFontsW\".}"
  }, 
  {
    "name": "GetCharWidthW", 
    "type": "skProc", 
    "code": "proc GetCharWidthW*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthW\".}"
  }, 
  {
    "name": "GetCharWidth32W", 
    "type": "skProc", 
    "code": "proc GetCharWidth32W*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32W\".}"
  }, 
  {
    "name": "GetCharWidthFloatW", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloatW*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                         para4: ptr float32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharWidthFloatW\".}"
  }, 
  {
    "name": "GetCharABCWidthsW", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsW*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPABC): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsW\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloatW", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloatW*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                             para4: LPABCFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatW\".}"
  }, 
  {
    "name": "GetGlyphOutlineW", 
    "type": "skProc", 
    "code": "proc GetGlyphOutlineW*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                       para4: LPGLYPHMETRICS; para5: DWORD; para6: LPVOID; \u000A                       para7: PMAT2): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetGlyphOutlineW\".}"
  }, 
  {
    "name": "GetMetaFileW", 
    "type": "skProc", 
    "code": "proc GetMetaFileW*(para1: LPCWSTR): HMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetMetaFileW\".}"
  }, 
  {
    "name": "GetOutlineTextMetricsW", 
    "type": "skProc", 
    "code": "proc GetOutlineTextMetricsW*(para1: HDC; para2: WINUINT; \u000A                             para3: LPOUTLINETEXTMETRIC): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetOutlineTextMetricsW\".}"
  }, 
  {
    "name": "GetTextExtentPointW", 
    "type": "skProc", 
    "code": "proc GetTextExtentPointW*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                          para4: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentPointW\".}"
  }, 
  {
    "name": "GetTextExtentPoint32W", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32W*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                            para4: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentPoint32W\".}"
  }, 
  {
    "name": "GetTextExtentExPointW", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPointW*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                            para4: int32; para5: LPINT; para6: LPINT; \u000A                            para7: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointW\".}"
  }, 
  {
    "name": "GetCharacterPlacementW", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacementW*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                             para4: int32; para5: LPGCP_RESULTS; para6: DWORD): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharacterPlacementW\".}"
  }, 
  {
    "name": "ResetDCW", 
    "type": "skProc", 
    "code": "proc ResetDCW*(para1: HDC; para2: LPDEVMODEW): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ResetDCW\".}"
  }, 
  {
    "name": "RemoveFontResourceW", 
    "type": "skProc", 
    "code": "proc RemoveFontResourceW*(para1: LPCWSTR): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"RemoveFontResourceW\".}"
  }, 
  {
    "name": "CopyEnhMetaFileW", 
    "type": "skProc", 
    "code": "proc CopyEnhMetaFileW*(para1: HENHMETAFILE; para2: LPCWSTR): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CopyEnhMetaFileW\".}"
  }, 
  {
    "name": "CreateEnhMetaFileW", 
    "type": "skProc", 
    "code": "proc CreateEnhMetaFileW*(para1: HDC; para2: LPCWSTR; para3: LPRECT; \u000A                         para4: LPCWSTR): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateEnhMetaFileW\".}"
  }, 
  {
    "name": "GetEnhMetaFileW", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileW*(para1: LPCWSTR): HENHMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetEnhMetaFileW\".}"
  }, 
  {
    "name": "GetEnhMetaFileDescriptionW", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileDescriptionW*(para1: HENHMETAFILE; para2: WINUINT; \u000A                                 para3: LPWSTR): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetEnhMetaFileDescriptionW\".}"
  }, 
  {
    "name": "GetTextMetricsW", 
    "type": "skProc", 
    "code": "proc GetTextMetricsW*(para1: HDC; para2: LPTEXTMETRIC): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextMetricsW\".}"
  }, 
  {
    "name": "StartDocW", 
    "type": "skProc", 
    "code": "proc StartDocW*(para1: HDC; para2: PDOCINFO): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StartDocW\".}"
  }, 
  {
    "name": "GetObjectW", 
    "type": "skProc", 
    "code": "proc GetObjectW*(para1: HGDIOBJ; para2: int32; para3: LPVOID): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetObjectW\".}"
  }, 
  {
    "name": "TextOutW", 
    "type": "skProc", 
    "code": "proc TextOutW*(para1: HDC; para2: int32; para3: int32; para4: LPCWSTR; \u000A               para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                        importc: \"TextOutW\".}"
  }, 
  {
    "name": "ExtTextOutW", 
    "type": "skProc", 
    "code": "proc ExtTextOutW*(para1: HDC; para2: int32; para3: int32; para4: WINUINT; \u000A                  para5: LPRECT; para6: LPCWSTR; para7: WINUINT; para8: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ExtTextOutW\".}"
  }, 
  {
    "name": "PolyTextOutW", 
    "type": "skProc", 
    "code": "proc PolyTextOutW*(para1: HDC; para2: PPOLYTEXT; para3: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutW\".}"
  }, 
  {
    "name": "GetTextFaceW", 
    "type": "skProc", 
    "code": "proc GetTextFaceW*(para1: HDC; para2: int32; para3: LPWSTR): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextFaceW\".}"
  }, 
  {
    "name": "GetKerningPairsW", 
    "type": "skProc", 
    "code": "proc GetKerningPairsW*(para1: HDC; para2: DWORD; para3: LPKERNINGPAIR): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetKerningPairsW\".}"
  }, 
  {
    "name": "GetLogColorSpaceW", 
    "type": "skProc", 
    "code": "proc GetLogColorSpaceW*(para1: HCOLORSPACE; para2: LPLOGCOLORSPACE; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetLogColorSpaceW\".}"
  }, 
  {
    "name": "CreateColorSpaceW", 
    "type": "skProc", 
    "code": "proc CreateColorSpaceW*(para1: LPLOGCOLORSPACE): HCOLORSPACE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateColorSpaceW\".}"
  }, 
  {
    "name": "GetICMProfileW", 
    "type": "skProc", 
    "code": "proc GetICMProfileW*(para1: HDC; para2: DWORD; para3: LPWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetICMProfileW\".}"
  }, 
  {
    "name": "SetICMProfileW", 
    "type": "skProc", 
    "code": "proc SetICMProfileW*(para1: HDC; para2: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetICMProfileW\".}"
  }, 
  {
    "name": "UpdateICMRegKeyW", 
    "type": "skProc", 
    "code": "proc UpdateICMRegKeyW*(para1: DWORD; para2: DWORD; para3: LPWSTR; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"UpdateICMRegKeyW\".}"
  }, 
  {
    "name": "EnumICMProfilesW", 
    "type": "skProc", 
    "code": "proc EnumICMProfilesW*(para1: HDC; para2: ICMENUMPROC; para3: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumICMProfilesW\".}"
  }, 
  {
    "name": "CreatePropertySheetPageW", 
    "type": "skProc", 
    "code": "proc CreatePropertySheetPageW*(lppsp: LPCPROPSHEETPAGE): HPROPSHEETPAGE {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"CreatePropertySheetPageW\".}"
  }, 
  {
    "name": "PropertySheetW", 
    "type": "skProc", 
    "code": "proc PropertySheetW*(lppsph: LPCPROPSHEETHEADER): int32 {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"PropertySheetW\".}"
  }, 
  {
    "name": "ImageList_LoadImageW", 
    "type": "skProc", 
    "code": "proc ImageList_LoadImageW*(hi: HINST; lpbmp: LPCWSTR; cx: int32; cGrow: int32; \u000A                           crMask: COLORREF; uType: WINUINT; uFlags: WINUINT): HIMAGELIST {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_LoadImageW\".}"
  }, 
  {
    "name": "CreateStatusWindowW", 
    "type": "skProc", 
    "code": "proc CreateStatusWindowW*(style: LONG; lpszText: LPCWSTR; hwndParent: HWND; \u000A                          wID: WINUINT): HWND {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"CreateStatusWindowW\".}"
  }, 
  {
    "name": "DrawStatusTextW", 
    "type": "skProc", 
    "code": "proc DrawStatusTextW*(hDC: HDC; lprc: LPRECT; pszText: LPCWSTR; uFlags: WINUINT) {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"DrawStatusTextW\".}"
  }, 
  {
    "name": "GetOpenFileNameW", 
    "type": "skProc", 
    "code": "proc GetOpenFileNameW*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetOpenFileNameW\".}"
  }, 
  {
    "name": "GetSaveFileNameW", 
    "type": "skProc", 
    "code": "proc GetSaveFileNameW*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetSaveFileNameW\".}"
  }, 
  {
    "name": "GetFileTitleW", 
    "type": "skProc", 
    "code": "proc GetFileTitleW*(para1: LPCWSTR; para2: LPWSTR; para3: int16): int {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetFileTitleW\".}"
  }, 
  {
    "name": "ChooseColorW", 
    "type": "skProc", 
    "code": "proc ChooseColorW*(para1: LPCHOOSECOLOR): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseColorW\".}"
  }, 
  {
    "name": "ReplaceTextW", 
    "type": "skProc", 
    "code": "proc ReplaceTextW*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ReplaceTextW\".}"
  }, 
  {
    "name": "ChooseFontW", 
    "type": "skProc", 
    "code": "proc ChooseFontW*(para1: LPCHOOSEFONT): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseFontW\".}"
  }, 
  {
    "name": "FindTextW", 
    "type": "skProc", 
    "code": "proc FindTextW*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"FindTextW\".}"
  }, 
  {
    "name": "PrintDlgW", 
    "type": "skProc", 
    "code": "proc PrintDlgW*(para1: LPPRINTDLG): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"PrintDlgW\".}"
  }, 
  {
    "name": "PageSetupDlgW", 
    "type": "skProc", 
    "code": "proc PageSetupDlgW*(para1: LPPAGESETUPDLG): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"PageSetupDlgW\".}"
  }, 
  {
    "name": "CreateProcessW", 
    "type": "skProc", 
    "code": "proc CreateProcessW*(lpApplicationName: LPCWSTR; lpCommandLine: LPWSTR; \u000A                     lpProcessAttributes: LPSECURITY_ATTRIBUTES; \u000A                     lpThreadAttributes: LPSECURITY_ATTRIBUTES; \u000A                     bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                     lpEnvironment: LPVOID; lpCurrentDirectory: LPCWSTR; \u000A                     lpStartupInfo: LPSTARTUPINFO; \u000A                     lpProcessInformation: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessW\".}"
  }, 
  {
    "name": "GetStartupInfoW", 
    "type": "skProc", 
    "code": "proc GetStartupInfoW*(lpStartupInfo: LPSTARTUPINFO) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStartupInfoW\".}"
  }, 
  {
    "name": "FindFirstFileW", 
    "type": "skProc", 
    "code": "proc FindFirstFileW*(lpFileName: LPCWSTR; lpFindFileData: LPWIN32_FIND_DATAW): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileW\".}"
  }, 
  {
    "name": "FindNextFileW", 
    "type": "skProc", 
    "code": "proc FindNextFileW*(hFindFile: HANDLE; lpFindFileData: LPWIN32_FIND_DATAW): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileW\".}"
  }, 
  {
    "name": "GetVersionExW", 
    "type": "skProc", 
    "code": "proc GetVersionExW*(VersionInformation: LPOSVERSIONINFOW): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVersionExW\".}"
  }, 
  {
    "name": "CreateWindowW", 
    "type": "skProc", 
    "code": "proc CreateWindowW*(lpClassName: LPCWSTR; lpWindowName: LPCWSTR; dwStyle: DWORD; \u000A                    X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                    hWndParent: HWND; menu: HMENU; hInstance: HINST; \u000A                    lpParam: LPVOID): HWND"
  }, 
  {
    "name": "CreateDialogW", 
    "type": "skProc", 
    "code": "proc CreateDialogW*(hInstance: HINST; lpName: LPCWSTR; hWndParent: HWND; \u000A                    lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "CreateDialogIndirectW", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectW*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                            hWndParent: HWND; lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "DialogBoxW", 
    "type": "skProc", 
    "code": "proc DialogBoxW*(hInstance: HINST; lpTemplate: LPCWSTR; hWndParent: HWND; \u000A                 lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "DialogBoxIndirectW", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectW*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                         hWndParent: HWND; lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "CreateDCW", 
    "type": "skProc", 
    "code": "proc CreateDCW*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR; para4: PDEVMODEW): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDCW\".}"
  }, 
  {
    "name": "VerInstallFileW", 
    "type": "skProc", 
    "code": "proc VerInstallFileW*(uFlags: DWORD; szSrcFileName: LPWSTR; \u000A                      szDestFileName: LPWSTR; szSrcDir: LPWSTR; \u000A                      szDestDir: LPWSTR; szCurDir: LPWSTR; szTmpFile: LPWSTR; \u000A                      lpuTmpFileLen: PUINT): DWORD {.stdcall, dynlib: \"version\", \u000A    importc: \"VerInstallFileW\".}"
  }, 
  {
    "name": "GetFileVersionInfoSizeW", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSizeW*(lptstrFilename: LPWSTR; lpdwHandle: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeW\".}"
  }, 
  {
    "name": "GetFileVersionInfoW", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoW*(lptstrFilename: LPWSTR; dwHandle: DWORD; dwLen: DWORD; \u000A                          lpData: LPVOID): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"GetFileVersionInfoW\".}"
  }, 
  {
    "name": "VerLanguageNameW", 
    "type": "skProc", 
    "code": "proc VerLanguageNameW*(wLang: DWORD; szLang: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VerLanguageNameW\".}"
  }, 
  {
    "name": "VerQueryValueW", 
    "type": "skProc", 
    "code": "proc VerQueryValueW*(pBlock: LPVOID; lpSubBlock: LPWSTR; lplpBuffer: LPVOID; \u000A                     puLen: PUINT): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"VerQueryValueW\".}"
  }, 
  {
    "name": "VerFindFileW", 
    "type": "skProc", 
    "code": "proc VerFindFileW*(uFlags: DWORD; szFileName: LPWSTR; szWinDir: LPWSTR; \u000A                   szAppDir: LPWSTR; szCurDir: LPWSTR; lpuCurDirLen: PUINT; \u000A                   szDestDir: LPWSTR; lpuDestDirLen: PUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileW\".}"
  }, 
  {
    "name": "RegSetValueExW", 
    "type": "skProc", 
    "code": "proc RegSetValueExW*(key: HKEY; lpValueName: LPCWSTR; Reserved: DWORD; \u000A                     dwType: DWORD; lpData: LPBYTE; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExW\".}"
  }, 
  {
    "name": "RegUnLoadKeyW", 
    "type": "skProc", 
    "code": "proc RegUnLoadKeyW*(key: HKEY; lpSubKey: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegUnLoadKeyW\".}"
  }, 
  {
    "name": "InitiateSystemShutdownW", 
    "type": "skProc", 
    "code": "proc InitiateSystemShutdownW*(lpMachineName: LPWSTR; lpMessage: LPWSTR; \u000A                              dwTimeout: DWORD; bForceAppsClosed: WINBOOL; \u000A                              bRebootAfterShutdown: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitiateSystemShutdownW\".}"
  }, 
  {
    "name": "AbortSystemShutdownW", 
    "type": "skProc", 
    "code": "proc AbortSystemShutdownW*(lpMachineName: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AbortSystemShutdownW\".}"
  }, 
  {
    "name": "RegRestoreKeyW", 
    "type": "skProc", 
    "code": "proc RegRestoreKeyW*(key: HKEY; lpFile: LPCWSTR; dwFlags: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegRestoreKeyW\".}"
  }, 
  {
    "name": "RegSaveKeyW", 
    "type": "skProc", 
    "code": "proc RegSaveKeyW*(key: HKEY; lpFile: LPCWSTR; \u000A                  lpSecurityAttributes: LPSECURITY_ATTRIBUTES): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegSaveKeyW\".}"
  }, 
  {
    "name": "RegSetValueW", 
    "type": "skProc", 
    "code": "proc RegSetValueW*(key: HKEY; lpSubKey: LPCWSTR; dwType: DWORD; lpData: LPCWSTR; \u000A                   cbData: DWORD): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegSetValueW\".}"
  }, 
  {
    "name": "RegQueryValueW", 
    "type": "skProc", 
    "code": "proc RegQueryValueW*(key: HKEY; lpSubKey: LPCWSTR; lpValue: LPWSTR; \u000A                     lpcbValue: PLONG): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueW\".}"
  }, 
  {
    "name": "RegQueryMultipleValuesW", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValuesW*(key: HKEY; val_list: PVALENT; num_vals: DWORD; \u000A                              lpValueBuf: LPWSTR; ldwTotsize: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesW\".}"
  }, 
  {
    "name": "RegQueryValueExW", 
    "type": "skProc", 
    "code": "proc RegQueryValueExW*(key: HKEY; lpValueName: LPCWSTR; lpReserved: LPDWORD; \u000A                       lpType: LPDWORD; lpData: LPBYTE; lpcbData: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryValueExW\".}"
  }, 
  {
    "name": "RegReplaceKeyW", 
    "type": "skProc", 
    "code": "proc RegReplaceKeyW*(key: HKEY; lpSubKey: LPCWSTR; lpNewFile: LPCWSTR; \u000A                     lpOldFile: LPCWSTR): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegReplaceKeyW\".}"
  }, 
  {
    "name": "RegConnectRegistryW", 
    "type": "skProc", 
    "code": "proc RegConnectRegistryW*(lpMachineName: LPWSTR; key: HKEY; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryW\".}"
  }, 
  {
    "name": "RegCreateKeyW", 
    "type": "skProc", 
    "code": "proc RegCreateKeyW*(key: HKEY; lpSubKey: LPCWSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyW\".}"
  }, 
  {
    "name": "RegCreateKeyExW", 
    "type": "skProc", 
    "code": "proc RegCreateKeyExW*(key: HKEY; lpSubKey: LPCWSTR; Reserved: DWORD; \u000A                      lpClass: LPWSTR; dwOptions: DWORD; samDesired: REGSAM; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                      phkResult: PHKEY; lpdwDisposition: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExW\".}"
  }, 
  {
    "name": "RegDeleteKeyW", 
    "type": "skProc", 
    "code": "proc RegDeleteKeyW*(key: HKEY; lpSubKey: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteKeyW\".}"
  }, 
  {
    "name": "RegDeleteValueW", 
    "type": "skProc", 
    "code": "proc RegDeleteValueW*(key: HKEY; lpValueName: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteValueW\".}"
  }, 
  {
    "name": "RegEnumKeyW", 
    "type": "skProc", 
    "code": "proc RegEnumKeyW*(key: HKEY; dwIndex: DWORD; lpName: LPWSTR; cbName: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyW\".}"
  }, 
  {
    "name": "RegEnumKeyExW", 
    "type": "skProc", 
    "code": "proc RegEnumKeyExW*(key: HKEY; dwIndex: DWORD; lpName: LPWSTR; \u000A                    lpcbName: LPDWORD; lpReserved: LPDWORD; lpClass: LPWSTR; \u000A                    lpcbClass: LPDWORD; lpftLastWriteTime: PFILETIME): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyExW\".}"
  }, 
  {
    "name": "RegEnumValueW", 
    "type": "skProc", 
    "code": "proc RegEnumValueW*(key: HKEY; dwIndex: DWORD; lpValueName: LPWSTR; \u000A                    lpcbValueName: LPDWORD; lpReserved: LPDWORD; \u000A                    lpType: LPDWORD; lpData: LPBYTE; lpcbData: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumValueW\".}"
  }, 
  {
    "name": "RegLoadKeyW", 
    "type": "skProc", 
    "code": "proc RegLoadKeyW*(key: HKEY; lpSubKey: LPCWSTR; lpFile: LPCWSTR): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegLoadKeyW\".}"
  }, 
  {
    "name": "RegOpenKeyW", 
    "type": "skProc", 
    "code": "proc RegOpenKeyW*(key: HKEY; lpSubKey: LPCWSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyW\".}"
  }, 
  {
    "name": "RegOpenKeyExW", 
    "type": "skProc", 
    "code": "proc RegOpenKeyExW*(key: HKEY; lpSubKey: LPCWSTR; ulOptions: DWORD; \u000A                    samDesired: REGSAM; phkResult: PHKEY): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExW\".}"
  }, 
  {
    "name": "RegQueryInfoKeyW", 
    "type": "skProc", 
    "code": "proc RegQueryInfoKeyW*(key: HKEY; lpClass: LPWSTR; lpcbClass: LPDWORD; \u000A                       lpReserved: LPDWORD; lpcSubKeys: LPDWORD; \u000A                       lpcbMaxSubKeyLen: LPDWORD; lpcbMaxClassLen: LPDWORD; \u000A                       lpcValues: LPDWORD; lpcbMaxValueNameLen: LPDWORD; \u000A                       lpcbMaxValueLen: LPDWORD; \u000A                       lpcbSecurityDescriptor: LPDWORD; \u000A                       lpftLastWriteTime: PFILETIME): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegQueryInfoKeyW\".}"
  }, 
  {
    "name": "CompareStringW", 
    "type": "skProc", 
    "code": "proc CompareStringW*(Locale: LCID; dwCmpFlags: DWORD; lpString1: LPCWSTR; \u000A                     cchCount1: int32; lpString2: LPCWSTR; cchCount2: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CompareStringW\".}"
  }, 
  {
    "name": "LCMapStringW", 
    "type": "skProc", 
    "code": "proc LCMapStringW*(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: LPCWSTR; \u000A                   cchSrc: int32; lpDestStr: LPWSTR; cchDest: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LCMapStringW\".}"
  }, 
  {
    "name": "GetLocaleInfoW", 
    "type": "skProc", 
    "code": "proc GetLocaleInfoW*(Locale: LCID; LCType: LCTYPE; lpLCData: LPWSTR; \u000A                     cchData: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetLocaleInfoW\".}"
  }, 
  {
    "name": "SetLocaleInfoW", 
    "type": "skProc", 
    "code": "proc SetLocaleInfoW*(Locale: LCID; LCType: LCTYPE; lpLCData: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetLocaleInfoW\".}"
  }, 
  {
    "name": "GetTimeFormatW", 
    "type": "skProc", 
    "code": "proc GetTimeFormatW*(Locale: LCID; dwFlags: DWORD; lpTime: LPSYSTEMTIME; \u000A                     lpFormat: LPCWSTR; lpTimeStr: LPWSTR; cchTime: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTimeFormatW\".}"
  }, 
  {
    "name": "GetDateFormatW", 
    "type": "skProc", 
    "code": "proc GetDateFormatW*(Locale: LCID; dwFlags: DWORD; lpDate: LPSYSTEMTIME; \u000A                     lpFormat: LPCWSTR; lpDateStr: LPWSTR; cchDate: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDateFormatW\".}"
  }, 
  {
    "name": "GetNumberFormatW", 
    "type": "skProc", 
    "code": "proc GetNumberFormatW*(Locale: LCID; dwFlags: DWORD; lpValue: LPCWSTR; \u000A                       lpFormat: PNUMBERFMT; lpNumberStr: LPWSTR; \u000A                       cchNumber: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetNumberFormatW\".}"
  }, 
  {
    "name": "GetCurrencyFormatW", 
    "type": "skProc", 
    "code": "proc GetCurrencyFormatW*(Locale: LCID; dwFlags: DWORD; lpValue: LPCWSTR; \u000A                         lpFormat: PCURRENCYFMT; lpCurrencyStr: LPWSTR; \u000A                         cchCurrency: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCurrencyFormatW\".}"
  }, 
  {
    "name": "EnumCalendarInfoW", 
    "type": "skProc", 
    "code": "proc EnumCalendarInfoW*(lpCalInfoEnumProc: CALINFO_ENUMPROC; Locale: LCID; \u000A                        Calendar: CALID; CalType: CALTYPE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EnumCalendarInfoW\".}"
  }, 
  {
    "name": "EnumTimeFormatsW", 
    "type": "skProc", 
    "code": "proc EnumTimeFormatsW*(lpTimeFmtEnumProc: TIMEFMT_ENUMPROC; Locale: LCID; \u000A                       dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumTimeFormatsW\".}"
  }, 
  {
    "name": "EnumDateFormatsW", 
    "type": "skProc", 
    "code": "proc EnumDateFormatsW*(lpDateFmtEnumProc: DATEFMT_ENUMPROC; Locale: LCID; \u000A                       dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumDateFormatsW\".}"
  }, 
  {
    "name": "GetStringTypeExW", 
    "type": "skProc", 
    "code": "proc GetStringTypeExW*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCWSTR; \u000A                       cchSrc: int32; lpCharType: LPWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExW\".}"
  }, 
  {
    "name": "GetStringTypeW", 
    "type": "skProc", 
    "code": "proc GetStringTypeW*(dwInfoType: DWORD; lpSrcStr: LPCWSTR; cchSrc: int32; \u000A                     lpCharType: LPWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetStringTypeW\".}"
  }, 
  {
    "name": "FoldStringW", 
    "type": "skProc", 
    "code": "proc FoldStringW*(dwMapFlags: DWORD; lpSrcStr: LPCWSTR; cchSrc: int32; \u000A                  lpDestStr: LPWSTR; cchDest: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FoldStringW\".}"
  }, 
  {
    "name": "EnumSystemLocalesW", 
    "type": "skProc", 
    "code": "proc EnumSystemLocalesW*(lpLocaleEnumProc: LOCALE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemLocalesW\".}"
  }, 
  {
    "name": "EnumSystemCodePagesW", 
    "type": "skProc", 
    "code": "proc EnumSystemCodePagesW*(lpCodePageEnumProc: CODEPAGE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemCodePagesW\".}"
  }, 
  {
    "name": "PeekConsoleInputW", 
    "type": "skProc", 
    "code": "proc PeekConsoleInputW*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                        nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputW\".}"
  }, 
  {
    "name": "ReadConsoleInputW", 
    "type": "skProc", 
    "code": "proc ReadConsoleInputW*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                        nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputW\".}"
  }, 
  {
    "name": "WriteConsoleInputW", 
    "type": "skProc", 
    "code": "proc WriteConsoleInputW*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                         nLength: DWORD; lpNumberOfEventsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputW\".}"
  }, 
  {
    "name": "ReadConsoleOutputW", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputW*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                         dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                         lpReadRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputW\".}"
  }, 
  {
    "name": "WriteConsoleOutputW", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputW*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                          dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                          lpWriteRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputW\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacterW*(hConsoleOutput: HANDLE; lpCharacter: LPWSTR; \u000A                                  nLength: DWORD; dwReadCoord: COORD; \u000A                                  lpNumberOfCharsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacterW*(hConsoleOutput: HANDLE; lpCharacter: LPCWSTR; \u000A                                   nLength: DWORD; dwWriteCoord: COORD; \u000A                                   lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacterW*(hConsoleOutput: HANDLE; cCharacter: WCHAR; \u000A                                  nLength: DWORD; dwWriteCoord: COORD; \u000A                                  lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBufferW", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBufferW*(hConsoleOutput: HANDLE; \u000A                                 lpScrollRectangle: PSMALL_RECT; \u000A                                 lpClipRectangle: PSMALL_RECT; \u000A                                 dwDestinationOrigin: COORD; lpFill: PCHAR_INFO): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferW\".}"
  }, 
  {
    "name": "GetConsoleTitleW", 
    "type": "skProc", 
    "code": "proc GetConsoleTitleW*(lpConsoleTitle: LPWSTR; nSize: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetConsoleTitleW\".}"
  }, 
  {
    "name": "SetConsoleTitleW", 
    "type": "skProc", 
    "code": "proc SetConsoleTitleW*(lpConsoleTitle: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleTitleW\".}"
  }, 
  {
    "name": "ReadConsoleW", 
    "type": "skProc", 
    "code": "proc ReadConsoleW*(hConsoleInput: HANDLE; lpBuffer: LPVOID; \u000A                   nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: LPDWORD; \u000A                   lpReserved: LPVOID): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleW\".}"
  }, 
  {
    "name": "WriteConsoleW", 
    "type": "skProc", 
    "code": "proc WriteConsoleW*(hConsoleOutput: HANDLE; lpBuffer: pointer; \u000A                    nNumberOfCharsToWrite: DWORD; \u000A                    lpNumberOfCharsWritten: LPDWORD; lpReserved: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleW\".}"
  }, 
  {
    "name": "WNetAddConnectionW", 
    "type": "skProc", 
    "code": "proc WNetAddConnectionW*(lpRemoteName: LPCWSTR; lpPassword: LPCWSTR; \u000A                         lpLocalName: LPCWSTR): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetAddConnectionW\".}"
  }, 
  {
    "name": "WNetAddConnection2W", 
    "type": "skProc", 
    "code": "proc WNetAddConnection2W*(lpNetResource: LPNETRESOURCE; lpPassword: LPCWSTR; \u000A                          lpUserName: LPCWSTR; dwFlags: DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetAddConnection2W\".}"
  }, 
  {
    "name": "WNetAddConnection3W", 
    "type": "skProc", 
    "code": "proc WNetAddConnection3W*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                          lpPassword: LPCWSTR; lpUserName: LPCWSTR; \u000A                          dwFlags: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetAddConnection3W\".}"
  }, 
  {
    "name": "WNetCancelConnectionW", 
    "type": "skProc", 
    "code": "proc WNetCancelConnectionW*(lpName: LPCWSTR; fForce: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetCancelConnectionW\".}"
  }, 
  {
    "name": "WNetCancelConnection2W", 
    "type": "skProc", 
    "code": "proc WNetCancelConnection2W*(lpName: LPCWSTR; dwFlags: DWORD; fForce: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetCancelConnection2W\".}"
  }, 
  {
    "name": "WNetGetConnectionW", 
    "type": "skProc", 
    "code": "proc WNetGetConnectionW*(lpLocalName: LPCWSTR; lpRemoteName: LPWSTR; \u000A                         lpnLength: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionW\".}"
  }, 
  {
    "name": "WNetUseConnectionW", 
    "type": "skProc", 
    "code": "proc WNetUseConnectionW*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                         lpUserID: LPCWSTR; lpPassword: LPCWSTR; dwFlags: DWORD; \u000A                         lpAccessName: LPWSTR; lpBufferSize: LPDWORD; \u000A                         lpResult: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetUseConnectionW\".}"
  }, 
  {
    "name": "WNetSetConnectionW", 
    "type": "skProc", 
    "code": "proc WNetSetConnectionW*(lpName: LPCWSTR; dwProperties: DWORD; pvValues: LPVOID): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetSetConnectionW\".}"
  }, 
  {
    "name": "WNetConnectionDialog1W", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog1W*(lpConnDlgStruct: LPCONNECTDLGSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetConnectionDialog1W\".}"
  }, 
  {
    "name": "WNetDisconnectDialog1W", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog1W*(lpConnDlgStruct: LPDISCDLGSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetDisconnectDialog1W\".}"
  }, 
  {
    "name": "WNetOpenEnumW", 
    "type": "skProc", 
    "code": "proc WNetOpenEnumW*(dwScope: DWORD; dwType: DWORD; dwUsage: DWORD; \u000A                    lpNetResource: LPNETRESOURCE; lphEnum: LPHANDLE): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetOpenEnumW\".}"
  }, 
  {
    "name": "WNetEnumResourceW", 
    "type": "skProc", 
    "code": "proc WNetEnumResourceW*(hEnum: HANDLE; lpcCount: LPDWORD; lpBuffer: LPVOID; \u000A                        lpBufferSize: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetEnumResourceW\".}"
  }, 
  {
    "name": "WNetGetUniversalNameW", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalNameW*(lpLocalPath: LPCWSTR; dwInfoLevel: DWORD; \u000A                            lpBuffer: LPVOID; lpBufferSize: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameW\".}"
  }, 
  {
    "name": "WNetGetUserW", 
    "type": "skProc", 
    "code": "proc WNetGetUserW*(lpName: LPCWSTR; lpUserName: LPWSTR; lpnLength: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserW\".}"
  }, 
  {
    "name": "WNetGetProviderNameW", 
    "type": "skProc", 
    "code": "proc WNetGetProviderNameW*(dwNetType: DWORD; lpProviderName: LPWSTR; \u000A                           lpBufferSize: LPDWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameW\".}"
  }, 
  {
    "name": "WNetGetNetworkInformationW", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformationW*(lpProvider: LPCWSTR; \u000A                                 lpNetInfoStruct: LPNETINFOSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationW\".}"
  }, 
  {
    "name": "WNetGetLastErrorW", 
    "type": "skProc", 
    "code": "proc WNetGetLastErrorW*(lpError: LPDWORD; lpErrorBuf: LPWSTR; \u000A                        nErrorBufSize: DWORD; lpNameBuf: LPWSTR; \u000A                        nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorW\".}"
  }, 
  {
    "name": "MultinetGetConnectionPerformanceW", 
    "type": "skProc", 
    "code": "proc MultinetGetConnectionPerformanceW*(lpNetResource: LPNETRESOURCE; \u000A    lpNetConnectInfoStruct: LPNETCONNECTINFOSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"MultinetGetConnectionPerformanceW\".}"
  }, 
  {
    "name": "ChangeServiceConfigW", 
    "type": "skProc", 
    "code": "proc ChangeServiceConfigW*(hService: SC_HANDLE; dwServiceType: DWORD; \u000A                           dwStartType: DWORD; dwErrorControl: DWORD; \u000A                           lpBinaryPathName: LPCWSTR; lpLoadOrderGroup: LPCWSTR; \u000A                           lpdwTagId: LPDWORD; lpDependencies: LPCWSTR; \u000A                           lpServiceStartName: LPCWSTR; lpPassword: LPCWSTR; \u000A                           lpDisplayName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ChangeServiceConfigW\".}"
  }, 
  {
    "name": "CreateServiceW", 
    "type": "skProc", 
    "code": "proc CreateServiceW*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                     lpDisplayName: LPCWSTR; dwDesiredAccess: DWORD; \u000A                     dwServiceType: DWORD; dwStartType: DWORD; \u000A                     dwErrorControl: DWORD; lpBinaryPathName: LPCWSTR; \u000A                     lpLoadOrderGroup: LPCWSTR; lpdwTagId: LPDWORD; \u000A                     lpDependencies: LPCWSTR; lpServiceStartName: LPCWSTR; \u000A                     lpPassword: LPCWSTR): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"CreateServiceW\".}"
  }, 
  {
    "name": "EnumDependentServicesW", 
    "type": "skProc", 
    "code": "proc EnumDependentServicesW*(hService: SC_HANDLE; dwServiceState: DWORD; \u000A                             lpServices: LPENUM_SERVICE_STATUS; \u000A                             cbBufSize: DWORD; pcbBytesNeeded: LPDWORD; \u000A                             lpServicesReturned: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EnumDependentServicesW\".}"
  }, 
  {
    "name": "EnumServicesStatusW", 
    "type": "skProc", 
    "code": "proc EnumServicesStatusW*(hSCManager: SC_HANDLE; dwServiceType: DWORD; \u000A                          dwServiceState: DWORD; \u000A                          lpServices: LPENUM_SERVICE_STATUS; cbBufSize: DWORD; \u000A                          pcbBytesNeeded: LPDWORD; lpServicesReturned: LPDWORD; \u000A                          lpResumeHandle: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EnumServicesStatusW\".}"
  }, 
  {
    "name": "GetServiceKeyNameW", 
    "type": "skProc", 
    "code": "proc GetServiceKeyNameW*(hSCManager: SC_HANDLE; lpDisplayName: LPCWSTR; \u000A                         lpServiceName: LPWSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceKeyNameW\".}"
  }, 
  {
    "name": "GetServiceDisplayNameW", 
    "type": "skProc", 
    "code": "proc GetServiceDisplayNameW*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                             lpDisplayName: LPWSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceDisplayNameW\".}"
  }, 
  {
    "name": "OpenSCManagerW", 
    "type": "skProc", 
    "code": "proc OpenSCManagerW*(lpMachineName: LPCWSTR; lpDatabaseName: LPCWSTR; \u000A                     dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenSCManagerW\".}"
  }, 
  {
    "name": "OpenServiceW", 
    "type": "skProc", 
    "code": "proc OpenServiceW*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                   dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenServiceW\".}"
  }, 
  {
    "name": "QueryServiceConfigW", 
    "type": "skProc", 
    "code": "proc QueryServiceConfigW*(hService: SC_HANDLE; \u000A                          lpServiceConfig: LPQUERY_SERVICE_CONFIG; \u000A                          cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceConfigW\".}"
  }, 
  {
    "name": "QueryServiceLockStatusW", 
    "type": "skProc", 
    "code": "proc QueryServiceLockStatusW*(hSCManager: SC_HANDLE; \u000A                              lpLockStatus: LPQUERY_SERVICE_LOCK_STATUS; \u000A                              cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceLockStatusW\".}"
  }, 
  {
    "name": "RegisterServiceCtrlHandlerW", 
    "type": "skProc", 
    "code": "proc RegisterServiceCtrlHandlerW*(lpServiceName: LPCWSTR; \u000A                                  lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterServiceCtrlHandlerW\".}"
  }, 
  {
    "name": "StartServiceCtrlDispatcherW", 
    "type": "skProc", 
    "code": "proc StartServiceCtrlDispatcherW*(lpServiceStartTable: LPSERVICE_TABLE_ENTRY): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"StartServiceCtrlDispatcherW\".}"
  }, 
  {
    "name": "StartServiceW", 
    "type": "skProc", 
    "code": "proc StartServiceW*(hService: SC_HANDLE; dwNumServiceArgs: DWORD; \u000A                    lpServiceArgVectors: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"StartServiceW\".}"
  }, 
  {
    "name": "DragQueryFileW", 
    "type": "skProc", 
    "code": "proc DragQueryFileW*(para1: HDROP; para2: int; para3: LPCWSTR; para4: int): int {.\u000A    stdcall, dynlib: \"shell32\", importc: \"DragQueryFileW\".}"
  }, 
  {
    "name": "ExtractAssociatedIconW", 
    "type": "skProc", 
    "code": "proc ExtractAssociatedIconW*(para1: HINST; para2: LPCWSTR; para3: LPWORD): HICON {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ExtractAssociatedIconW\".}"
  }, 
  {
    "name": "ExtractIconW", 
    "type": "skProc", 
    "code": "proc ExtractIconW*(para1: HINST; para2: LPCWSTR; para3: int): HICON {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ExtractIconW\".}"
  }, 
  {
    "name": "FindExecutableW", 
    "type": "skProc", 
    "code": "proc FindExecutableW*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR): HINST {.\u000A    stdcall, dynlib: \"shell32\", importc: \"FindExecutableW\".}"
  }, 
  {
    "name": "ShellAboutW", 
    "type": "skProc", 
    "code": "proc ShellAboutW*(para1: HWND; para2: LPCWSTR; para3: LPCWSTR; para4: HICON): int32 {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ShellAboutW\".}"
  }, 
  {
    "name": "ShellExecuteW", 
    "type": "skProc", 
    "code": "proc ShellExecuteW*(para1: HWND; para2: LPCWSTR; para3: LPCWSTR; para4: LPCWSTR; \u000A                    para5: LPCWSTR; para6: int32): HINST {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ShellExecuteW\".}"
  }, 
  {
    "name": "Shell_NotifyIconW", 
    "type": "skProc", 
    "code": "proc Shell_NotifyIconW*(dwMessage: DWORD; lpData: PNotifyIconDataA): WINBOOL {.\u000A    stdcall, dynlib: \"shell32\", importc: \"Shell_NotifyIconW\".}"
  }, 
  {
    "name": "DdeCreateStringHandleW", 
    "type": "skProc", 
    "code": "proc DdeCreateStringHandleW*(para1: DWORD; para2: LPCWSTR; para3: int32): HSZ {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeCreateStringHandleW\".}"
  }, 
  {
    "name": "DdeInitializeW", 
    "type": "skProc", 
    "code": "proc DdeInitializeW*(para1: LPDWORD; para2: PFNCALLBACK; para3: DWORD; \u000A                     para4: DWORD): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeInitializeW\".}"
  }, 
  {
    "name": "DdeQueryStringW", 
    "type": "skProc", 
    "code": "proc DdeQueryStringW*(para1: DWORD; para2: HSZ; para3: LPCWSTR; para4: DWORD; \u000A                      para5: int32): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeQueryStringW\".}"
  }, 
  {
    "name": "LogonUserW", 
    "type": "skProc", 
    "code": "proc LogonUserW*(para1: LPWSTR; para2: LPWSTR; para3: LPWSTR; para4: DWORD; \u000A                 para5: DWORD; para6: PHANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LogonUserW\".}"
  }, 
  {
    "name": "CreateProcessAsUserW", 
    "type": "skProc", 
    "code": "proc CreateProcessAsUserW*(para1: HANDLE; para2: LPCWSTR; para3: LPWSTR; \u000A                           para4: LPSECURITY_ATTRIBUTES; \u000A                           para5: LPSECURITY_ATTRIBUTES; para6: WINBOOL; \u000A                           para7: DWORD; para8: LPVOID; para9: LPCWSTR; \u000A                           para10: LPSTARTUPINFO; para11: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"CreateProcessAsUserW\".}"
  }, 
  {
    "name": "GetBinaryType", 
    "type": "skProc", 
    "code": "proc GetBinaryType*(lpApplicationName: LPCWSTR; lpBinaryType: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeW\".}"
  }, 
  {
    "name": "GetShortPathName", 
    "type": "skProc", 
    "code": "proc GetShortPathName*(lpszLongPath: LPCWSTR; lpszShortPath: LPWSTR; \u000A                       cchBuffer: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetShortPathNameW\".}"
  }, 
  {
    "name": "GetEnvironmentStrings", 
    "type": "skProc", 
    "code": "proc GetEnvironmentStrings*(): LPWSTR {.stdcall, dynlib: \"kernel32\", \u000A                                        importc: \"GetEnvironmentStringsW\".}"
  }, 
  {
    "name": "FreeEnvironmentStrings", 
    "type": "skProc", 
    "code": "proc FreeEnvironmentStrings*(para1: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FreeEnvironmentStringsW\".}"
  }, 
  {
    "name": "FormatMessage", 
    "type": "skProc", 
    "code": "proc FormatMessage*(dwFlags: DWORD; lpSource: LPCVOID; dwMessageId: DWORD; \u000A                    dwLanguageId: DWORD; lpBuffer: LPWSTR; nSize: DWORD; \u000A                    Arguments: va_list): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FormatMessageW\".}"
  }, 
  {
    "name": "CreateMailslot", 
    "type": "skProc", 
    "code": "proc CreateMailslot*(lpName: LPCWSTR; nMaxMessageSize: DWORD; \u000A                     lReadTimeout: DWORD; \u000A                     lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateMailslotW\".}"
  }, 
  {
    "name": "lstrcmp", 
    "type": "skProc", 
    "code": "proc lstrcmp*(lpString1: LPCWSTR; lpString2: LPCWSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcmpW\".}"
  }, 
  {
    "name": "lstrcmpi", 
    "type": "skProc", 
    "code": "proc lstrcmpi*(lpString1: LPCWSTR; lpString2: LPCWSTR): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcmpiW\".}"
  }, 
  {
    "name": "lstrcpyn", 
    "type": "skProc", 
    "code": "proc lstrcpyn*(lpString1: LPWSTR; lpString2: LPCWSTR; iMaxLength: int32): LPWSTR {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"lstrcpynW\".}"
  }, 
  {
    "name": "lstrcpy", 
    "type": "skProc", 
    "code": "proc lstrcpy*(lpString1: LPWSTR; lpString2: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcpyW\".}"
  }, 
  {
    "name": "lstrcat", 
    "type": "skProc", 
    "code": "proc lstrcat*(lpString1: LPWSTR; lpString2: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"lstrcatW\".}"
  }, 
  {
    "name": "lstrlen", 
    "type": "skProc", 
    "code": "proc lstrlen*(lpString: LPCWSTR): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"lstrlenW\".}"
  }, 
  {
    "name": "CreateMutex", 
    "type": "skProc", 
    "code": "proc CreateMutex*(lpMutexAttributes: LPSECURITY_ATTRIBUTES; \u000A                  bInitialOwner: WINBOOL; lpName: LPCWSTR): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"CreateMutexW\".}"
  }, 
  {
    "name": "OpenMutex", 
    "type": "skProc", 
    "code": "proc OpenMutex*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"OpenMutexW\".}"
  }, 
  {
    "name": "CreateEvent", 
    "type": "skProc", 
    "code": "proc CreateEvent*(lpEventAttributes: LPSECURITY_ATTRIBUTES; \u000A                  bManualReset: WINBOOL; bInitialState: WINBOOL; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateEventW\".}"
  }, 
  {
    "name": "OpenEvent", 
    "type": "skProc", 
    "code": "proc OpenEvent*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"OpenEventW\".}"
  }, 
  {
    "name": "CreateSemaphore", 
    "type": "skProc", 
    "code": "proc CreateSemaphore*(lpSemaphoreAttributes: LPSECURITY_ATTRIBUTES; \u000A                      lInitialCount: LONG; lMaximumCount: LONG; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateSemaphoreW\".}"
  }, 
  {
    "name": "OpenSemaphore", 
    "type": "skProc", 
    "code": "proc OpenSemaphore*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                    lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenSemaphoreW\".}"
  }, 
  {
    "name": "CreateFileMapping", 
    "type": "skProc", 
    "code": "proc CreateFileMapping*(hFile: HANDLE; \u000A                        lpFileMappingAttributes: LPSECURITY_ATTRIBUTES; \u000A                        flProtect: DWORD; dwMaximumSizeHigh: DWORD; \u000A                        dwMaximumSizeLow: DWORD; lpName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateFileMappingW\".}"
  }, 
  {
    "name": "OpenFileMapping", 
    "type": "skProc", 
    "code": "proc OpenFileMapping*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                      lpName: LPCWSTR): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenFileMappingW\".}"
  }, 
  {
    "name": "GetLogicalDriveStrings", 
    "type": "skProc", 
    "code": "proc GetLogicalDriveStrings*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetLogicalDriveStringsW\".}"
  }, 
  {
    "name": "LoadLibrary", 
    "type": "skProc", 
    "code": "proc LoadLibrary*(lpLibFileName: LPCWSTR): HINST {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LoadLibraryW\".}"
  }, 
  {
    "name": "LoadLibraryEx", 
    "type": "skProc", 
    "code": "proc LoadLibraryEx*(lpLibFileName: LPCWSTR; hFile: HANDLE; dwFlags: DWORD): HINST {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LoadLibraryExW\".}"
  }, 
  {
    "name": "GetModuleFileName", 
    "type": "skProc", 
    "code": "proc GetModuleFileName*(hModule: HINST; lpFilename: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetModuleFileNameW\".}"
  }, 
  {
    "name": "GetModuleHandle", 
    "type": "skProc", 
    "code": "proc GetModuleHandle*(lpModuleName: LPCWSTR): HMODULE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetModuleHandleW\".}"
  }, 
  {
    "name": "FatalAppExit", 
    "type": "skProc", 
    "code": "proc FatalAppExit*(uAction: WINUINT; lpMessageText: LPCWSTR) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FatalAppExitW\".}"
  }, 
  {
    "name": "GetCommandLine", 
    "type": "skProc", 
    "code": "proc GetCommandLine*(): LPWSTR {.stdcall, dynlib: \"kernel32\", \u000A                                 importc: \"GetCommandLineW\".}"
  }, 
  {
    "name": "GetEnvironmentVariable", 
    "type": "skProc", 
    "code": "proc GetEnvironmentVariable*(lpName: LPCWSTR; lpBuffer: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetEnvironmentVariableW\".}"
  }, 
  {
    "name": "SetEnvironmentVariable", 
    "type": "skProc", 
    "code": "proc SetEnvironmentVariable*(lpName: LPCWSTR; lpValue: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetEnvironmentVariableW\".}"
  }, 
  {
    "name": "ExpandEnvironmentStrings", 
    "type": "skProc", 
    "code": "proc ExpandEnvironmentStrings*(lpSrc: LPCWSTR; lpDst: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ExpandEnvironmentStringsW\".}"
  }, 
  {
    "name": "OutputDebugString", 
    "type": "skProc", 
    "code": "proc OutputDebugString*(lpOutputString: LPCWSTR) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OutputDebugStringW\".}"
  }, 
  {
    "name": "FindResource", 
    "type": "skProc", 
    "code": "proc FindResource*(hModule: HINST; lpName: LPCWSTR; lpType: LPCWSTR): HRSRC {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindResourceW\".}"
  }, 
  {
    "name": "FindResourceEx", 
    "type": "skProc", 
    "code": "proc FindResourceEx*(hModule: HINST; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                     wLanguage: int16): HRSRC {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindResourceExW\".}"
  }, 
  {
    "name": "EnumResourceTypes", 
    "type": "skProc", 
    "code": "proc EnumResourceTypes*(hModule: HINST; lpEnumFunc: ENUMRESTYPEPROC; \u000A                        lParam: LONG): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumResourceTypesW\".}"
  }, 
  {
    "name": "EnumResourceNames", 
    "type": "skProc", 
    "code": "proc EnumResourceNames*(hModule: HINST; lpType: LPCWSTR; \u000A                        lpEnumFunc: ENUMRESNAMEPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumResourceNamesW\".}"
  }, 
  {
    "name": "EnumResourceLanguages", 
    "type": "skProc", 
    "code": "proc EnumResourceLanguages*(hModule: HINST; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                            lpEnumFunc: ENUMRESLANGPROC; lParam: LONG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumResourceLanguagesW\".}"
  }, 
  {
    "name": "BeginUpdateResource", 
    "type": "skProc", 
    "code": "proc BeginUpdateResource*(pFileName: LPCWSTR; bDeleteExistingResources: WINBOOL): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BeginUpdateResourceW\".}"
  }, 
  {
    "name": "UpdateResource", 
    "type": "skProc", 
    "code": "proc UpdateResource*(hUpdate: HANDLE; lpType: LPCWSTR; lpName: LPCWSTR; \u000A                     wLanguage: int16; lpData: LPVOID; cbData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UpdateResourceW\".}"
  }, 
  {
    "name": "EndUpdateResource", 
    "type": "skProc", 
    "code": "proc EndUpdateResource*(hUpdate: HANDLE; fDiscard: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EndUpdateResourceW\".}"
  }, 
  {
    "name": "GlobalAddAtom", 
    "type": "skProc", 
    "code": "proc GlobalAddAtom*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalAddAtomW\".}"
  }, 
  {
    "name": "GlobalFindAtom", 
    "type": "skProc", 
    "code": "proc GlobalFindAtom*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalFindAtomW\".}"
  }, 
  {
    "name": "GlobalGetAtomName", 
    "type": "skProc", 
    "code": "proc GlobalGetAtomName*(nAtom: ATOM; lpBuffer: LPWSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GlobalGetAtomNameW\".}"
  }, 
  {
    "name": "AddAtom", 
    "type": "skProc", 
    "code": "proc AddAtom*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"AddAtomW\".}"
  }, 
  {
    "name": "FindAtom", 
    "type": "skProc", 
    "code": "proc FindAtom*(lpString: LPCWSTR): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindAtomW\".}"
  }, 
  {
    "name": "GetAtomName", 
    "type": "skProc", 
    "code": "proc GetAtomName*(nAtom: ATOM; lpBuffer: LPWSTR; nSize: int32): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetAtomNameW\".}"
  }, 
  {
    "name": "GetProfileInt", 
    "type": "skProc", 
    "code": "proc GetProfileInt*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; nDefault: WINT): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProfileIntW\".}"
  }, 
  {
    "name": "GetProfileString", 
    "type": "skProc", 
    "code": "proc GetProfileString*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                       lpDefault: LPCWSTR; lpReturnedString: LPWSTR; \u000A                       nSize: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProfileStringW\".}"
  }, 
  {
    "name": "WriteProfileString", 
    "type": "skProc", 
    "code": "proc WriteProfileString*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                         lpString: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteProfileStringW\".}"
  }, 
  {
    "name": "GetProfileSection", 
    "type": "skProc", 
    "code": "proc GetProfileSection*(lpAppName: LPCWSTR; lpReturnedString: LPWSTR; \u000A                        nSize: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProfileSectionW\".}"
  }, 
  {
    "name": "WriteProfileSection", 
    "type": "skProc", 
    "code": "proc WriteProfileSection*(lpAppName: LPCWSTR; lpString: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteProfileSectionW\".}"
  }, 
  {
    "name": "GetPrivateProfileInt", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileInt*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                           nDefault: WINT; lpFileName: LPCWSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileIntW\".}"
  }, 
  {
    "name": "GetPrivateProfileString", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileString*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                              lpDefault: LPCWSTR; lpReturnedString: LPWSTR; \u000A                              nSize: DWORD; lpFileName: LPCWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStringW\".}"
  }, 
  {
    "name": "WritePrivateProfileString", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileString*(lpAppName: LPCWSTR; lpKeyName: LPCWSTR; \u000A                                lpString: LPCWSTR; lpFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WritePrivateProfileStringW\".}"
  }, 
  {
    "name": "GetPrivateProfileSection", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSection*(lpAppName: LPCWSTR; lpReturnedString: LPWSTR; \u000A                               nSize: DWORD; lpFileName: LPCWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionW\".}"
  }, 
  {
    "name": "WritePrivateProfileSection", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileSection*(lpAppName: LPCWSTR; lpString: LPCWSTR; \u000A                                 lpFileName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WritePrivateProfileSectionW\".}"
  }, 
  {
    "name": "GetDriveType", 
    "type": "skProc", 
    "code": "proc GetDriveType*(lpRootPathName: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDriveTypeW\".}"
  }, 
  {
    "name": "GetSystemDirectory", 
    "type": "skProc", 
    "code": "proc GetSystemDirectory*(lpBuffer: LPWSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetSystemDirectoryW\".}"
  }, 
  {
    "name": "GetTempPath", 
    "type": "skProc", 
    "code": "proc GetTempPath*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTempPathW\".}"
  }, 
  {
    "name": "GetTempFileName", 
    "type": "skProc", 
    "code": "proc GetTempFileName*(lpPathName: LPCWSTR; lpPrefixString: LPCWSTR; \u000A                      uUnique: WINUINT; lpTempFileName: LPWSTR): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTempFileNameW\".}"
  }, 
  {
    "name": "GetWindowsDirectory", 
    "type": "skProc", 
    "code": "proc GetWindowsDirectory*(lpBuffer: LPWSTR; uSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetWindowsDirectoryW\".}"
  }, 
  {
    "name": "SetCurrentDirectory", 
    "type": "skProc", 
    "code": "proc SetCurrentDirectory*(lpPathName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCurrentDirectoryW\".}"
  }, 
  {
    "name": "GetCurrentDirectory", 
    "type": "skProc", 
    "code": "proc GetCurrentDirectory*(nBufferLength: DWORD; lpBuffer: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCurrentDirectoryW\".}"
  }, 
  {
    "name": "GetDiskFreeSpace", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpace*(lpRootPathName: LPCWSTR; lpSectorsPerCluster: LPDWORD; \u000A                       lpBytesPerSector: LPDWORD; \u000A                       lpNumberOfFreeClusters: LPDWORD; \u000A                       lpTotalNumberOfClusters: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceW\".}"
  }, 
  {
    "name": "CreateDirectory", 
    "type": "skProc", 
    "code": "proc CreateDirectory*(lpPathName: LPCWSTR; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryW\".}"
  }, 
  {
    "name": "CreateDirectoryEx", 
    "type": "skProc", 
    "code": "proc CreateDirectoryEx*(lpTemplateDirectory: LPCWSTR; lpNewDirectory: LPCWSTR; \u000A                        lpSecurityAttributes: LPSECURITY_ATTRIBUTES): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateDirectoryExW\".}"
  }, 
  {
    "name": "RemoveDirectory", 
    "type": "skProc", 
    "code": "proc RemoveDirectory*(lpPathName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"RemoveDirectoryW\".}"
  }, 
  {
    "name": "GetFullPathName", 
    "type": "skProc", 
    "code": "proc GetFullPathName*(lpFileName: LPCWSTR; nBufferLength: DWORD; \u000A                      lpBuffer: LPWSTR; lpFilePart: var LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetFullPathNameW\".}"
  }, 
  {
    "name": "DefineDosDevice", 
    "type": "skProc", 
    "code": "proc DefineDosDevice*(dwFlags: DWORD; lpDeviceName: LPCWSTR; \u000A                      lpTargetPath: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DefineDosDeviceW\".}"
  }, 
  {
    "name": "QueryDosDevice", 
    "type": "skProc", 
    "code": "proc QueryDosDevice*(lpDeviceName: LPCWSTR; lpTargetPath: LPWSTR; ucchMax: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"QueryDosDeviceW\".}"
  }, 
  {
    "name": "CreateFile", 
    "type": "skProc", 
    "code": "proc CreateFile*(lpFileName: LPCWSTR; dwDesiredAccess: DWORD; \u000A                 dwShareMode: DWORD; \u000A                 lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                 dwCreationDisposition: DWORD; dwFlagsAndAttributes: DWORD; \u000A                 hTemplateFile: HANDLE): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CreateFileW\".}"
  }, 
  {
    "name": "SetFileAttributes", 
    "type": "skProc", 
    "code": "proc SetFileAttributes*(lpFileName: LPCWSTR; dwFileAttributes: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFileAttributesW\".}"
  }, 
  {
    "name": "GetFileAttributes", 
    "type": "skProc", 
    "code": "proc GetFileAttributes*(lpFileName: LPCWSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetFileAttributesW\".}"
  }, 
  {
    "name": "GetCompressedFileSize", 
    "type": "skProc", 
    "code": "proc GetCompressedFileSize*(lpFileName: LPCWSTR; lpFileSizeHigh: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCompressedFileSizeW\".}"
  }, 
  {
    "name": "DeleteFile", 
    "type": "skProc", 
    "code": "proc DeleteFile*(lpFileName: LPCWSTR): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"DeleteFileW\".}"
  }, 
  {
    "name": "SearchPath", 
    "type": "skProc", 
    "code": "proc SearchPath*(lpPath: LPCWSTR; lpFileName: LPCWSTR; lpExtension: LPCWSTR; \u000A                 nBufferLength: DWORD; lpBuffer: LPWSTR; lpFilePart: LPWSTR): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SearchPathW\".}"
  }, 
  {
    "name": "CopyFile", 
    "type": "skProc", 
    "code": "proc CopyFile*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR; \u000A               bFailIfExists: WINBOOL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CopyFileW\".}"
  }, 
  {
    "name": "MoveFile", 
    "type": "skProc", 
    "code": "proc MoveFile*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MoveFileW\".}"
  }, 
  {
    "name": "MoveFileEx", 
    "type": "skProc", 
    "code": "proc MoveFileEx*(lpExistingFileName: LPCWSTR; lpNewFileName: LPCWSTR; \u000A                 dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"MoveFileExW\".}"
  }, 
  {
    "name": "CreateNamedPipe", 
    "type": "skProc", 
    "code": "proc CreateNamedPipe*(lpName: LPCWSTR; dwOpenMode: DWORD; dwPipeMode: DWORD; \u000A                      nMaxInstances: DWORD; nOutBufferSize: DWORD; \u000A                      nInBufferSize: DWORD; nDefaultTimeOut: DWORD; \u000A                      lpSecurityAttributes: LPSECURITY_ATTRIBUTES): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateNamedPipeW\".}"
  }, 
  {
    "name": "GetNamedPipeHandleState", 
    "type": "skProc", 
    "code": "proc GetNamedPipeHandleState*(hNamedPipe: HANDLE; lpState: LPDWORD; \u000A                              lpCurInstances: LPDWORD; \u000A                              lpMaxCollectionCount: LPDWORD; \u000A                              lpCollectDataTimeout: LPDWORD; lpUserName: LPWSTR; \u000A                              nMaxUserNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetNamedPipeHandleStateW\".}"
  }, 
  {
    "name": "CallNamedPipe", 
    "type": "skProc", 
    "code": "proc CallNamedPipe*(lpNamedPipeName: LPCWSTR; lpInBuffer: LPVOID; \u000A                    nInBufferSize: DWORD; lpOutBuffer: LPVOID; \u000A                    nOutBufferSize: DWORD; lpBytesRead: LPDWORD; nTimeOut: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CallNamedPipeW\".}"
  }, 
  {
    "name": "WaitNamedPipe", 
    "type": "skProc", 
    "code": "proc WaitNamedPipe*(lpNamedPipeName: LPCWSTR; nTimeOut: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitNamedPipeW\".}"
  }, 
  {
    "name": "SetVolumeLabel", 
    "type": "skProc", 
    "code": "proc SetVolumeLabel*(lpRootPathName: LPCWSTR; lpVolumeName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetVolumeLabelW\".}"
  }, 
  {
    "name": "GetVolumeInformation", 
    "type": "skProc", 
    "code": "proc GetVolumeInformation*(lpRootPathName: LPCWSTR; lpVolumeNameBuffer: LPWSTR; \u000A                           nVolumeNameSize: DWORD; \u000A                           lpVolumeSerialNumber: LPDWORD; \u000A                           lpMaximumComponentLength: LPDWORD; \u000A                           lpFileSystemFlags: LPDWORD; \u000A                           lpFileSystemNameBuffer: LPWSTR; \u000A                           nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationW\".}"
  }, 
  {
    "name": "ClearEventLog", 
    "type": "skProc", 
    "code": "proc ClearEventLog*(hEventLog: HANDLE; lpBackupFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ClearEventLogW\".}"
  }, 
  {
    "name": "BackupEventLog", 
    "type": "skProc", 
    "code": "proc BackupEventLog*(hEventLog: HANDLE; lpBackupFileName: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"BackupEventLogW\".}"
  }, 
  {
    "name": "OpenEventLog", 
    "type": "skProc", 
    "code": "proc OpenEventLog*(lpUNCServerName: LPCWSTR; lpSourceName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenEventLogW\".}"
  }, 
  {
    "name": "RegisterEventSource", 
    "type": "skProc", 
    "code": "proc RegisterEventSource*(lpUNCServerName: LPCWSTR; lpSourceName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterEventSourceW\".}"
  }, 
  {
    "name": "OpenBackupEventLog", 
    "type": "skProc", 
    "code": "proc OpenBackupEventLog*(lpUNCServerName: LPCWSTR; lpFileName: LPCWSTR): HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenBackupEventLogW\".}"
  }, 
  {
    "name": "ReadEventLog", 
    "type": "skProc", 
    "code": "proc ReadEventLog*(hEventLog: HANDLE; dwReadFlags: DWORD; dwRecordOffset: DWORD; \u000A                   lpBuffer: LPVOID; nNumberOfBytesToRead: DWORD; \u000A                   pnBytesRead: LPDWORD; pnMinNumberOfBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReadEventLogW\".}"
  }, 
  {
    "name": "ReportEvent", 
    "type": "skProc", 
    "code": "proc ReportEvent*(hEventLog: HANDLE; wType: int16; wCategory: int16; \u000A                  dwEventID: DWORD; lpUserSid: PSID; wNumStrings: int16; \u000A                  dwDataSize: DWORD; lpStrings: LPPCWSTR; lpRawData: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReportEventW\".}"
  }, 
  {
    "name": "AccessCheckAndAuditAlarm", 
    "type": "skProc", 
    "code": "proc AccessCheckAndAuditAlarm*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                               ObjectTypeName: LPWSTR; ObjectName: LPWSTR; \u000A                               SecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                               DesiredAccess: DWORD; \u000A                               GenericMapping: PGENERIC_MAPPING; \u000A                               ObjectCreation: WINBOOL; GrantedAccess: LPDWORD; \u000A                               AccessStatus: LPBOOL; pfGenerateOnClose: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AccessCheckAndAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarm", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarm*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                           ObjectTypeName: LPWSTR; ObjectName: LPWSTR; \u000A                           pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                           ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                           GrantedAccess: DWORD; Privileges: PPRIVILEGE_SET; \u000A                           ObjectCreation: WINBOOL; AccessGranted: WINBOOL; \u000A                           GenerateOnClose: LPBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarm", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarm*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                                ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                                Privileges: PPRIVILEGE_SET; \u000A                                AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectCloseAuditAlarm", 
    "type": "skProc", 
    "code": "proc ObjectCloseAuditAlarm*(SubsystemName: LPCWSTR; HandleId: LPVOID; \u000A                            GenerateOnClose: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectCloseAuditAlarmW\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarm", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarm*(SubsystemName: LPCWSTR; ServiceName: LPCWSTR; \u000A                                  ClientToken: HANDLE; \u000A                                  Privileges: PPRIVILEGE_SET; \u000A                                  AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmW\".}"
  }, 
  {
    "name": "SetFileSecurity", 
    "type": "skProc", 
    "code": "proc SetFileSecurity*(lpFileName: LPCWSTR; \u000A                      SecurityInformation: SECURITY_INFORMATION; \u000A                      pSecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetFileSecurityW\".}"
  }, 
  {
    "name": "GetFileSecurity", 
    "type": "skProc", 
    "code": "proc GetFileSecurity*(lpFileName: LPCWSTR; \u000A                      RequestedInformation: SECURITY_INFORMATION; \u000A                      pSecurityDescriptor: PSECURITY_DESCRIPTOR; nLength: DWORD; \u000A                      lpnLengthNeeded: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetFileSecurityW\".}"
  }, 
  {
    "name": "FindFirstChangeNotification", 
    "type": "skProc", 
    "code": "proc FindFirstChangeNotification*(lpPathName: LPCWSTR; bWatchSubtree: WINBOOL; \u000A                                  dwNotifyFilter: DWORD): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FindFirstChangeNotificationW\".}"
  }, 
  {
    "name": "IsBadStringPtr", 
    "type": "skProc", 
    "code": "proc IsBadStringPtr*(lpsz: LPCWSTR; ucchMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadStringPtrW\".}"
  }, 
  {
    "name": "LookupAccountSid", 
    "type": "skProc", 
    "code": "proc LookupAccountSid*(lpSystemName: LPCWSTR; Sid: PSID; Name: LPWSTR; \u000A                       cbName: LPDWORD; ReferencedDomainName: LPWSTR; \u000A                       cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountSidW\".}"
  }, 
  {
    "name": "LookupAccountName", 
    "type": "skProc", 
    "code": "proc LookupAccountName*(lpSystemName: LPCWSTR; lpAccountName: LPCWSTR; \u000A                        Sid: PSID; cbSid: LPDWORD; ReferencedDomainName: LPWSTR; \u000A                        cbReferencedDomainName: LPDWORD; peUse: PSID_NAME_USE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupAccountNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeValue", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValue*(lpSystemName: LPCWSTR; lpName: LPCWSTR; lpLuid: PLUID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeValueW\".}"
  }, 
  {
    "name": "LookupPrivilegeName", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeName*(lpSystemName: LPCWSTR; lpLuid: PLUID; lpName: LPWSTR; \u000A                          cbName: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayName", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayName*(lpSystemName: LPCWSTR; lpName: LPCWSTR; \u000A                                 lpDisplayName: LPWSTR; cbDisplayName: LPDWORD; \u000A                                 lpLanguageId: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameW\".}"
  }, 
  {
    "name": "BuildCommDCB", 
    "type": "skProc", 
    "code": "proc BuildCommDCB*(lpDef: LPCWSTR; lpDCB: LPDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBW\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeouts", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeouts*(lpDef: LPCWSTR; lpDCB: LPDCB; \u000A                              lpCommTimeouts: LPCOMMTIMEOUTS): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsW\".}"
  }, 
  {
    "name": "CommConfigDialog", 
    "type": "skProc", 
    "code": "proc CommConfigDialog*(lpszName: LPCWSTR; wnd: HWND; lpCC: LPCOMMCONFIG): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogW\".}"
  }, 
  {
    "name": "GetDefaultCommConfig", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfig*(lpszName: LPCWSTR; lpCC: LPCOMMCONFIG; \u000A                           lpdwSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigW\".}"
  }, 
  {
    "name": "SetDefaultCommConfig", 
    "type": "skProc", 
    "code": "proc SetDefaultCommConfig*(lpszName: LPCWSTR; lpCC: LPCOMMCONFIG; dwSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetDefaultCommConfigW\".}"
  }, 
  {
    "name": "GetComputerName", 
    "type": "skProc", 
    "code": "proc GetComputerName*(lpBuffer: LPWSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameW\".}"
  }, 
  {
    "name": "SetComputerName", 
    "type": "skProc", 
    "code": "proc SetComputerName*(lpComputerName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetComputerNameW\".}"
  }, 
  {
    "name": "GetUserName", 
    "type": "skProc", 
    "code": "proc GetUserName*(lpBuffer: LPWSTR; nSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameW\".}"
  }, 
  {
    "name": "LoadKeyboardLayout", 
    "type": "skProc", 
    "code": "proc LoadKeyboardLayout*(pwszKLID: LPCWSTR; Flags: WINUINT): HKL {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadKeyboardLayoutW\".}"
  }, 
  {
    "name": "GetKeyboardLayoutName", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayoutName*(pwszKLID: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetKeyboardLayoutNameW\".}"
  }, 
  {
    "name": "CreateDesktop", 
    "type": "skProc", 
    "code": "proc CreateDesktop*(lpszDesktop: LPWSTR; lpszDevice: LPWSTR; \u000A                    pDevmode: LPDEVMODE; dwFlags: DWORD; dwDesiredAccess: DWORD; \u000A                    lpsa: LPSECURITY_ATTRIBUTES): HDESK {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDesktopW\".}"
  }, 
  {
    "name": "OpenDesktop", 
    "type": "skProc", 
    "code": "proc OpenDesktop*(lpszDesktop: LPWSTR; dwFlags: DWORD; fInherit: WINBOOL; \u000A                  dwDesiredAccess: DWORD): HDESK {.stdcall, dynlib: \"user32\", \u000A    importc: \"OpenDesktopW\".}"
  }, 
  {
    "name": "EnumDesktops", 
    "type": "skProc", 
    "code": "proc EnumDesktops*(hwinsta: HWINSTA; lpEnumFunc: DESKTOPENUMPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumDesktopsW\".}"
  }, 
  {
    "name": "CreateWindowStation", 
    "type": "skProc", 
    "code": "proc CreateWindowStation*(lpwinsta: LPWSTR; dwReserved: DWORD; \u000A                          dwDesiredAccess: DWORD; lpsa: LPSECURITY_ATTRIBUTES): HWINSTA {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowStationW\".}"
  }, 
  {
    "name": "OpenWindowStation", 
    "type": "skProc", 
    "code": "proc OpenWindowStation*(lpszWinSta: LPWSTR; fInherit: WINBOOL; \u000A                        dwDesiredAccess: DWORD): HWINSTA {.stdcall, \u000A    dynlib: \"user32\", importc: \"OpenWindowStationW\".}"
  }, 
  {
    "name": "EnumWindowStations", 
    "type": "skProc", 
    "code": "proc EnumWindowStations*(lpEnumFunc: ENUMWINDOWSTATIONPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumWindowStationsW\".}"
  }, 
  {
    "name": "GetUserObjectInformation", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformation*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                               nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationW\".}"
  }, 
  {
    "name": "SetUserObjectInformation", 
    "type": "skProc", 
    "code": "proc SetUserObjectInformation*(hObj: HANDLE; nIndex: int32; pvInfo: PVOID; \u000A                               nLength: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetUserObjectInformationW\".}"
  }, 
  {
    "name": "RegisterWindowMessage", 
    "type": "skProc", 
    "code": "proc RegisterWindowMessage*(lpString: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterWindowMessageW\".}"
  }, 
  {
    "name": "GetMessage", 
    "type": "skProc", 
    "code": "proc GetMessage*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                 wMsgFilterMax: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMessageW\".}"
  }, 
  {
    "name": "DispatchMessage", 
    "type": "skProc", 
    "code": "proc DispatchMessage*(lpMsg: LPMSG): LONG {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageW\".}"
  }, 
  {
    "name": "PeekMessage", 
    "type": "skProc", 
    "code": "proc PeekMessage*(lpMsg: LPMSG; wnd: HWND; wMsgFilterMin: WINUINT; \u000A                  wMsgFilterMax: WINUINT; wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageW\".}"
  }, 
  {
    "name": "SendMessage", 
    "type": "skProc", 
    "code": "proc SendMessage*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageW\".}"
  }, 
  {
    "name": "SendMessageTimeout", 
    "type": "skProc", 
    "code": "proc SendMessageTimeout*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                         fuFlags: WINUINT; uTimeout: WINUINT; \u000A                         lpdwResult: LPDWORD): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendMessageTimeoutW\".}"
  }, 
  {
    "name": "SendNotifyMessage", 
    "type": "skProc", 
    "code": "proc SendNotifyMessage*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendNotifyMessageW\".}"
  }, 
  {
    "name": "SendMessageCallback", 
    "type": "skProc", 
    "code": "proc SendMessageCallback*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                          lpResultCallBack: SENDASYNCPROC; dwData: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageCallbackW\".}"
  }, 
  {
    "name": "PostMessage", 
    "type": "skProc", 
    "code": "proc PostMessage*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostMessageW\".}"
  }, 
  {
    "name": "PostThreadMessage", 
    "type": "skProc", 
    "code": "proc PostThreadMessage*(idThread: DWORD; Msg: WINUINT; wp: WPARAM; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PostThreadMessageW\".}"
  }, 
  {
    "name": "DefWindowProc", 
    "type": "skProc", 
    "code": "proc DefWindowProc*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefWindowProcW\".}"
  }, 
  {
    "name": "CallWindowProc", 
    "type": "skProc", 
    "code": "proc CallWindowProc*(lpPrevWndFunc: WNDPROC; wnd: HWND; Msg: WINUINT; \u000A                     wp: WPARAM; lp: LPARAM): LRESULT {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallWindowProcW\".}"
  }, 
  {
    "name": "RegisterClass", 
    "type": "skProc", 
    "code": "proc RegisterClass*(lpWndClass: LPWNDCLASS): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassW\".}"
  }, 
  {
    "name": "UnregisterClass", 
    "type": "skProc", 
    "code": "proc UnregisterClass*(lpClassName: LPCWSTR; hInstance: HINST): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnregisterClassW\".}"
  }, 
  {
    "name": "GetClassInfo", 
    "type": "skProc", 
    "code": "proc GetClassInfo*(hInstance: HINST; lpClassName: LPCWSTR; \u000A                   lpWndClass: LPWNDCLASS): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClassInfoW\".}"
  }, 
  {
    "name": "RegisterClassEx", 
    "type": "skProc", 
    "code": "proc RegisterClassEx*(para1: LPWNDCLASSEXW): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassExW\".}"
  }, 
  {
    "name": "GetClassInfoEx", 
    "type": "skProc", 
    "code": "proc GetClassInfoEx*(para1: HINST; para2: LPCWSTR; para3: LPWNDCLASSEX): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassInfoExW\".}"
  }, 
  {
    "name": "CreateWindowEx", 
    "type": "skProc", 
    "code": "proc CreateWindowEx*(dwExStyle: DWORD; lpClassName: LPCWSTR; \u000A                     lpWindowName: LPCWSTR; dwStyle: DWORD; X: int32; Y: int32; \u000A                     nWidth: int32; nHeight: int32; hWndParent: HWND; \u000A                     menu: HMENU; hInstance: HINST; lpParam: LPVOID): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateWindowExW\".}"
  }, 
  {
    "name": "CreateDialogParam", 
    "type": "skProc", 
    "code": "proc CreateDialogParam*(hInstance: HINST; lpTemplateName: LPCWSTR; \u000A                        hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                        dwInitParam: LPARAM): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateDialogParamW\".}"
  }, 
  {
    "name": "CreateDialogIndirectParam", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectParam*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                                hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                                dwInitParam: LPARAM): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDialogIndirectParamW\".}"
  }, 
  {
    "name": "DialogBoxParam", 
    "type": "skProc", 
    "code": "proc DialogBoxParam*(hInstance: HINST; lpTemplateName: LPCWSTR; \u000A                     hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                     dwInitParam: LPARAM): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DialogBoxParamW\".}"
  }, 
  {
    "name": "DialogBoxIndirectParam", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParam*(hInstance: HINST; hDialogTemplate: LPCDLGTEMPLATE; \u000A                             hWndParent: HWND; lpDialogFunc: DLGPROC; \u000A                             dwInitParam: LPARAM): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamW\".}"
  }, 
  {
    "name": "SetDlgItemText", 
    "type": "skProc", 
    "code": "proc SetDlgItemText*(hDlg: HWND; nIDDlgItem: int32; lpString: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetDlgItemTextW\".}"
  }, 
  {
    "name": "GetDlgItemText", 
    "type": "skProc", 
    "code": "proc GetDlgItemText*(hDlg: HWND; nIDDlgItem: int32; lpString: LPWSTR; \u000A                     nMaxCount: int32): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetDlgItemTextW\".}"
  }, 
  {
    "name": "SendDlgItemMessage", 
    "type": "skProc", 
    "code": "proc SendDlgItemMessage*(hDlg: HWND; nIDDlgItem: int32; Msg: WINUINT; \u000A                         wp: WPARAM; lp: LPARAM): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SendDlgItemMessageW\".}"
  }, 
  {
    "name": "DefDlgProc", 
    "type": "skProc", 
    "code": "proc DefDlgProc*(hDlg: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefDlgProcW\".}"
  }, 
  {
    "name": "CallMsgFilter", 
    "type": "skProc", 
    "code": "proc CallMsgFilter*(lpMsg: LPMSG; nCode: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterW\".}"
  }, 
  {
    "name": "RegisterClipboardFormat", 
    "type": "skProc", 
    "code": "proc RegisterClipboardFormat*(lpszFormat: LPCWSTR): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterClipboardFormatW\".}"
  }, 
  {
    "name": "GetClipboardFormatName", 
    "type": "skProc", 
    "code": "proc GetClipboardFormatName*(format: WINUINT; lpszFormatName: LPWSTR; \u000A                             cchMaxCount: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClipboardFormatNameW\".}"
  }, 
  {
    "name": "CharToOem", 
    "type": "skProc", 
    "code": "proc CharToOem*(lpszSrc: LPCWSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharToOemW\".}"
  }, 
  {
    "name": "OemToChar", 
    "type": "skProc", 
    "code": "proc OemToChar*(lpszSrc: LPCSTR; lpszDst: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OemToCharW\".}"
  }, 
  {
    "name": "CharToOemBuff", 
    "type": "skProc", 
    "code": "proc CharToOemBuff*(lpszSrc: LPCWSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CharToOemBuffW\".}"
  }, 
  {
    "name": "OemToCharBuff", 
    "type": "skProc", 
    "code": "proc OemToCharBuff*(lpszSrc: LPCSTR; lpszDst: LPWSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"OemToCharBuffW\".}"
  }, 
  {
    "name": "CharUpper", 
    "type": "skProc", 
    "code": "proc CharUpper*(lpsz: LPWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"CharUpperW\".}"
  }, 
  {
    "name": "CharUpperBuff", 
    "type": "skProc", 
    "code": "proc CharUpperBuff*(lpsz: LPWSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharUpperBuffW\".}"
  }, 
  {
    "name": "CharLower", 
    "type": "skProc", 
    "code": "proc CharLower*(lpsz: LPWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"CharLowerW\".}"
  }, 
  {
    "name": "CharLowerBuff", 
    "type": "skProc", 
    "code": "proc CharLowerBuff*(lpsz: LPWSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharLowerBuffW\".}"
  }, 
  {
    "name": "CharNext", 
    "type": "skProc", 
    "code": "proc CharNext*(lpsz: LPCWSTR): LPWSTR {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"CharNextW\".}"
  }, 
  {
    "name": "CharPrev", 
    "type": "skProc", 
    "code": "proc CharPrev*(lpszStart: LPCWSTR; lpszCurrent: LPCWSTR): LPWSTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharPrevW\".}"
  }, 
  {
    "name": "IsCharAlpha", 
    "type": "skProc", 
    "code": "proc IsCharAlpha*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharAlphaW\".}"
  }, 
  {
    "name": "IsCharAlphaNumeric", 
    "type": "skProc", 
    "code": "proc IsCharAlphaNumeric*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsCharAlphaNumericW\".}"
  }, 
  {
    "name": "IsCharUpper", 
    "type": "skProc", 
    "code": "proc IsCharUpper*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharUpperW\".}"
  }, 
  {
    "name": "IsCharLower", 
    "type": "skProc", 
    "code": "proc IsCharLower*(ch: WCHAR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"IsCharLowerW\".}"
  }, 
  {
    "name": "GetKeyNameText", 
    "type": "skProc", 
    "code": "proc GetKeyNameText*(lParam: LONG; lpString: LPWSTR; nSize: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetKeyNameTextW\".}"
  }, 
  {
    "name": "VkKeyScan", 
    "type": "skProc", 
    "code": "proc VkKeyScan*(ch: WCHAR): SHORT {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"VkKeyScanW\".}"
  }, 
  {
    "name": "VkKeyScanEx", 
    "type": "skProc", 
    "code": "proc VkKeyScanEx*(ch: WCHAR; dwhkl: HKL): SHORT {.stdcall, dynlib: \"user32\", \u000A    importc: \"VkKeyScanExW\".}"
  }, 
  {
    "name": "MapVirtualKey", 
    "type": "skProc", 
    "code": "proc MapVirtualKey*(uCode: WINUINT; uMapType: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"MapVirtualKeyW\".}"
  }, 
  {
    "name": "MapVirtualKeyEx", 
    "type": "skProc", 
    "code": "proc MapVirtualKeyEx*(uCode: WINUINT; uMapType: WINUINT; dwhkl: HKL): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"MapVirtualKeyExW\".}"
  }, 
  {
    "name": "LoadAccelerators", 
    "type": "skProc", 
    "code": "proc LoadAccelerators*(hInstance: HINST; lpTableName: LPCWSTR): HACCEL {.\u000A    stdcall, dynlib: \"user32\", importc: \"LoadAcceleratorsW\".}"
  }, 
  {
    "name": "CreateAcceleratorTable", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTable*(para1: LPACCEL; para2: int32): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableW\".}"
  }, 
  {
    "name": "CopyAcceleratorTable", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTable*(hAccelSrc: HACCEL; lpAccelDst: LPACCEL; \u000A                           cAccelEntries: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyAcceleratorTableW\".}"
  }, 
  {
    "name": "TranslateAccelerator", 
    "type": "skProc", 
    "code": "proc TranslateAccelerator*(wnd: HWND; hAccTable: HACCEL; lpMsg: LPMSG): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorW\".}"
  }, 
  {
    "name": "LoadMenu", 
    "type": "skProc", 
    "code": "proc LoadMenu*(hInstance: HINST; lpMenuName: LPCWSTR): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuW\".}"
  }, 
  {
    "name": "LoadMenuIndirect", 
    "type": "skProc", 
    "code": "proc LoadMenuIndirect*(lpMenuTemplate: LPMENUTEMPLATE): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadMenuIndirectW\".}"
  }, 
  {
    "name": "ChangeMenu", 
    "type": "skProc", 
    "code": "proc ChangeMenu*(menu: HMENU; cmd: WINUINT; lpszNewItem: LPCWSTR; \u000A                 cmdInsert: WINUINT; flags: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ChangeMenuW\".}"
  }, 
  {
    "name": "GetMenuString", 
    "type": "skProc", 
    "code": "proc GetMenuString*(menu: HMENU; uIDItem: WINUINT; lpString: LPWSTR; \u000A                    nMaxCount: int32; uFlag: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuStringW\".}"
  }, 
  {
    "name": "InsertMenu", 
    "type": "skProc", 
    "code": "proc InsertMenu*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                 uIDNewItem: WINUINT; lpNewItem: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuW\".}"
  }, 
  {
    "name": "AppendMenu", 
    "type": "skProc", 
    "code": "proc AppendMenu*(menu: HMENU; uFlags: WINUINT; uIDNewItem: WINUINT; \u000A                 lpNewItem: LPCWSTR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"AppendMenuW\".}"
  }, 
  {
    "name": "ModifyMenu", 
    "type": "skProc", 
    "code": "proc ModifyMenu*(hMnu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                 uIDNewItem: WINUINT; lpNewItem: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ModifyMenuW\".}"
  }, 
  {
    "name": "InsertMenuItem", 
    "type": "skProc", 
    "code": "proc InsertMenuItem*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                     para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InsertMenuItemW\".}"
  }, 
  {
    "name": "GetMenuItemInfo", 
    "type": "skProc", 
    "code": "proc GetMenuItemInfo*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                      para4: LPMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuItemInfoW\".}"
  }, 
  {
    "name": "SetMenuItemInfo", 
    "type": "skProc", 
    "code": "proc SetMenuItemInfo*(para1: HMENU; para2: WINUINT; para3: WINBOOL; \u000A                      para4: LPCMENUITEMINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetMenuItemInfoW\".}"
  }, 
  {
    "name": "DrawText", 
    "type": "skProc", 
    "code": "proc DrawText*(hDC: HDC; lpString: LPCWSTR; nCount: int32; lpRect: LPRECT; \u000A               uFormat: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawTextW\".}"
  }, 
  {
    "name": "DrawTextEx", 
    "type": "skProc", 
    "code": "proc DrawTextEx*(para1: HDC; para2: LPWSTR; para3: int32; para4: LPRECT; \u000A                 para5: WINUINT; para6: LPDRAWTEXTPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawTextExW\".}"
  }, 
  {
    "name": "GrayString", 
    "type": "skProc", 
    "code": "proc GrayString*(hDC: HDC; hBrush: HBRUSH; lpOutputFunc: GRAYSTRINGPROC; \u000A                 lpData: LPARAM; nCount: int32; X: int32; Y: int32; \u000A                 nWidth: int32; nHeight: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GrayStringW\".}"
  }, 
  {
    "name": "DrawState", 
    "type": "skProc", 
    "code": "proc DrawState*(para1: HDC; para2: HBRUSH; para3: DRAWSTATEPROC; para4: LPARAM; \u000A                para5: WPARAM; para6: int32; para7: int32; para8: int32; \u000A                para9: int32; para10: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawStateW\".}"
  }, 
  {
    "name": "TabbedTextOut", 
    "type": "skProc", 
    "code": "proc TabbedTextOut*(hDC: HDC; X: int32; Y: int32; lpString: LPCWSTR; \u000A                    nCount: int32; nTabPositions: int32; \u000A                    lpnTabStopPositions: LPINT; nTabOrigin: int32): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"TabbedTextOutW\".}"
  }, 
  {
    "name": "GetTabbedTextExtent", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtent*(hDC: HDC; lpString: LPCWSTR; nCount: int32; \u000A                          nTabPositions: int32; lpnTabStopPositions: LPINT): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetTabbedTextExtentW\".}"
  }, 
  {
    "name": "SetProp", 
    "type": "skProc", 
    "code": "proc SetProp*(wnd: HWND; lpString: LPCWSTR; hData: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetPropW\".}"
  }, 
  {
    "name": "GetProp", 
    "type": "skProc", 
    "code": "proc GetProp*(wnd: HWND; lpString: LPCWSTR): HANDLE {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetPropW\".}"
  }, 
  {
    "name": "RemoveProp", 
    "type": "skProc", 
    "code": "proc RemoveProp*(wnd: HWND; lpString: LPCWSTR): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"RemovePropW\".}"
  }, 
  {
    "name": "EnumPropsEx", 
    "type": "skProc", 
    "code": "proc EnumPropsEx*(wnd: HWND; lpEnumFunc: PROPENUMPROCEX; lp: LPARAM): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumPropsExW\".}"
  }, 
  {
    "name": "EnumProps", 
    "type": "skProc", 
    "code": "proc EnumProps*(wnd: HWND; lpEnumFunc: PROPENUMPROC): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumPropsW\".}"
  }, 
  {
    "name": "SetWindowText", 
    "type": "skProc", 
    "code": "proc SetWindowText*(wnd: HWND; lpString: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowTextW\".}"
  }, 
  {
    "name": "GetWindowText", 
    "type": "skProc", 
    "code": "proc GetWindowText*(wnd: HWND; lpString: LPWSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowTextW\".}"
  }, 
  {
    "name": "GetWindowTextLength", 
    "type": "skProc", 
    "code": "proc GetWindowTextLength*(wnd: HWND): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowTextLengthW\".}"
  }, 
  {
    "name": "MessageBox", 
    "type": "skProc", 
    "code": "proc MessageBox*(wnd: HWND; lpText: LPCWSTR; lpCaption: LPCWSTR; uType: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"MessageBoxW\".}"
  }, 
  {
    "name": "MessageBoxEx", 
    "type": "skProc", 
    "code": "proc MessageBoxEx*(wnd: HWND; lpText: LPCWSTR; lpCaption: LPCWSTR; \u000A                   uType: WINUINT; wLanguageId: int16): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxExW\".}"
  }, 
  {
    "name": "MessageBoxIndirect", 
    "type": "skProc", 
    "code": "proc MessageBoxIndirect*(para1: LPMSGBOXPARAMS): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxIndirectW\".}"
  }, 
  {
    "name": "GetWindowLong", 
    "type": "skProc", 
    "code": "proc GetWindowLong*(wnd: HWND; nIndex: int32): LONG {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowLongW\".}"
  }, 
  {
    "name": "SetWindowLong", 
    "type": "skProc", 
    "code": "proc SetWindowLong*(wnd: HWND; nIndex: int32; dwNewLong: LONG): LONG {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowLongW\".}"
  }, 
  {
    "name": "GetClassLong", 
    "type": "skProc", 
    "code": "proc GetClassLong*(wnd: HWND; nIndex: int32): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClassLongW\".}"
  }, 
  {
    "name": "SetClassLong", 
    "type": "skProc", 
    "code": "proc SetClassLong*(wnd: HWND; nIndex: int32; dwNewLong: LONG): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetClassLongW\".}"
  }, 
  {
    "name": "GetWindowLongPtr", 
    "type": "skProc", 
    "code": "proc GetWindowLongPtr*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowLongPtrW\".}"
  }, 
  {
    "name": "SetWindowLongPtr", 
    "type": "skProc", 
    "code": "proc SetWindowLongPtr*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetWindowLongPtrW\".}"
  }, 
  {
    "name": "GetClassLongPtr", 
    "type": "skProc", 
    "code": "proc GetClassLongPtr*(wnd: HWND; nIndex: int32): LONG_PTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassLongPtrW\".}"
  }, 
  {
    "name": "SetClassLongPtr", 
    "type": "skProc", 
    "code": "proc SetClassLongPtr*(wnd: HWND; nIndex: int32; dwNewLong: LONG_PTR): LONG_PTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetClassLongPtrW\".}"
  }, 
  {
    "name": "FindWindow", 
    "type": "skProc", 
    "code": "proc FindWindow*(lpClassName: LPCWSTR; lpWindowName: LPCWSTR): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"FindWindowW\".}"
  }, 
  {
    "name": "FindWindowEx", 
    "type": "skProc", 
    "code": "proc FindWindowEx*(para1: HWND; para2: HWND; para3: LPCWSTR; para4: LPCWSTR): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"FindWindowExW\".}"
  }, 
  {
    "name": "GetClassName", 
    "type": "skProc", 
    "code": "proc GetClassName*(wnd: HWND; lpClassName: LPWSTR; nMaxCount: int32): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetClassNameW\".}"
  }, 
  {
    "name": "SetWindowsHookEx", 
    "type": "skProc", 
    "code": "proc SetWindowsHookEx*(idHook: int32; lpfn: HOOKPROC; hmod: HINST; \u000A                       dwThreadId: DWORD): HHOOK {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetWindowsHookExW\".}"
  }, 
  {
    "name": "LoadBitmap", 
    "type": "skProc", 
    "code": "proc LoadBitmap*(hInstance: HINST; lpBitmapName: LPCWSTR): HBITMAP {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadBitmapW\".}"
  }, 
  {
    "name": "LoadCursor", 
    "type": "skProc", 
    "code": "proc LoadCursor*(hInstance: HINST; lpCursorName: LPCWSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorW\".}"
  }, 
  {
    "name": "LoadCursorFromFile", 
    "type": "skProc", 
    "code": "proc LoadCursorFromFile*(lpFileName: LPCWSTR): HCURSOR {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadCursorFromFileW\".}"
  }, 
  {
    "name": "LoadIcon", 
    "type": "skProc", 
    "code": "proc LoadIcon*(hInstance: HINST; lpIconName: LPCWSTR): HICON {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadIconW\".}"
  }, 
  {
    "name": "LoadImage", 
    "type": "skProc", 
    "code": "proc LoadImage*(para1: HINST; para2: LPCWSTR; para3: WINUINT; para4: int32; \u000A                para5: int32; para6: WINUINT): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"LoadImageW\".}"
  }, 
  {
    "name": "LoadString", 
    "type": "skProc", 
    "code": "proc LoadString*(hInstance: HINST; uID: WINUINT; lpBuffer: LPWSTR; \u000A                 nBufferMax: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"LoadStringW\".}"
  }, 
  {
    "name": "IsDialogMessage", 
    "type": "skProc", 
    "code": "proc IsDialogMessage*(hDlg: HWND; lpMsg: LPMSG): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageW\".}"
  }, 
  {
    "name": "DlgDirList", 
    "type": "skProc", 
    "code": "proc DlgDirList*(hDlg: HWND; lpPathSpec: LPWSTR; nIDListBox: int32; \u000A                 nIDStaticPath: int32; uFileType: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirListW\".}"
  }, 
  {
    "name": "DlgDirSelectEx", 
    "type": "skProc", 
    "code": "proc DlgDirSelectEx*(hDlg: HWND; lpString: LPWSTR; nCount: int32; \u000A                     nIDListBox: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DlgDirSelectExW\".}"
  }, 
  {
    "name": "DlgDirListComboBox", 
    "type": "skProc", 
    "code": "proc DlgDirListComboBox*(hDlg: HWND; lpPathSpec: LPWSTR; nIDComboBox: int32; \u000A                         nIDStaticPath: int32; uFiletype: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"DlgDirListComboBoxW\".}"
  }, 
  {
    "name": "DlgDirSelectComboBoxEx", 
    "type": "skProc", 
    "code": "proc DlgDirSelectComboBoxEx*(hDlg: HWND; lpString: LPWSTR; nCount: int32; \u000A                             nIDComboBox: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DlgDirSelectComboBoxExW\".}"
  }, 
  {
    "name": "DefFrameProc", 
    "type": "skProc", 
    "code": "proc DefFrameProc*(wnd: HWND; hWndMDIClient: HWND; uMsg: WINUINT; wp: WPARAM; \u000A                   lp: LPARAM): LRESULT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DefFrameProcW\".}"
  }, 
  {
    "name": "DefMDIChildProc", 
    "type": "skProc", 
    "code": "proc DefMDIChildProc*(wnd: HWND; uMsg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DefMDIChildProcW\".}"
  }, 
  {
    "name": "CreateMDIWindow", 
    "type": "skProc", 
    "code": "proc CreateMDIWindow*(lpClassName: LPWSTR; lpWindowName: LPWSTR; dwStyle: DWORD; \u000A                      X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                      hWndParent: HWND; hInstance: HINST; lp: LPARAM): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateMDIWindowW\".}"
  }, 
  {
    "name": "WinHelp", 
    "type": "skProc", 
    "code": "proc WinHelp*(hWndMain: HWND; lpszHelp: LPCWSTR; uCommand: WINUINT; \u000A              dwData: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"WinHelpW\".}"
  }, 
  {
    "name": "ChangeDisplaySettings", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettings*(lpDevMode: LPDEVMODE; dwFlags: DWORD): LONG {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsW\".}"
  }, 
  {
    "name": "EnumDisplaySettings", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettings*(lpszDeviceName: LPCWSTR; iModeNum: DWORD; \u000A                          lpDevMode: LPDEVMODEW): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsW\".}"
  }, 
  {
    "name": "SystemParametersInfo", 
    "type": "skProc", 
    "code": "proc SystemParametersInfo*(uiAction: WINUINT; uiParam: WINUINT; pvParam: PVOID; \u000A                           fWinIni: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SystemParametersInfoW\".}"
  }, 
  {
    "name": "AddFontResource", 
    "type": "skProc", 
    "code": "proc AddFontResource*(para1: LPCWSTR): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"AddFontResourceW\".}"
  }, 
  {
    "name": "CopyMetaFile", 
    "type": "skProc", 
    "code": "proc CopyMetaFile*(para1: HMETAFILE; para2: LPCWSTR): HMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CopyMetaFileW\".}"
  }, 
  {
    "name": "CreateFontIndirect", 
    "type": "skProc", 
    "code": "proc CreateFontIndirect*(para1: PLOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectW\".}"
  }, 
  {
    "name": "CreateFontIndirect", 
    "type": "skProc", 
    "code": "proc CreateFontIndirect*(para1: var LOGFONT): HFONT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateFontIndirectW\".}"
  }, 
  {
    "name": "CreateFont", 
    "type": "skProc", 
    "code": "proc CreateFont*(para1: int32; para2: int32; para3: int32; para4: int32; \u000A                 para5: int32; para6: DWORD; para7: DWORD; para8: DWORD; \u000A                 para9: DWORD; para10: DWORD; para11: DWORD; para12: DWORD; \u000A                 para13: DWORD; para14: LPCWSTR): HFONT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateFontW\".}"
  }, 
  {
    "name": "CreateIC", 
    "type": "skProc", 
    "code": "proc CreateIC*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR; para4: LPDEVMODE): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateICW\".}"
  }, 
  {
    "name": "CreateMetaFile", 
    "type": "skProc", 
    "code": "proc CreateMetaFile*(para1: LPCWSTR): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateMetaFileW\".}"
  }, 
  {
    "name": "CreateScalableFontResource", 
    "type": "skProc", 
    "code": "proc CreateScalableFontResource*(para1: DWORD; para2: LPCWSTR; para3: LPCWSTR; \u000A                                 para4: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateScalableFontResourceW\".}"
  }, 
  {
    "name": "EnumFontFamiliesEx", 
    "type": "skProc", 
    "code": "proc EnumFontFamiliesEx*(para1: HDC; para2: LPLOGFONT; para3: FONTENUMEXPROC; \u000A                         para4: LPARAM; para5: DWORD): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"EnumFontFamiliesExW\".}"
  }, 
  {
    "name": "EnumFontFamilies", 
    "type": "skProc", 
    "code": "proc EnumFontFamilies*(para1: HDC; para2: LPCWSTR; para3: FONTENUMPROC; \u000A                       para4: LPARAM): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumFontFamiliesW\".}"
  }, 
  {
    "name": "EnumFonts", 
    "type": "skProc", 
    "code": "proc EnumFonts*(para1: HDC; para2: LPCWSTR; para3: ENUMFONTSPROC; para4: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumFontsW\".}"
  }, 
  {
    "name": "EnumFonts", 
    "type": "skProc", 
    "code": "proc EnumFonts*(para1: HDC; para2: LPCWSTR; para3: ENUMFONTSPROC; para4: pointer): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumFontsW\".}"
  }, 
  {
    "name": "GetCharWidth", 
    "type": "skProc", 
    "code": "proc GetCharWidth*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthW\".}"
  }, 
  {
    "name": "GetCharWidth32", 
    "type": "skProc", 
    "code": "proc GetCharWidth32*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32W\".}"
  }, 
  {
    "name": "GetCharWidthFloat", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloat*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                        para4: ptr float32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetCharWidthFloatW\".}"
  }, 
  {
    "name": "GetCharABCWidths", 
    "type": "skProc", 
    "code": "proc GetCharABCWidths*(para1: HDC; para2: WINUINT; para3: WINUINT; para4: LPABC): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsW\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloat", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloat*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                            para4: LPABCFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatW\".}"
  }, 
  {
    "name": "GetGlyphOutline", 
    "type": "skProc", 
    "code": "proc GetGlyphOutline*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                      para4: LPGLYPHMETRICS; para5: DWORD; para6: LPVOID; \u000A                      para7: PMAT2): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetGlyphOutlineW\".}"
  }, 
  {
    "name": "GetMetaFile", 
    "type": "skProc", 
    "code": "proc GetMetaFile*(para1: LPCWSTR): HMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetMetaFileW\".}"
  }, 
  {
    "name": "GetOutlineTextMetrics", 
    "type": "skProc", 
    "code": "proc GetOutlineTextMetrics*(para1: HDC; para2: WINUINT; \u000A                            para3: LPOUTLINETEXTMETRIC): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetOutlineTextMetricsW\".}"
  }, 
  {
    "name": "GetTextExtentPoint", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint*(para1: HDC; para2: LPCWSTR; para3: int32; para4: LPSIZE): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPointW\".}"
  }, 
  {
    "name": "GetTextExtentPoint32", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                           para4: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentPoint32W\".}"
  }, 
  {
    "name": "GetTextExtentExPoint", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPoint*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                           para4: int32; para5: LPINT; para6: LPINT; \u000A                           para7: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointW\".}"
  }, 
  {
    "name": "GetCharacterPlacement", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacement*(para1: HDC; para2: LPCWSTR; para3: int32; \u000A                            para4: int32; para5: LPGCP_RESULTS; para6: DWORD): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharacterPlacementW\".}"
  }, 
  {
    "name": "ResetDC", 
    "type": "skProc", 
    "code": "proc ResetDC*(para1: HDC; para2: LPDEVMODE): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ResetDCW\".}"
  }, 
  {
    "name": "RemoveFontResource", 
    "type": "skProc", 
    "code": "proc RemoveFontResource*(para1: LPCWSTR): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"RemoveFontResourceW\".}"
  }, 
  {
    "name": "CopyEnhMetaFile", 
    "type": "skProc", 
    "code": "proc CopyEnhMetaFile*(para1: HENHMETAFILE; para2: LPCWSTR): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CopyEnhMetaFileW\".}"
  }, 
  {
    "name": "CreateEnhMetaFile", 
    "type": "skProc", 
    "code": "proc CreateEnhMetaFile*(para1: HDC; para2: LPCWSTR; para3: LPRECT; \u000A                        para4: LPCWSTR): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateEnhMetaFileW\".}"
  }, 
  {
    "name": "GetEnhMetaFile", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFile*(para1: LPCWSTR): HENHMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetEnhMetaFileW\".}"
  }, 
  {
    "name": "GetEnhMetaFileDescription", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileDescription*(para1: HENHMETAFILE; para2: WINUINT; \u000A                                para3: LPWSTR): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetEnhMetaFileDescriptionW\".}"
  }, 
  {
    "name": "GetTextMetrics", 
    "type": "skProc", 
    "code": "proc GetTextMetrics*(para1: HDC; para2: LPTEXTMETRIC): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextMetricsW\".}"
  }, 
  {
    "name": "StartDoc", 
    "type": "skProc", 
    "code": "proc StartDoc*(para1: HDC; para2: PDOCINFO): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StartDocW\".}"
  }, 
  {
    "name": "GetObject", 
    "type": "skProc", 
    "code": "proc GetObject*(para1: HGDIOBJ; para2: int32; para3: LPVOID): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetObjectW\".}"
  }, 
  {
    "name": "TextOut", 
    "type": "skProc", 
    "code": "proc TextOut*(para1: HDC; para2: int32; para3: int32; para4: LPCWSTR; \u000A              para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                       importc: \"TextOutW\".}"
  }, 
  {
    "name": "ExtTextOut", 
    "type": "skProc", 
    "code": "proc ExtTextOut*(para1: HDC; para2: int32; para3: int32; para4: WINUINT; \u000A                 para5: LPRECT; para6: LPCWSTR; para7: WINUINT; para8: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ExtTextOutW\".}"
  }, 
  {
    "name": "PolyTextOut", 
    "type": "skProc", 
    "code": "proc PolyTextOut*(para1: HDC; para2: PPOLYTEXT; para3: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutW\".}"
  }, 
  {
    "name": "GetTextFace", 
    "type": "skProc", 
    "code": "proc GetTextFace*(para1: HDC; para2: int32; para3: LPWSTR): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextFaceW\".}"
  }, 
  {
    "name": "GetKerningPairs", 
    "type": "skProc", 
    "code": "proc GetKerningPairs*(para1: HDC; para2: DWORD; para3: LPKERNINGPAIR): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetKerningPairsW\".}"
  }, 
  {
    "name": "GetLogColorSpace", 
    "type": "skProc", 
    "code": "proc GetLogColorSpace*(para1: HCOLORSPACE; para2: LPLOGCOLORSPACE; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetLogColorSpaceW\".}"
  }, 
  {
    "name": "CreateColorSpace", 
    "type": "skProc", 
    "code": "proc CreateColorSpace*(para1: LPLOGCOLORSPACE): HCOLORSPACE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateColorSpaceW\".}"
  }, 
  {
    "name": "GetICMProfile", 
    "type": "skProc", 
    "code": "proc GetICMProfile*(para1: HDC; para2: DWORD; para3: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetICMProfileW\".}"
  }, 
  {
    "name": "SetICMProfile", 
    "type": "skProc", 
    "code": "proc SetICMProfile*(para1: HDC; para2: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetICMProfileW\".}"
  }, 
  {
    "name": "UpdateICMRegKey", 
    "type": "skProc", 
    "code": "proc UpdateICMRegKey*(para1: DWORD; para2: DWORD; para3: LPWSTR; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"UpdateICMRegKeyW\".}"
  }, 
  {
    "name": "EnumICMProfiles", 
    "type": "skProc", 
    "code": "proc EnumICMProfiles*(para1: HDC; para2: ICMENUMPROC; para3: LPARAM): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"EnumICMProfilesW\".}"
  }, 
  {
    "name": "CreatePropertySheetPage", 
    "type": "skProc", 
    "code": "proc CreatePropertySheetPage*(lppsp: LPCPROPSHEETPAGE): HPROPSHEETPAGE {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"CreatePropertySheetPageW\".}"
  }, 
  {
    "name": "PropertySheet", 
    "type": "skProc", 
    "code": "proc PropertySheet*(lppsph: LPCPROPSHEETHEADER): int32 {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"PropertySheetW\".}"
  }, 
  {
    "name": "ImageList_LoadImage", 
    "type": "skProc", 
    "code": "proc ImageList_LoadImage*(hi: HINST; lpbmp: LPCWSTR; cx: int32; cGrow: int32; \u000A                          crMask: COLORREF; uType: WINUINT; uFlags: WINUINT): HIMAGELIST {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_LoadImageW\".}"
  }, 
  {
    "name": "CreateStatusWindow", 
    "type": "skProc", 
    "code": "proc CreateStatusWindow*(style: LONG; lpszText: LPCWSTR; hwndParent: HWND; \u000A                         wID: WINUINT): HWND {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"CreateStatusWindowW\".}"
  }, 
  {
    "name": "DrawStatusText", 
    "type": "skProc", 
    "code": "proc DrawStatusText*(hDC: HDC; lprc: LPRECT; pszText: LPCWSTR; uFlags: WINUINT) {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"DrawStatusTextW\".}"
  }, 
  {
    "name": "GetOpenFileName", 
    "type": "skProc", 
    "code": "proc GetOpenFileName*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetOpenFileNameW\".}"
  }, 
  {
    "name": "GetSaveFileName", 
    "type": "skProc", 
    "code": "proc GetSaveFileName*(para1: LPOPENFILENAME): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetSaveFileNameW\".}"
  }, 
  {
    "name": "GetFileTitle", 
    "type": "skProc", 
    "code": "proc GetFileTitle*(para1: LPCWSTR; para2: LPWSTR; para3: int16): int {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"GetFileTitleW\".}"
  }, 
  {
    "name": "ChooseColor", 
    "type": "skProc", 
    "code": "proc ChooseColor*(para1: LPCHOOSECOLOR): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseColorW\".}"
  }, 
  {
    "name": "ReplaceText", 
    "type": "skProc", 
    "code": "proc ReplaceText*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ReplaceTextW\".}"
  }, 
  {
    "name": "ChooseFont", 
    "type": "skProc", 
    "code": "proc ChooseFont*(para1: LPCHOOSEFONT): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"ChooseFontW\".}"
  }, 
  {
    "name": "FindText", 
    "type": "skProc", 
    "code": "proc FindText*(para1: LPFINDREPLACE): HWND {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"FindTextW\".}"
  }, 
  {
    "name": "PrintDlg", 
    "type": "skProc", 
    "code": "proc PrintDlg*(para1: LPPRINTDLG): WINBOOL {.stdcall, dynlib: \"comdlg32\", \u000A    importc: \"PrintDlgW\".}"
  }, 
  {
    "name": "PageSetupDlg", 
    "type": "skProc", 
    "code": "proc PageSetupDlg*(para1: LPPAGESETUPDLG): WINBOOL {.stdcall, \u000A    dynlib: \"comdlg32\", importc: \"PageSetupDlgW\".}"
  }, 
  {
    "name": "CreateProcess", 
    "type": "skProc", 
    "code": "proc CreateProcess*(lpApplicationName: LPCWSTR; lpCommandLine: LPWSTR; \u000A                    lpProcessAttributes: LPSECURITY_ATTRIBUTES; \u000A                    lpThreadAttributes: LPSECURITY_ATTRIBUTES; \u000A                    bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                    lpEnvironment: LPVOID; lpCurrentDirectory: LPCWSTR; \u000A                    lpStartupInfo: LPSTARTUPINFO; \u000A                    lpProcessInformation: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessW\".}"
  }, 
  {
    "name": "GetStartupInfo", 
    "type": "skProc", 
    "code": "proc GetStartupInfo*(lpStartupInfo: LPSTARTUPINFO) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStartupInfoW\".}"
  }, 
  {
    "name": "FindFirstFile", 
    "type": "skProc", 
    "code": "proc FindFirstFile*(lpFileName: LPCWSTR; lpFindFileData: LPWIN32_FIND_DATA): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileW\".}"
  }, 
  {
    "name": "FindNextFile", 
    "type": "skProc", 
    "code": "proc FindNextFile*(hFindFile: HANDLE; lpFindFileData: LPWIN32_FIND_DATA): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileW\".}"
  }, 
  {
    "name": "GetVersionEx", 
    "type": "skProc", 
    "code": "proc GetVersionEx*(VersionInformation: LPOSVERSIONINFOW): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVersionExW\".}"
  }, 
  {
    "name": "GetVersionExW", 
    "type": "skProc", 
    "code": "proc GetVersionExW*(VersionInformation: LPOSVERSIONINFOW): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVersionExW\".}"
  }, 
  {
    "name": "CreateWindow", 
    "type": "skProc", 
    "code": "proc CreateWindow*(lpClassName: LPCWSTR; lpWindowName: LPCWSTR; dwStyle: DWORD; \u000A                   X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                   hWndParent: HWND; menu: HMENU; hInstance: HINST; \u000A                   lpParam: LPVOID): HWND"
  }, 
  {
    "name": "CreateDialog", 
    "type": "skProc", 
    "code": "proc CreateDialog*(hInstance: HINST; lpName: LPCWSTR; hWndParent: HWND; \u000A                   lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "CreateDialogIndirect", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirect*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                           hWndParent: HWND; lpDialogFunc: DLGPROC): HWND"
  }, 
  {
    "name": "DialogBox", 
    "type": "skProc", 
    "code": "proc DialogBox*(hInstance: HINST; lpTemplate: LPCWSTR; hWndParent: HWND; \u000A                lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "DialogBoxIndirect", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirect*(hInstance: HINST; lpTemplate: LPCDLGTEMPLATE; \u000A                        hWndParent: HWND; lpDialogFunc: DLGPROC): int32"
  }, 
  {
    "name": "CreateDC", 
    "type": "skProc", 
    "code": "proc CreateDC*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR; para4: PDEVMODE): HDC {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDCW\".}"
  }, 
  {
    "name": "VerInstallFile", 
    "type": "skProc", 
    "code": "proc VerInstallFile*(uFlags: DWORD; szSrcFileName: LPWSTR; \u000A                     szDestFileName: LPWSTR; szSrcDir: LPWSTR; \u000A                     szDestDir: LPWSTR; szCurDir: LPWSTR; szTmpFile: LPWSTR; \u000A                     lpuTmpFileLen: PUINT): DWORD {.stdcall, dynlib: \"version\", \u000A    importc: \"VerInstallFileW\".}"
  }, 
  {
    "name": "GetFileVersionInfoSize", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSize*(lptstrFilename: LPWSTR; lpdwHandle: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeW\".}"
  }, 
  {
    "name": "GetFileVersionInfo", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfo*(lptstrFilename: LPWSTR; dwHandle: DWORD; dwLen: DWORD; \u000A                         lpData: LPVOID): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"GetFileVersionInfoW\".}"
  }, 
  {
    "name": "VerLanguageName", 
    "type": "skProc", 
    "code": "proc VerLanguageName*(wLang: DWORD; szLang: LPWSTR; nSize: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VerLanguageNameW\".}"
  }, 
  {
    "name": "VerQueryValue", 
    "type": "skProc", 
    "code": "proc VerQueryValue*(pBlock: LPVOID; lpSubBlock: LPWSTR; lplpBuffer: LPVOID; \u000A                    puLen: PUINT): WINBOOL {.stdcall, dynlib: \"version\", \u000A    importc: \"VerQueryValueW\".}"
  }, 
  {
    "name": "VerFindFile", 
    "type": "skProc", 
    "code": "proc VerFindFile*(uFlags: DWORD; szFileName: LPWSTR; szWinDir: LPWSTR; \u000A                  szAppDir: LPWSTR; szCurDir: LPWSTR; lpuCurDirLen: PUINT; \u000A                  szDestDir: LPWSTR; lpuDestDirLen: PUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileW\".}"
  }, 
  {
    "name": "RegSetValueEx", 
    "type": "skProc", 
    "code": "proc RegSetValueEx*(key: HKEY; lpValueName: LPCWSTR; Reserved: DWORD; \u000A                    dwType: DWORD; lpData: LPBYTE; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExW\".}"
  }, 
  {
    "name": "RegUnLoadKey", 
    "type": "skProc", 
    "code": "proc RegUnLoadKey*(key: HKEY; lpSubKey: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegUnLoadKeyW\".}"
  }, 
  {
    "name": "InitiateSystemShutdown", 
    "type": "skProc", 
    "code": "proc InitiateSystemShutdown*(lpMachineName: LPWSTR; lpMessage: LPWSTR; \u000A                             dwTimeout: DWORD; bForceAppsClosed: WINBOOL; \u000A                             bRebootAfterShutdown: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitiateSystemShutdownW\".}"
  }, 
  {
    "name": "AbortSystemShutdown", 
    "type": "skProc", 
    "code": "proc AbortSystemShutdown*(lpMachineName: LPWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AbortSystemShutdownW\".}"
  }, 
  {
    "name": "RegRestoreKey", 
    "type": "skProc", 
    "code": "proc RegRestoreKey*(key: HKEY; lpFile: LPCWSTR; dwFlags: DWORD): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegRestoreKeyW\".}"
  }, 
  {
    "name": "RegSaveKey", 
    "type": "skProc", 
    "code": "proc RegSaveKey*(key: HKEY; lpFile: LPCWSTR; \u000A                 lpSecurityAttributes: LPSECURITY_ATTRIBUTES): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegSaveKeyW\".}"
  }, 
  {
    "name": "RegSetValue", 
    "type": "skProc", 
    "code": "proc RegSetValue*(key: HKEY; lpSubKey: LPCWSTR; dwType: DWORD; lpData: LPCWSTR; \u000A                  cbData: DWORD): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegSetValueW\".}"
  }, 
  {
    "name": "RegQueryValue", 
    "type": "skProc", 
    "code": "proc RegQueryValue*(key: HKEY; lpSubKey: LPCWSTR; lpValue: LPWSTR; \u000A                    lpcbValue: PLONG): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueW\".}"
  }, 
  {
    "name": "RegQueryMultipleValues", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValues*(key: HKEY; val_list: PVALENT; num_vals: DWORD; \u000A                             lpValueBuf: LPWSTR; ldwTotsize: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesW\".}"
  }, 
  {
    "name": "RegQueryValueEx", 
    "type": "skProc", 
    "code": "proc RegQueryValueEx*(key: HKEY; lpValueName: LPCWSTR; lpReserved: LPDWORD; \u000A                      lpType: LPDWORD; lpData: LPBYTE; lpcbData: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryValueExW\".}"
  }, 
  {
    "name": "RegReplaceKey", 
    "type": "skProc", 
    "code": "proc RegReplaceKey*(key: HKEY; lpSubKey: LPCWSTR; lpNewFile: LPCWSTR; \u000A                    lpOldFile: LPCWSTR): LONG {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegReplaceKeyW\".}"
  }, 
  {
    "name": "RegConnectRegistry", 
    "type": "skProc", 
    "code": "proc RegConnectRegistry*(lpMachineName: LPWSTR; key: HKEY; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryW\".}"
  }, 
  {
    "name": "RegCreateKey", 
    "type": "skProc", 
    "code": "proc RegCreateKey*(key: HKEY; lpSubKey: LPCWSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyW\".}"
  }, 
  {
    "name": "RegCreateKeyEx", 
    "type": "skProc", 
    "code": "proc RegCreateKeyEx*(key: HKEY; lpSubKey: LPCWSTR; Reserved: DWORD; \u000A                     lpClass: LPWSTR; dwOptions: DWORD; samDesired: REGSAM; \u000A                     lpSecurityAttributes: LPSECURITY_ATTRIBUTES; \u000A                     phkResult: PHKEY; lpdwDisposition: LPDWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExW\".}"
  }, 
  {
    "name": "RegDeleteKey", 
    "type": "skProc", 
    "code": "proc RegDeleteKey*(key: HKEY; lpSubKey: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteKeyW\".}"
  }, 
  {
    "name": "RegDeleteValue", 
    "type": "skProc", 
    "code": "proc RegDeleteValue*(key: HKEY; lpValueName: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegDeleteValueW\".}"
  }, 
  {
    "name": "RegEnumKey", 
    "type": "skProc", 
    "code": "proc RegEnumKey*(key: HKEY; dwIndex: DWORD; lpName: LPWSTR; cbName: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyW\".}"
  }, 
  {
    "name": "RegEnumKeyEx", 
    "type": "skProc", 
    "code": "proc RegEnumKeyEx*(key: HKEY; dwIndex: DWORD; lpName: LPWSTR; lpcbName: LPDWORD; \u000A                   lpReserved: LPDWORD; lpClass: LPWSTR; lpcbClass: LPDWORD; \u000A                   lpftLastWriteTime: PFILETIME): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegEnumKeyExW\".}"
  }, 
  {
    "name": "RegEnumValue", 
    "type": "skProc", 
    "code": "proc RegEnumValue*(key: HKEY; dwIndex: DWORD; lpValueName: LPWSTR; \u000A                   lpcbValueName: LPDWORD; lpReserved: LPDWORD; lpType: LPDWORD; \u000A                   lpData: LPBYTE; lpcbData: LPDWORD): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegEnumValueW\".}"
  }, 
  {
    "name": "RegLoadKey", 
    "type": "skProc", 
    "code": "proc RegLoadKey*(key: HKEY; lpSubKey: LPCWSTR; lpFile: LPCWSTR): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegLoadKeyW\".}"
  }, 
  {
    "name": "RegOpenKey", 
    "type": "skProc", 
    "code": "proc RegOpenKey*(key: HKEY; lpSubKey: LPCWSTR; phkResult: PHKEY): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyW\".}"
  }, 
  {
    "name": "RegOpenKeyEx", 
    "type": "skProc", 
    "code": "proc RegOpenKeyEx*(key: HKEY; lpSubKey: LPCWSTR; ulOptions: DWORD; \u000A                   samDesired: REGSAM; phkResult: PHKEY): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExW\".}"
  }, 
  {
    "name": "RegQueryInfoKey", 
    "type": "skProc", 
    "code": "proc RegQueryInfoKey*(key: HKEY; lpClass: LPWSTR; lpcbClass: LPDWORD; \u000A                      lpReserved: LPDWORD; lpcSubKeys: LPDWORD; \u000A                      lpcbMaxSubKeyLen: LPDWORD; lpcbMaxClassLen: LPDWORD; \u000A                      lpcValues: LPDWORD; lpcbMaxValueNameLen: LPDWORD; \u000A                      lpcbMaxValueLen: LPDWORD; lpcbSecurityDescriptor: LPDWORD; \u000A                      lpftLastWriteTime: PFILETIME): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegQueryInfoKeyW\".}"
  }, 
  {
    "name": "CompareString", 
    "type": "skProc", 
    "code": "proc CompareString*(Locale: LCID; dwCmpFlags: DWORD; lpString1: LPCWSTR; \u000A                    cchCount1: int32; lpString2: LPCWSTR; cchCount2: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CompareStringW\".}"
  }, 
  {
    "name": "LCMapString", 
    "type": "skProc", 
    "code": "proc LCMapString*(Locale: LCID; dwMapFlags: DWORD; lpSrcStr: LPCWSTR; \u000A                  cchSrc: int32; lpDestStr: LPWSTR; cchDest: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LCMapStringW\".}"
  }, 
  {
    "name": "GetLocaleInfo", 
    "type": "skProc", 
    "code": "proc GetLocaleInfo*(Locale: LCID; LCType: LCTYPE; lpLCData: LPWSTR; \u000A                    cchData: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetLocaleInfoW\".}"
  }, 
  {
    "name": "SetLocaleInfo", 
    "type": "skProc", 
    "code": "proc SetLocaleInfo*(Locale: LCID; LCType: LCTYPE; lpLCData: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetLocaleInfoW\".}"
  }, 
  {
    "name": "GetTimeFormat", 
    "type": "skProc", 
    "code": "proc GetTimeFormat*(Locale: LCID; dwFlags: DWORD; lpTime: LPSYSTEMTIME; \u000A                    lpFormat: LPCWSTR; lpTimeStr: LPWSTR; cchTime: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTimeFormatW\".}"
  }, 
  {
    "name": "GetDateFormat", 
    "type": "skProc", 
    "code": "proc GetDateFormat*(Locale: LCID; dwFlags: DWORD; lpDate: LPSYSTEMTIME; \u000A                    lpFormat: LPCWSTR; lpDateStr: LPWSTR; cchDate: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDateFormatW\".}"
  }, 
  {
    "name": "GetNumberFormat", 
    "type": "skProc", 
    "code": "proc GetNumberFormat*(Locale: LCID; dwFlags: DWORD; lpValue: LPCWSTR; \u000A                      lpFormat: PNUMBERFMT; lpNumberStr: LPWSTR; \u000A                      cchNumber: int32): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetNumberFormatW\".}"
  }, 
  {
    "name": "GetCurrencyFormat", 
    "type": "skProc", 
    "code": "proc GetCurrencyFormat*(Locale: LCID; dwFlags: DWORD; lpValue: LPCWSTR; \u000A                        lpFormat: PCURRENCYFMT; lpCurrencyStr: LPWSTR; \u000A                        cchCurrency: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCurrencyFormatW\".}"
  }, 
  {
    "name": "EnumCalendarInfo", 
    "type": "skProc", 
    "code": "proc EnumCalendarInfo*(lpCalInfoEnumProc: CALINFO_ENUMPROC; Locale: LCID; \u000A                       Calendar: CALID; CalType: CALTYPE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EnumCalendarInfoW\".}"
  }, 
  {
    "name": "EnumTimeFormats", 
    "type": "skProc", 
    "code": "proc EnumTimeFormats*(lpTimeFmtEnumProc: TIMEFMT_ENUMPROC; Locale: LCID; \u000A                      dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumTimeFormatsW\".}"
  }, 
  {
    "name": "EnumDateFormats", 
    "type": "skProc", 
    "code": "proc EnumDateFormats*(lpDateFmtEnumProc: DATEFMT_ENUMPROC; Locale: LCID; \u000A                      dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"EnumDateFormatsW\".}"
  }, 
  {
    "name": "GetStringTypeEx", 
    "type": "skProc", 
    "code": "proc GetStringTypeEx*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCWSTR; \u000A                      cchSrc: int32; lpCharType: LPWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExW\".}"
  }, 
  {
    "name": "GetStringType", 
    "type": "skProc", 
    "code": "proc GetStringType*(dwInfoType: DWORD; lpSrcStr: LPCWSTR; cchSrc: int32; \u000A                    lpCharType: LPWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetStringTypeW\".}"
  }, 
  {
    "name": "FoldString", 
    "type": "skProc", 
    "code": "proc FoldString*(dwMapFlags: DWORD; lpSrcStr: LPCWSTR; cchSrc: int32; \u000A                 lpDestStr: LPWSTR; cchDest: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FoldStringW\".}"
  }, 
  {
    "name": "EnumSystemLocales", 
    "type": "skProc", 
    "code": "proc EnumSystemLocales*(lpLocaleEnumProc: LOCALE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemLocalesW\".}"
  }, 
  {
    "name": "EnumSystemCodePages", 
    "type": "skProc", 
    "code": "proc EnumSystemCodePages*(lpCodePageEnumProc: CODEPAGE_ENUMPROC; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EnumSystemCodePagesW\".}"
  }, 
  {
    "name": "PeekConsoleInput", 
    "type": "skProc", 
    "code": "proc PeekConsoleInput*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                       nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputW\".}"
  }, 
  {
    "name": "ReadConsoleInput", 
    "type": "skProc", 
    "code": "proc ReadConsoleInput*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                       nLength: DWORD; lpNumberOfEventsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputW\".}"
  }, 
  {
    "name": "WriteConsoleInput", 
    "type": "skProc", 
    "code": "proc WriteConsoleInput*(hConsoleInput: HANDLE; lpBuffer: PINPUTRECORD; \u000A                        nLength: DWORD; lpNumberOfEventsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputW\".}"
  }, 
  {
    "name": "ReadConsoleOutput", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutput*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                        dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                        lpReadRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputW\".}"
  }, 
  {
    "name": "WriteConsoleOutput", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutput*(hConsoleOutput: HANDLE; lpBuffer: PCHAR_INFO; \u000A                         dwBufferSize: COORD; dwBufferCoord: COORD; \u000A                         lpWriteRegion: PSMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputW\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacter*(hConsoleOutput: HANDLE; lpCharacter: LPWSTR; \u000A                                 nLength: DWORD; dwReadCoord: COORD; \u000A                                 lpNumberOfCharsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacter*(hConsoleOutput: HANDLE; lpCharacter: LPCWSTR; \u000A                                  nLength: DWORD; dwWriteCoord: COORD; \u000A                                  lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacter*(hConsoleOutput: HANDLE; cCharacter: WCHAR; \u000A                                 nLength: DWORD; dwWriteCoord: COORD; \u000A                                 lpNumberOfCharsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBuffer", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBuffer*(hConsoleOutput: HANDLE; \u000A                                lpScrollRectangle: PSMALL_RECT; \u000A                                lpClipRectangle: PSMALL_RECT; \u000A                                dwDestinationOrigin: COORD; lpFill: PCHAR_INFO): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferW\".}"
  }, 
  {
    "name": "GetConsoleTitle", 
    "type": "skProc", 
    "code": "proc GetConsoleTitle*(lpConsoleTitle: LPWSTR; nSize: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetConsoleTitleW\".}"
  }, 
  {
    "name": "SetConsoleTitle", 
    "type": "skProc", 
    "code": "proc SetConsoleTitle*(lpConsoleTitle: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleTitleW\".}"
  }, 
  {
    "name": "ReadConsole", 
    "type": "skProc", 
    "code": "proc ReadConsole*(hConsoleInput: HANDLE; lpBuffer: LPVOID; \u000A                  nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: LPDWORD; \u000A                  lpReserved: LPVOID): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleW\".}"
  }, 
  {
    "name": "WriteConsole", 
    "type": "skProc", 
    "code": "proc WriteConsole*(hConsoleOutput: HANDLE; lpBuffer: pointer; \u000A                   nNumberOfCharsToWrite: DWORD; \u000A                   lpNumberOfCharsWritten: LPDWORD; lpReserved: LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleW\".}"
  }, 
  {
    "name": "WNetAddConnection", 
    "type": "skProc", 
    "code": "proc WNetAddConnection*(lpRemoteName: LPCWSTR; lpPassword: LPCWSTR; \u000A                        lpLocalName: LPCWSTR): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetAddConnectionW\".}"
  }, 
  {
    "name": "WNetAddConnection2", 
    "type": "skProc", 
    "code": "proc WNetAddConnection2*(lpNetResource: LPNETRESOURCE; lpPassword: LPCWSTR; \u000A                         lpUserName: LPCWSTR; dwFlags: DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetAddConnection2W\".}"
  }, 
  {
    "name": "WNetAddConnection3", 
    "type": "skProc", 
    "code": "proc WNetAddConnection3*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                         lpPassword: LPCWSTR; lpUserName: LPCWSTR; \u000A                         dwFlags: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetAddConnection3W\".}"
  }, 
  {
    "name": "WNetCancelConnection", 
    "type": "skProc", 
    "code": "proc WNetCancelConnection*(lpName: LPCWSTR; fForce: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetCancelConnectionW\".}"
  }, 
  {
    "name": "WNetCancelConnection2", 
    "type": "skProc", 
    "code": "proc WNetCancelConnection2*(lpName: LPCWSTR; dwFlags: DWORD; fForce: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetCancelConnection2W\".}"
  }, 
  {
    "name": "WNetGetConnection", 
    "type": "skProc", 
    "code": "proc WNetGetConnection*(lpLocalName: LPCWSTR; lpRemoteName: LPWSTR; \u000A                        lpnLength: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionW\".}"
  }, 
  {
    "name": "WNetUseConnection", 
    "type": "skProc", 
    "code": "proc WNetUseConnection*(hwndOwner: HWND; lpNetResource: LPNETRESOURCE; \u000A                        lpUserID: LPCWSTR; lpPassword: LPCWSTR; dwFlags: DWORD; \u000A                        lpAccessName: LPWSTR; lpBufferSize: LPDWORD; \u000A                        lpResult: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetUseConnectionW\".}"
  }, 
  {
    "name": "WNetSetConnection", 
    "type": "skProc", 
    "code": "proc WNetSetConnection*(lpName: LPCWSTR; dwProperties: DWORD; pvValues: LPVOID): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetSetConnectionW\".}"
  }, 
  {
    "name": "WNetConnectionDialog1", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog1*(lpConnDlgStruct: LPCONNECTDLGSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetConnectionDialog1W\".}"
  }, 
  {
    "name": "WNetDisconnectDialog1", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog1*(lpConnDlgStruct: LPDISCDLGSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetDisconnectDialog1W\".}"
  }, 
  {
    "name": "WNetOpenEnum", 
    "type": "skProc", 
    "code": "proc WNetOpenEnum*(dwScope: DWORD; dwType: DWORD; dwUsage: DWORD; \u000A                   lpNetResource: LPNETRESOURCE; lphEnum: LPHANDLE): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetOpenEnumW\".}"
  }, 
  {
    "name": "WNetEnumResource", 
    "type": "skProc", 
    "code": "proc WNetEnumResource*(hEnum: HANDLE; lpcCount: LPDWORD; lpBuffer: LPVOID; \u000A                       lpBufferSize: LPDWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetEnumResourceW\".}"
  }, 
  {
    "name": "WNetGetUniversalName", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalName*(lpLocalPath: LPCWSTR; dwInfoLevel: DWORD; \u000A                           lpBuffer: LPVOID; lpBufferSize: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameW\".}"
  }, 
  {
    "name": "WNetGetUser", 
    "type": "skProc", 
    "code": "proc WNetGetUser*(lpName: LPCWSTR; lpUserName: LPWSTR; lpnLength: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserW\".}"
  }, 
  {
    "name": "WNetGetProviderName", 
    "type": "skProc", 
    "code": "proc WNetGetProviderName*(dwNetType: DWORD; lpProviderName: LPWSTR; \u000A                          lpBufferSize: LPDWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameW\".}"
  }, 
  {
    "name": "WNetGetNetworkInformation", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformation*(lpProvider: LPCWSTR; \u000A                                lpNetInfoStruct: LPNETINFOSTRUCT): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationW\".}"
  }, 
  {
    "name": "WNetGetLastError", 
    "type": "skProc", 
    "code": "proc WNetGetLastError*(lpError: LPDWORD; lpErrorBuf: LPWSTR; \u000A                       nErrorBufSize: DWORD; lpNameBuf: LPWSTR; \u000A                       nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorW\".}"
  }, 
  {
    "name": "MultinetGetConnectionPerformance", 
    "type": "skProc", 
    "code": "proc MultinetGetConnectionPerformance*(lpNetResource: LPNETRESOURCE; \u000A    lpNetConnectInfoStruct: LPNETCONNECTINFOSTRUCT): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"MultinetGetConnectionPerformanceW\".}"
  }, 
  {
    "name": "ChangeServiceConfig", 
    "type": "skProc", 
    "code": "proc ChangeServiceConfig*(hService: SC_HANDLE; dwServiceType: DWORD; \u000A                          dwStartType: DWORD; dwErrorControl: DWORD; \u000A                          lpBinaryPathName: LPCWSTR; lpLoadOrderGroup: LPCWSTR; \u000A                          lpdwTagId: LPDWORD; lpDependencies: LPCWSTR; \u000A                          lpServiceStartName: LPCWSTR; lpPassword: LPCWSTR; \u000A                          lpDisplayName: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ChangeServiceConfigW\".}"
  }, 
  {
    "name": "CreateService", 
    "type": "skProc", 
    "code": "proc CreateService*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                    lpDisplayName: LPCWSTR; dwDesiredAccess: DWORD; \u000A                    dwServiceType: DWORD; dwStartType: DWORD; \u000A                    dwErrorControl: DWORD; lpBinaryPathName: LPCWSTR; \u000A                    lpLoadOrderGroup: LPCWSTR; lpdwTagId: LPDWORD; \u000A                    lpDependencies: LPCWSTR; lpServiceStartName: LPCWSTR; \u000A                    lpPassword: LPCWSTR): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"CreateServiceW\".}"
  }, 
  {
    "name": "EnumDependentServices", 
    "type": "skProc", 
    "code": "proc EnumDependentServices*(hService: SC_HANDLE; dwServiceState: DWORD; \u000A                            lpServices: LPENUM_SERVICE_STATUS; cbBufSize: DWORD; \u000A                            pcbBytesNeeded: LPDWORD; lpServicesReturned: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"EnumDependentServicesW\".}"
  }, 
  {
    "name": "EnumServicesStatus", 
    "type": "skProc", 
    "code": "proc EnumServicesStatus*(hSCManager: SC_HANDLE; dwServiceType: DWORD; \u000A                         dwServiceState: DWORD; \u000A                         lpServices: LPENUM_SERVICE_STATUS; cbBufSize: DWORD; \u000A                         pcbBytesNeeded: LPDWORD; lpServicesReturned: LPDWORD; \u000A                         lpResumeHandle: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EnumServicesStatusW\".}"
  }, 
  {
    "name": "GetServiceKeyName", 
    "type": "skProc", 
    "code": "proc GetServiceKeyName*(hSCManager: SC_HANDLE; lpDisplayName: LPCWSTR; \u000A                        lpServiceName: LPWSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceKeyNameW\".}"
  }, 
  {
    "name": "GetServiceDisplayName", 
    "type": "skProc", 
    "code": "proc GetServiceDisplayName*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                            lpDisplayName: LPWSTR; lpcchBuffer: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetServiceDisplayNameW\".}"
  }, 
  {
    "name": "OpenSCManager", 
    "type": "skProc", 
    "code": "proc OpenSCManager*(lpMachineName: LPCWSTR; lpDatabaseName: LPCWSTR; \u000A                    dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenSCManagerW\".}"
  }, 
  {
    "name": "OpenService", 
    "type": "skProc", 
    "code": "proc OpenService*(hSCManager: SC_HANDLE; lpServiceName: LPCWSTR; \u000A                  dwDesiredAccess: DWORD): SC_HANDLE {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenServiceW\".}"
  }, 
  {
    "name": "QueryServiceConfig", 
    "type": "skProc", 
    "code": "proc QueryServiceConfig*(hService: SC_HANDLE; \u000A                         lpServiceConfig: LPQUERY_SERVICE_CONFIG; \u000A                         cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceConfigW\".}"
  }, 
  {
    "name": "QueryServiceLockStatus", 
    "type": "skProc", 
    "code": "proc QueryServiceLockStatus*(hSCManager: SC_HANDLE; \u000A                             lpLockStatus: LPQUERY_SERVICE_LOCK_STATUS; \u000A                             cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceLockStatusW\".}"
  }, 
  {
    "name": "RegisterServiceCtrlHandler", 
    "type": "skProc", 
    "code": "proc RegisterServiceCtrlHandler*(lpServiceName: LPCWSTR; \u000A                                 lpHandlerProc: LPHANDLER_FUNCTION): SERVICE_STATUS_HANDLE {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegisterServiceCtrlHandlerW\".}"
  }, 
  {
    "name": "StartServiceCtrlDispatcher", 
    "type": "skProc", 
    "code": "proc StartServiceCtrlDispatcher*(lpServiceStartTable: LPSERVICE_TABLE_ENTRY): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"StartServiceCtrlDispatcherW\".}"
  }, 
  {
    "name": "StartService", 
    "type": "skProc", 
    "code": "proc StartService*(hService: SC_HANDLE; dwNumServiceArgs: DWORD; \u000A                   lpServiceArgVectors: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"StartServiceW\".}"
  }, 
  {
    "name": "DragQueryFile", 
    "type": "skProc", 
    "code": "proc DragQueryFile*(para1: HDROP; para2: int; para3: LPCWSTR; para4: int): int {.\u000A    stdcall, dynlib: \"shell32\", importc: \"DragQueryFileW\".}"
  }, 
  {
    "name": "ExtractAssociatedIcon", 
    "type": "skProc", 
    "code": "proc ExtractAssociatedIcon*(para1: HINST; para2: LPCWSTR; para3: LPWORD): HICON {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ExtractAssociatedIconW\".}"
  }, 
  {
    "name": "ExtractIcon", 
    "type": "skProc", 
    "code": "proc ExtractIcon*(para1: HINST; para2: LPCWSTR; para3: int): HICON {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ExtractIconW\".}"
  }, 
  {
    "name": "FindExecutable", 
    "type": "skProc", 
    "code": "proc FindExecutable*(para1: LPCWSTR; para2: LPCWSTR; para3: LPCWSTR): HINST {.\u000A    stdcall, dynlib: \"shell32\", importc: \"FindExecutableW\".}"
  }, 
  {
    "name": "ShellAbout", 
    "type": "skProc", 
    "code": "proc ShellAbout*(para1: HWND; para2: LPCWSTR; para3: LPCWSTR; para4: HICON): int32 {.\u000A    stdcall, dynlib: \"shell32\", importc: \"ShellAboutW\".}"
  }, 
  {
    "name": "ShellExecute", 
    "type": "skProc", 
    "code": "proc ShellExecute*(para1: HWND; para2: LPCWSTR; para3: LPCWSTR; para4: LPCWSTR; \u000A                   para5: LPCWSTR; para6: int32): HINST {.stdcall, \u000A    dynlib: \"shell32\", importc: \"ShellExecuteW\".}"
  }, 
  {
    "name": "Shell_NotifyIcon", 
    "type": "skProc", 
    "code": "proc Shell_NotifyIcon*(dwMessage: DWORD; lpData: PNotifyIconDataA): WINBOOL {.\u000A    stdcall, dynlib: \"shell32\", importc: \"Shell_NotifyIconW\".}"
  }, 
  {
    "name": "DdeCreateStringHandle", 
    "type": "skProc", 
    "code": "proc DdeCreateStringHandle*(para1: DWORD; para2: LPCWSTR; para3: int32): HSZ {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeCreateStringHandleW\".}"
  }, 
  {
    "name": "DdeInitialize", 
    "type": "skProc", 
    "code": "proc DdeInitialize*(para1: LPDWORD; para2: PFNCALLBACK; para3: DWORD; \u000A                    para4: DWORD): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeInitializeW\".}"
  }, 
  {
    "name": "DdeQueryString", 
    "type": "skProc", 
    "code": "proc DdeQueryString*(para1: DWORD; para2: HSZ; para3: LPCWSTR; para4: DWORD; \u000A                     para5: int32): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeQueryStringW\".}"
  }, 
  {
    "name": "LogonUser", 
    "type": "skProc", 
    "code": "proc LogonUser*(para1: LPWSTR; para2: LPWSTR; para3: LPWSTR; para4: DWORD; \u000A                para5: DWORD; para6: PHANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LogonUserW\".}"
  }, 
  {
    "name": "CreateProcessAsUser", 
    "type": "skProc", 
    "code": "proc CreateProcessAsUser*(para1: HANDLE; para2: LPCWSTR; para3: LPWSTR; \u000A                          para4: LPSECURITY_ATTRIBUTES; \u000A                          para5: LPSECURITY_ATTRIBUTES; para6: WINBOOL; \u000A                          para7: DWORD; para8: LPVOID; para9: LPCWSTR; \u000A                          para10: LPSTARTUPINFO; para11: LPPROCESS_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"CreateProcessAsUserW\".}"
  }, 
  {
    "name": "GetRandomRgn", 
    "type": "skProc", 
    "code": "proc GetRandomRgn*(aHDC: HDC; aHRGN: HRGN; iNum: WINT): WINT {.stdcall, importc, \u000A    dynlib: \"gdi32\".}"
  }, 
  {
    "name": "AccessCheck", 
    "type": "skProc", 
    "code": "proc AccessCheck*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                  ClientToken: HANDLE; DesiredAccess: DWORD; \u000A                  GenericMapping: PGENERIC_MAPPING; \u000A                  PrivilegeSet: PPRIVILEGE_SET; PrivilegeSetLength: LPDWORD; \u000A                  GrantedAccess: LPDWORD; AccessStatus: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AccessCheck\".}"
  }, 
  {
    "name": "FreeResource", 
    "type": "skProc", 
    "code": "proc FreeResource*(hResData: HGLOBAL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FreeResource\".}"
  }, 
  {
    "name": "LockResource", 
    "type": "skProc", 
    "code": "proc LockResource*(hResData: HGLOBAL): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LockResource\".}"
  }, 
  {
    "name": "FreeLibrary", 
    "type": "skProc", 
    "code": "proc FreeLibrary*(hLibModule: HINST): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FreeLibrary\".}"
  }, 
  {
    "name": "FreeLibraryAndExitThread", 
    "type": "skProc", 
    "code": "proc FreeLibraryAndExitThread*(hLibModule: HMODULE; dwExitCode: DWORD) {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FreeLibraryAndExitThread\".}"
  }, 
  {
    "name": "DisableThreadLibraryCalls", 
    "type": "skProc", 
    "code": "proc DisableThreadLibraryCalls*(hLibModule: HMODULE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DisableThreadLibraryCalls\".}"
  }, 
  {
    "name": "GetProcAddress", 
    "type": "skProc", 
    "code": "proc GetProcAddress*(hModule: HINST; lpProcName: LPCSTR): FARPROC {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProcAddress\".}"
  }, 
  {
    "name": "GetVersion", 
    "type": "skProc", 
    "code": "proc GetVersion*(): DWORD {.stdcall, dynlib: \"kernel32\", importc: \"GetVersion\".}"
  }, 
  {
    "name": "GlobalAlloc", 
    "type": "skProc", 
    "code": "proc GlobalAlloc*(uFlags: int32; dwBytes: DWORD): HGLOBAL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GlobalAlloc\".}"
  }, 
  {
    "name": "GlobalReAlloc", 
    "type": "skProc", 
    "code": "proc GlobalReAlloc*(hMem: HGLOBAL; dwBytes: DWORD; uFlags: int32): HGLOBAL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GlobalReAlloc\".}"
  }, 
  {
    "name": "GlobalSize", 
    "type": "skProc", 
    "code": "proc GlobalSize*(hMem: HGLOBAL): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalSize\".}"
  }, 
  {
    "name": "GlobalFlags", 
    "type": "skProc", 
    "code": "proc GlobalFlags*(hMem: HGLOBAL): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalFlags\".}"
  }, 
  {
    "name": "GlobalLock", 
    "type": "skProc", 
    "code": "proc GlobalLock*(hMem: HGLOBAL): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalLock\".}"
  }, 
  {
    "name": "GlobalHandle", 
    "type": "skProc", 
    "code": "proc GlobalHandle*(pMem: LPCVOID): HGLOBAL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalHandle\".}"
  }, 
  {
    "name": "GlobalUnlock", 
    "type": "skProc", 
    "code": "proc GlobalUnlock*(hMem: HGLOBAL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalUnlock\".}"
  }, 
  {
    "name": "GlobalFree", 
    "type": "skProc", 
    "code": "proc GlobalFree*(hMem: HGLOBAL): HGLOBAL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalFree\".}"
  }, 
  {
    "name": "GlobalCompact", 
    "type": "skProc", 
    "code": "proc GlobalCompact*(dwMinFree: DWORD): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalCompact\".}"
  }, 
  {
    "name": "GlobalFix", 
    "type": "skProc", 
    "code": "proc GlobalFix*(hMem: HGLOBAL) {.stdcall, dynlib: \"kernel32\", \u000A                                 importc: \"GlobalFix\".}"
  }, 
  {
    "name": "GlobalUnfix", 
    "type": "skProc", 
    "code": "proc GlobalUnfix*(hMem: HGLOBAL) {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"GlobalUnfix\".}"
  }, 
  {
    "name": "GlobalWire", 
    "type": "skProc", 
    "code": "proc GlobalWire*(hMem: HGLOBAL): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalWire\".}"
  }, 
  {
    "name": "GlobalUnWire", 
    "type": "skProc", 
    "code": "proc GlobalUnWire*(hMem: HGLOBAL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalUnWire\".}"
  }, 
  {
    "name": "GlobalMemoryStatus", 
    "type": "skProc", 
    "code": "proc GlobalMemoryStatus*(lpBuffer: LPMEMORYSTATUS) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GlobalMemoryStatus\".}"
  }, 
  {
    "name": "LocalAlloc", 
    "type": "skProc", 
    "code": "proc LocalAlloc*(uFlags: WINUINT; uBytes: WINUINT): HLOCAL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LocalAlloc\".}"
  }, 
  {
    "name": "LocalReAlloc", 
    "type": "skProc", 
    "code": "proc LocalReAlloc*(hMem: HLOCAL; uBytes: WINUINT; uFlags: WINUINT): HLOCAL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LocalReAlloc\".}"
  }, 
  {
    "name": "LocalLock", 
    "type": "skProc", 
    "code": "proc LocalLock*(hMem: HLOCAL): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A                                        importc: \"LocalLock\".}"
  }, 
  {
    "name": "LocalHandle", 
    "type": "skProc", 
    "code": "proc LocalHandle*(pMem: LPCVOID): HLOCAL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LocalHandle\".}"
  }, 
  {
    "name": "LocalUnlock", 
    "type": "skProc", 
    "code": "proc LocalUnlock*(hMem: HLOCAL): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LocalUnlock\".}"
  }, 
  {
    "name": "LocalSize", 
    "type": "skProc", 
    "code": "proc LocalSize*(hMem: HLOCAL): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LocalSize\".}"
  }, 
  {
    "name": "LocalFlags", 
    "type": "skProc", 
    "code": "proc LocalFlags*(hMem: HLOCAL): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LocalFlags\".}"
  }, 
  {
    "name": "LocalFree", 
    "type": "skProc", 
    "code": "proc LocalFree*(hMem: HLOCAL): HLOCAL {.stdcall, dynlib: \"kernel32\", \u000A                                        importc: \"LocalFree\".}"
  }, 
  {
    "name": "LocalShrink", 
    "type": "skProc", 
    "code": "proc LocalShrink*(hMem: HLOCAL; cbNewSize: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LocalShrink\".}"
  }, 
  {
    "name": "LocalCompact", 
    "type": "skProc", 
    "code": "proc LocalCompact*(uMinFree: WINUINT): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"LocalCompact\".}"
  }, 
  {
    "name": "FlushInstructionCache", 
    "type": "skProc", 
    "code": "proc FlushInstructionCache*(hProcess: HANDLE; lpBaseAddress: LPCVOID; \u000A                            dwSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FlushInstructionCache\".}"
  }, 
  {
    "name": "VirtualAlloc", 
    "type": "skProc", 
    "code": "proc VirtualAlloc*(lpAddress: LPVOID; dwSize: DWORD; flAllocationType: DWORD; \u000A                   flProtect: DWORD): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"VirtualAlloc\".}"
  }, 
  {
    "name": "VirtualFree", 
    "type": "skProc", 
    "code": "proc VirtualFree*(lpAddress: LPVOID; dwSize: DWORD; dwFreeType: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VirtualFree\".}"
  }, 
  {
    "name": "VirtualProtect", 
    "type": "skProc", 
    "code": "proc VirtualProtect*(lpAddress: LPVOID; dwSize: DWORD; flNewProtect: DWORD; \u000A                     lpflOldProtect: PDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"VirtualProtect\".}"
  }, 
  {
    "name": "VirtualQuery", 
    "type": "skProc", 
    "code": "proc VirtualQuery*(lpAddress: LPCVOID; lpBuffer: PMEMORY_BASIC_INFORMATION; \u000A                   dwLength: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"VirtualQuery\".}"
  }, 
  {
    "name": "VirtualProtectEx", 
    "type": "skProc", 
    "code": "proc VirtualProtectEx*(hProcess: HANDLE; lpAddress: LPVOID; dwSize: DWORD; \u000A                       flNewProtect: DWORD; lpflOldProtect: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VirtualProtectEx\".}"
  }, 
  {
    "name": "VirtualQueryEx", 
    "type": "skProc", 
    "code": "proc VirtualQueryEx*(hProcess: HANDLE; lpAddress: LPCVOID; \u000A                     lpBuffer: PMEMORY_BASIC_INFORMATION; dwLength: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VirtualQueryEx\".}"
  }, 
  {
    "name": "HeapCreate", 
    "type": "skProc", 
    "code": "proc HeapCreate*(flOptions: DWORD; dwInitialSize: DWORD; dwMaximumSize: DWORD): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"HeapCreate\".}"
  }, 
  {
    "name": "HeapDestroy", 
    "type": "skProc", 
    "code": "proc HeapDestroy*(hHeap: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"HeapDestroy\".}"
  }, 
  {
    "name": "HeapAlloc", 
    "type": "skProc", 
    "code": "proc HeapAlloc*(hHeap: HANDLE; dwFlags: DWORD; dwBytes: DWORD): LPVOID {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"HeapAlloc\".}"
  }, 
  {
    "name": "HeapReAlloc", 
    "type": "skProc", 
    "code": "proc HeapReAlloc*(hHeap: HANDLE; dwFlags: DWORD; lpMem: LPVOID; dwBytes: DWORD): LPVOID {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"HeapReAlloc\".}"
  }, 
  {
    "name": "HeapFree", 
    "type": "skProc", 
    "code": "proc HeapFree*(hHeap: HANDLE; dwFlags: DWORD; lpMem: LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"HeapFree\".}"
  }, 
  {
    "name": "HeapSize", 
    "type": "skProc", 
    "code": "proc HeapSize*(hHeap: HANDLE; dwFlags: DWORD; lpMem: LPCVOID): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"HeapSize\".}"
  }, 
  {
    "name": "HeapValidate", 
    "type": "skProc", 
    "code": "proc HeapValidate*(hHeap: HANDLE; dwFlags: DWORD; lpMem: LPCVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"HeapValidate\".}"
  }, 
  {
    "name": "HeapCompact", 
    "type": "skProc", 
    "code": "proc HeapCompact*(hHeap: HANDLE; dwFlags: DWORD): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"HeapCompact\".}"
  }, 
  {
    "name": "GetProcessHeap", 
    "type": "skProc", 
    "code": "proc GetProcessHeap*(): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A                                 importc: \"GetProcessHeap\".}"
  }, 
  {
    "name": "GetProcessHeaps", 
    "type": "skProc", 
    "code": "proc GetProcessHeaps*(NumberOfHeaps: DWORD; ProcessHeaps: PHANDLE): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessHeaps\".}"
  }, 
  {
    "name": "HeapLock", 
    "type": "skProc", 
    "code": "proc HeapLock*(hHeap: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"HeapLock\".}"
  }, 
  {
    "name": "HeapUnlock", 
    "type": "skProc", 
    "code": "proc HeapUnlock*(hHeap: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"HeapUnlock\".}"
  }, 
  {
    "name": "HeapWalk", 
    "type": "skProc", 
    "code": "proc HeapWalk*(hHeap: HANDLE; lpEntry: LPPROCESS_HEAP_ENTRY): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"HeapWalk\".}"
  }, 
  {
    "name": "GetProcessAffinityMask", 
    "type": "skProc", 
    "code": "proc GetProcessAffinityMask*(hProcess: HANDLE; lpProcessAffinityMask: LPDWORD; \u000A                             lpSystemAffinityMask: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProcessAffinityMask\".}"
  }, 
  {
    "name": "GetProcessTimes", 
    "type": "skProc", 
    "code": "proc GetProcessTimes*(hProcess: HANDLE; lpCreationTime: LPFILETIME; \u000A                      lpExitTime: LPFILETIME; lpKernelTime: LPFILETIME; \u000A                      lpUserTime: LPFILETIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProcessTimes\".}"
  }, 
  {
    "name": "GetProcessWorkingSetSize", 
    "type": "skProc", 
    "code": "proc GetProcessWorkingSetSize*(hProcess: HANDLE; \u000A                               lpMinimumWorkingSetSize: LPDWORD; \u000A                               lpMaximumWorkingSetSize: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessWorkingSetSize\".}"
  }, 
  {
    "name": "SetProcessWorkingSetSize", 
    "type": "skProc", 
    "code": "proc SetProcessWorkingSetSize*(hProcess: HANDLE; dwMinimumWorkingSetSize: DWORD; \u000A                               dwMaximumWorkingSetSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetProcessWorkingSetSize\".}"
  }, 
  {
    "name": "OpenProcess", 
    "type": "skProc", 
    "code": "proc OpenProcess*(dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                  dwProcessId: DWORD): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"OpenProcess\".}"
  }, 
  {
    "name": "GetCurrentProcess", 
    "type": "skProc", 
    "code": "proc GetCurrentProcess*(): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A                                    importc: \"GetCurrentProcess\".}"
  }, 
  {
    "name": "GetCurrentProcessId", 
    "type": "skProc", 
    "code": "proc GetCurrentProcessId*(): DWORD {.stdcall, dynlib: \"kernel32\", \u000A                                     importc: \"GetCurrentProcessId\".}"
  }, 
  {
    "name": "ExitProcess", 
    "type": "skProc", 
    "code": "proc ExitProcess*(uExitCode: WINUINT) {.stdcall, dynlib: \"kernel32\", \u000A                                        importc: \"ExitProcess\".}"
  }, 
  {
    "name": "TerminateProcess", 
    "type": "skProc", 
    "code": "proc TerminateProcess*(hProcess: HANDLE; uExitCode: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TerminateProcess\".}"
  }, 
  {
    "name": "SetProcessAffinityMask", 
    "type": "skProc", 
    "code": "proc SetProcessAffinityMask*(hProcess: THandle; dwProcessAffinityMask: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetProcessAffinityMask\".}"
  }, 
  {
    "name": "GetExitCodeProcess", 
    "type": "skProc", 
    "code": "proc GetExitCodeProcess*(hProcess: HANDLE; lpExitCode: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetExitCodeProcess\".}"
  }, 
  {
    "name": "FatalExit", 
    "type": "skProc", 
    "code": "proc FatalExit*(ExitCode: int32) {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"FatalExit\".}"
  }, 
  {
    "name": "RaiseException", 
    "type": "skProc", 
    "code": "proc RaiseException*(dwExceptionCode: DWORD; dwExceptionFlags: DWORD; \u000A                     nNumberOfArguments: DWORD; lpArguments: LPDWORD) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"RaiseException\".}"
  }, 
  {
    "name": "UnhandledExceptionFilter", 
    "type": "skProc", 
    "code": "proc UnhandledExceptionFilter*(ExceptionInfo: lpemptyrecord): LONG {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"UnhandledExceptionFilter\".}"
  }, 
  {
    "name": "CreateRemoteThread", 
    "type": "skProc", 
    "code": "proc CreateRemoteThread*(hProcess: HANDLE; \u000A                         lpThreadAttributes: LPSECURITY_ATTRIBUTES; \u000A                         dwStackSize: DWORD; \u000A                         lpStartAddress: LPTHREAD_START_ROUTINE; \u000A                         lpParameter: LPVOID; dwCreationFlags: DWORD; \u000A                         lpThreadId: LPDWORD): HANDLE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"CreateRemoteThread\".}"
  }, 
  {
    "name": "GetCurrentThread", 
    "type": "skProc", 
    "code": "proc GetCurrentThread*(): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"GetCurrentThread\".}"
  }, 
  {
    "name": "GetCurrentThreadId", 
    "type": "skProc", 
    "code": "proc GetCurrentThreadId*(): DWORD {.stdcall, dynlib: \"kernel32\", \u000A                                    importc: \"GetCurrentThreadId\".}"
  }, 
  {
    "name": "SetThreadAffinityMask", 
    "type": "skProc", 
    "code": "proc SetThreadAffinityMask*(hThread: HANDLE; dwThreadAffinityMask: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetThreadAffinityMask\".}"
  }, 
  {
    "name": "SetThreadPriority", 
    "type": "skProc", 
    "code": "proc SetThreadPriority*(hThread: HANDLE; nPriority: int32): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetThreadPriority\".}"
  }, 
  {
    "name": "GetThreadPriority", 
    "type": "skProc", 
    "code": "proc GetThreadPriority*(hThread: HANDLE): int32 {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetThreadPriority\".}"
  }, 
  {
    "name": "GetThreadTimes", 
    "type": "skProc", 
    "code": "proc GetThreadTimes*(hThread: HANDLE; lpCreationTime: LPFILETIME; \u000A                     lpExitTime: LPFILETIME; lpKernelTime: LPFILETIME; \u000A                     lpUserTime: LPFILETIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetThreadTimes\".}"
  }, 
  {
    "name": "ExitThread", 
    "type": "skProc", 
    "code": "proc ExitThread*(dwExitCode: DWORD) {.stdcall, dynlib: \"kernel32\", \u000A                                      importc: \"ExitThread\".}"
  }, 
  {
    "name": "TerminateThread", 
    "type": "skProc", 
    "code": "proc TerminateThread*(hThread: HANDLE; dwExitCode: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TerminateThread\".}"
  }, 
  {
    "name": "GetExitCodeThread", 
    "type": "skProc", 
    "code": "proc GetExitCodeThread*(hThread: HANDLE; lpExitCode: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetExitCodeThread\".}"
  }, 
  {
    "name": "GetThreadSelectorEntry", 
    "type": "skProc", 
    "code": "proc GetThreadSelectorEntry*(hThread: HANDLE; dwSelector: DWORD; \u000A                             lpSelectorEntry: LPLDT_ENTRY): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetThreadSelectorEntry\".}"
  }, 
  {
    "name": "GetLastError", 
    "type": "skProc", 
    "code": "proc GetLastError*(): DWORD {.stdcall, dynlib: \"kernel32\", \u000A                              importc: \"GetLastError\".}"
  }, 
  {
    "name": "SetLastError", 
    "type": "skProc", 
    "code": "proc SetLastError*(dwErrCode: DWORD) {.stdcall, dynlib: \"kernel32\", \u000A                                       importc: \"SetLastError\".}"
  }, 
  {
    "name": "CreateIoCompletionPort", 
    "type": "skProc", 
    "code": "proc CreateIoCompletionPort*(FileHandle: HANDLE; ExistingCompletionPort: HANDLE; \u000A                             CompletionKey: DWORD; \u000A                             NumberOfConcurrentThreads: DWORD): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateIoCompletionPort\".}"
  }, 
  {
    "name": "SetErrorMode", 
    "type": "skProc", 
    "code": "proc SetErrorMode*(uMode: WINUINT): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetErrorMode\".}"
  }, 
  {
    "name": "ReadProcessMemory", 
    "type": "skProc", 
    "code": "proc ReadProcessMemory*(hProcess: HANDLE; lpBaseAddress: LPCVOID; \u000A                        lpBuffer: LPVOID; nSize: DWORD; \u000A                        lpNumberOfBytesRead: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadProcessMemory\".}"
  }, 
  {
    "name": "WriteProcessMemory", 
    "type": "skProc", 
    "code": "proc WriteProcessMemory*(hProcess: HANDLE; lpBaseAddress: LPVOID; \u000A                         lpBuffer: LPVOID; nSize: DWORD; \u000A                         lpNumberOfBytesWritten: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteProcessMemory\".}"
  }, 
  {
    "name": "GetThreadContext", 
    "type": "skProc", 
    "code": "proc GetThreadContext*(hThread: HANDLE; lpContext: LPCONTEXT): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetThreadContext\".}"
  }, 
  {
    "name": "SuspendThread", 
    "type": "skProc", 
    "code": "proc SuspendThread*(hThread: HANDLE): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SuspendThread\".}"
  }, 
  {
    "name": "ResumeThread", 
    "type": "skProc", 
    "code": "proc ResumeThread*(hThread: HANDLE): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ResumeThread\".}"
  }, 
  {
    "name": "DebugBreak", 
    "type": "skProc", 
    "code": "proc DebugBreak*() {.stdcall, dynlib: \"kernel32\", importc: \"DebugBreak\".}"
  }, 
  {
    "name": "WaitForDebugEvent", 
    "type": "skProc", 
    "code": "proc WaitForDebugEvent*(lpDebugEvent: LPDEBUG_EVENT; dwMilliseconds: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitForDebugEvent\".}"
  }, 
  {
    "name": "ContinueDebugEvent", 
    "type": "skProc", 
    "code": "proc ContinueDebugEvent*(dwProcessId: DWORD; dwThreadId: DWORD; \u000A                         dwContinueStatus: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ContinueDebugEvent\".}"
  }, 
  {
    "name": "DebugActiveProcess", 
    "type": "skProc", 
    "code": "proc DebugActiveProcess*(dwProcessId: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DebugActiveProcess\".}"
  }, 
  {
    "name": "InitializeCriticalSection", 
    "type": "skProc", 
    "code": "proc InitializeCriticalSection*(lpCriticalSection: LPCRITICAL_SECTION) {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"InitializeCriticalSection\".}"
  }, 
  {
    "name": "EnterCriticalSection", 
    "type": "skProc", 
    "code": "proc EnterCriticalSection*(lpCriticalSection: LPCRITICAL_SECTION) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EnterCriticalSection\".}"
  }, 
  {
    "name": "LeaveCriticalSection", 
    "type": "skProc", 
    "code": "proc LeaveCriticalSection*(lpCriticalSection: LPCRITICAL_SECTION) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LeaveCriticalSection\".}"
  }, 
  {
    "name": "DeleteCriticalSection", 
    "type": "skProc", 
    "code": "proc DeleteCriticalSection*(lpCriticalSection: LPCRITICAL_SECTION) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DeleteCriticalSection\".}"
  }, 
  {
    "name": "TryEnterCriticalSection", 
    "type": "skProc", 
    "code": "proc TryEnterCriticalSection*(lpCriticalSection: LPCRITICAL_SECTION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"TryEnterCriticalSection\".}"
  }, 
  {
    "name": "SetEvent", 
    "type": "skProc", 
    "code": "proc SetEvent*(hEvent: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetEvent\".}"
  }, 
  {
    "name": "ResetEvent", 
    "type": "skProc", 
    "code": "proc ResetEvent*(hEvent: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ResetEvent\".}"
  }, 
  {
    "name": "PulseEvent", 
    "type": "skProc", 
    "code": "proc PulseEvent*(hEvent: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"PulseEvent\".}"
  }, 
  {
    "name": "ReleaseSemaphore", 
    "type": "skProc", 
    "code": "proc ReleaseSemaphore*(hSemaphore: HANDLE; lReleaseCount: LONG; \u000A                       lpPreviousCount: LPLONG): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReleaseSemaphore\".}"
  }, 
  {
    "name": "ReleaseMutex", 
    "type": "skProc", 
    "code": "proc ReleaseMutex*(hMutex: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReleaseMutex\".}"
  }, 
  {
    "name": "WaitForSingleObject", 
    "type": "skProc", 
    "code": "proc WaitForSingleObject*(hHandle: HANDLE; dwMilliseconds: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitForSingleObject\".}"
  }, 
  {
    "name": "Sleep", 
    "type": "skProc", 
    "code": "proc Sleep*(dwMilliseconds: DWORD) {.stdcall, dynlib: \"kernel32\", \u000A                                     importc: \"Sleep\".}"
  }, 
  {
    "name": "LoadResource", 
    "type": "skProc", 
    "code": "proc LoadResource*(hModule: HINST; hResInfo: HRSRC): HGLOBAL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LoadResource\".}"
  }, 
  {
    "name": "SizeofResource", 
    "type": "skProc", 
    "code": "proc SizeofResource*(hModule: HINST; hResInfo: HRSRC): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SizeofResource\".}"
  }, 
  {
    "name": "GlobalDeleteAtom", 
    "type": "skProc", 
    "code": "proc GlobalDeleteAtom*(nAtom: ATOM): ATOM {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GlobalDeleteAtom\".}"
  }, 
  {
    "name": "InitAtomTable", 
    "type": "skProc", 
    "code": "proc InitAtomTable*(nSize: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"InitAtomTable\".}"
  }, 
  {
    "name": "DeleteAtom", 
    "type": "skProc", 
    "code": "proc DeleteAtom*(nAtom: ATOM): ATOM {.stdcall, dynlib: \"kernel32\", \u000A                                      importc: \"DeleteAtom\".}"
  }, 
  {
    "name": "SetHandleCount", 
    "type": "skProc", 
    "code": "proc SetHandleCount*(uNumber: WINUINT): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetHandleCount\".}"
  }, 
  {
    "name": "GetLogicalDrives", 
    "type": "skProc", 
    "code": "proc GetLogicalDrives*(): DWORD {.stdcall, dynlib: \"kernel32\", \u000A                                  importc: \"GetLogicalDrives\".}"
  }, 
  {
    "name": "LockFile", 
    "type": "skProc", 
    "code": "proc LockFile*(hFile: HANDLE; dwFileOffsetLow: DWORD; dwFileOffsetHigh: DWORD; \u000A               nNumberOfBytesToLockLow: DWORD; nNumberOfBytesToLockHigh: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LockFile\".}"
  }, 
  {
    "name": "UnlockFile", 
    "type": "skProc", 
    "code": "proc UnlockFile*(hFile: HANDLE; dwFileOffsetLow: DWORD; dwFileOffsetHigh: DWORD; \u000A                 nNumberOfBytesToUnlockLow: DWORD; \u000A                 nNumberOfBytesToUnlockHigh: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"UnlockFile\".}"
  }, 
  {
    "name": "LockFileEx", 
    "type": "skProc", 
    "code": "proc LockFileEx*(hFile: HANDLE; dwFlags: DWORD; dwReserved: DWORD; \u000A                 nNumberOfBytesToLockLow: DWORD; \u000A                 nNumberOfBytesToLockHigh: DWORD; lpOverlapped: LPOVERLAPPED): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LockFileEx\".}"
  }, 
  {
    "name": "UnlockFileEx", 
    "type": "skProc", 
    "code": "proc UnlockFileEx*(hFile: HANDLE; dwReserved: DWORD; \u000A                   nNumberOfBytesToUnlockLow: DWORD; \u000A                   nNumberOfBytesToUnlockHigh: DWORD; lpOverlapped: LPOVERLAPPED): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UnlockFileEx\".}"
  }, 
  {
    "name": "GetFileInformationByHandle", 
    "type": "skProc", 
    "code": "proc GetFileInformationByHandle*(hFile: HANDLE; lpFileInformation: LPBY_HANDLE_FILE_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetFileInformationByHandle\".}"
  }, 
  {
    "name": "GetFileType", 
    "type": "skProc", 
    "code": "proc GetFileType*(hFile: HANDLE): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetFileType\".}"
  }, 
  {
    "name": "GetFileSize", 
    "type": "skProc", 
    "code": "proc GetFileSize*(hFile: HANDLE; lpFileSizeHigh: LPDWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetFileSize\".}"
  }, 
  {
    "name": "GetStdHandle", 
    "type": "skProc", 
    "code": "proc GetStdHandle*(nStdHandle: DWORD): HANDLE {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetStdHandle\".}"
  }, 
  {
    "name": "SetStdHandle", 
    "type": "skProc", 
    "code": "proc SetStdHandle*(nStdHandle: DWORD; hHandle: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetStdHandle\".}"
  }, 
  {
    "name": "FlushFileBuffers", 
    "type": "skProc", 
    "code": "proc FlushFileBuffers*(hFile: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FlushFileBuffers\".}"
  }, 
  {
    "name": "DeviceIoControl", 
    "type": "skProc", 
    "code": "proc DeviceIoControl*(hDevice: HANDLE; dwIoControlCode: DWORD; \u000A                      lpInBuffer: LPVOID; nInBufferSize: DWORD; \u000A                      lpOutBuffer: LPVOID; nOutBufferSize: DWORD; \u000A                      lpBytesReturned: LPDWORD; lpOverlapped: LPOVERLAPPED): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"DeviceIoControl\".}"
  }, 
  {
    "name": "SetEndOfFile", 
    "type": "skProc", 
    "code": "proc SetEndOfFile*(hFile: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetEndOfFile\".}"
  }, 
  {
    "name": "SetFilePointer", 
    "type": "skProc", 
    "code": "proc SetFilePointer*(hFile: HANDLE; lDistanceToMove: LONG; \u000A                     lpDistanceToMoveHigh: PLONG; dwMoveMethod: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFilePointer\".}"
  }, 
  {
    "name": "FindClose", 
    "type": "skProc", 
    "code": "proc FindClose*(hFindFile: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"FindClose\".}"
  }, 
  {
    "name": "GetFileTime", 
    "type": "skProc", 
    "code": "proc GetFileTime*(hFile: HANDLE; lpCreationTime: LPFILETIME; \u000A                  lpLastAccessTime: LPFILETIME; lpLastWriteTime: LPFILETIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetFileTime\".}"
  }, 
  {
    "name": "SetFileTime", 
    "type": "skProc", 
    "code": "proc SetFileTime*(hFile: HANDLE; lpCreationTime: LPFILETIME; \u000A                  lpLastAccessTime: LPFILETIME; lpLastWriteTime: LPFILETIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFileTime\".}"
  }, 
  {
    "name": "CloseHandle", 
    "type": "skProc", 
    "code": "proc CloseHandle*(hObject: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CloseHandle\".}"
  }, 
  {
    "name": "DuplicateHandle", 
    "type": "skProc", 
    "code": "proc DuplicateHandle*(hSourceProcessHandle: HANDLE; hSourceHandle: HANDLE; \u000A                      hTargetProcessHandle: HANDLE; lpTargetHandle: LPHANDLE; \u000A                      dwDesiredAccess: DWORD; bInheritHandle: WINBOOL; \u000A                      dwOptions: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"DuplicateHandle\".}"
  }, 
  {
    "name": "GetHandleInformation", 
    "type": "skProc", 
    "code": "proc GetHandleInformation*(hObject: HANDLE; lpdwFlags: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetHandleInformation\".}"
  }, 
  {
    "name": "SetHandleInformation", 
    "type": "skProc", 
    "code": "proc SetHandleInformation*(hObject: HANDLE; dwMask: DWORD; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetHandleInformation\".}"
  }, 
  {
    "name": "LoadModule", 
    "type": "skProc", 
    "code": "proc LoadModule*(lpModuleName: LPCSTR; lpParameterBlock: LPVOID): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"LoadModule\".}"
  }, 
  {
    "name": "WinExec", 
    "type": "skProc", 
    "code": "proc WinExec*(lpCmdLine: LPCSTR; uCmdShow: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WinExec\".}"
  }, 
  {
    "name": "ClearCommBreak", 
    "type": "skProc", 
    "code": "proc ClearCommBreak*(hFile: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ClearCommBreak\".}"
  }, 
  {
    "name": "ClearCommError", 
    "type": "skProc", 
    "code": "proc ClearCommError*(hFile: HANDLE; lpErrors: LPDWORD; lpStat: LPCOMSTAT): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ClearCommError\".}"
  }, 
  {
    "name": "SetupComm", 
    "type": "skProc", 
    "code": "proc SetupComm*(hFile: HANDLE; dwInQueue: DWORD; dwOutQueue: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetupComm\".}"
  }, 
  {
    "name": "EscapeCommFunction", 
    "type": "skProc", 
    "code": "proc EscapeCommFunction*(hFile: HANDLE; dwFunc: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EscapeCommFunction\".}"
  }, 
  {
    "name": "GetCommConfig", 
    "type": "skProc", 
    "code": "proc GetCommConfig*(hCommDev: HANDLE; lpCC: LPCOMMCONFIG; lpdwSize: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommConfig\".}"
  }, 
  {
    "name": "GetCommProperties", 
    "type": "skProc", 
    "code": "proc GetCommProperties*(hFile: HANDLE; lpCommProp: LPCOMMPROP): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommProperties\".}"
  }, 
  {
    "name": "GetCommModemStatus", 
    "type": "skProc", 
    "code": "proc GetCommModemStatus*(hFile: HANDLE; lpModemStat: PDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCommModemStatus\".}"
  }, 
  {
    "name": "GetCommState", 
    "type": "skProc", 
    "code": "proc GetCommState*(hFile: HANDLE; lpDCB: PDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCommState\".}"
  }, 
  {
    "name": "GetCommTimeouts", 
    "type": "skProc", 
    "code": "proc GetCommTimeouts*(hFile: HANDLE; lpCommTimeouts: PCOMMTIMEOUTS): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommTimeouts\".}"
  }, 
  {
    "name": "PurgeComm", 
    "type": "skProc", 
    "code": "proc PurgeComm*(hFile: HANDLE; dwFlags: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"PurgeComm\".}"
  }, 
  {
    "name": "SetCommBreak", 
    "type": "skProc", 
    "code": "proc SetCommBreak*(hFile: HANDLE): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetCommBreak\".}"
  }, 
  {
    "name": "SetCommConfig", 
    "type": "skProc", 
    "code": "proc SetCommConfig*(hCommDev: HANDLE; lpCC: LPCOMMCONFIG; dwSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetCommConfig\".}"
  }, 
  {
    "name": "SetCommMask", 
    "type": "skProc", 
    "code": "proc SetCommMask*(hFile: HANDLE; dwEvtMask: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCommMask\".}"
  }, 
  {
    "name": "SetCommState", 
    "type": "skProc", 
    "code": "proc SetCommState*(hFile: HANDLE; lpDCB: LPDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCommState\".}"
  }, 
  {
    "name": "SetCommTimeouts", 
    "type": "skProc", 
    "code": "proc SetCommTimeouts*(hFile: HANDLE; lpCommTimeouts: LPCOMMTIMEOUTS): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetCommTimeouts\".}"
  }, 
  {
    "name": "TransmitCommChar", 
    "type": "skProc", 
    "code": "proc TransmitCommChar*(hFile: HANDLE; cChar: char): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TransmitCommChar\".}"
  }, 
  {
    "name": "WaitCommEvent", 
    "type": "skProc", 
    "code": "proc WaitCommEvent*(hFile: HANDLE; lpEvtMask: LPDWORD; \u000A                    lpOverlapped: LPOVERLAPPED): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WaitCommEvent\".}"
  }, 
  {
    "name": "SetTapePosition", 
    "type": "skProc", 
    "code": "proc SetTapePosition*(hDevice: HANDLE; dwPositionMethod: DWORD; \u000A                      dwPartition: DWORD; dwOffsetLow: DWORD; \u000A                      dwOffsetHigh: DWORD; bImmediate: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetTapePosition\".}"
  }, 
  {
    "name": "GetTapePosition", 
    "type": "skProc", 
    "code": "proc GetTapePosition*(hDevice: HANDLE; dwPositionType: DWORD; \u000A                      lpdwPartition: LPDWORD; lpdwOffsetLow: LPDWORD; \u000A                      lpdwOffsetHigh: LPDWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTapePosition\".}"
  }, 
  {
    "name": "PrepareTape", 
    "type": "skProc", 
    "code": "proc PrepareTape*(hDevice: HANDLE; dwOperation: DWORD; bImmediate: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PrepareTape\".}"
  }, 
  {
    "name": "EraseTape", 
    "type": "skProc", 
    "code": "proc EraseTape*(hDevice: HANDLE; dwEraseType: DWORD; bImmediate: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"EraseTape\".}"
  }, 
  {
    "name": "CreateTapePartition", 
    "type": "skProc", 
    "code": "proc CreateTapePartition*(hDevice: HANDLE; dwPartitionMethod: DWORD; \u000A                          dwCount: DWORD; dwSize: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"CreateTapePartition\".}"
  }, 
  {
    "name": "WriteTapemark", 
    "type": "skProc", 
    "code": "proc WriteTapemark*(hDevice: HANDLE; dwTapemarkType: DWORD; \u000A                    dwTapemarkCount: DWORD; bImmediate: WINBOOL): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteTapemark\".}"
  }, 
  {
    "name": "GetTapeStatus", 
    "type": "skProc", 
    "code": "proc GetTapeStatus*(hDevice: HANDLE): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetTapeStatus\".}"
  }, 
  {
    "name": "GetTapeParameters", 
    "type": "skProc", 
    "code": "proc GetTapeParameters*(hDevice: HANDLE; dwOperation: DWORD; lpdwSize: LPDWORD; \u000A                        lpTapeInformation: LPVOID): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTapeParameters\".}"
  }, 
  {
    "name": "SetTapeParameters", 
    "type": "skProc", 
    "code": "proc SetTapeParameters*(hDevice: HANDLE; dwOperation: DWORD; \u000A                        lpTapeInformation: LPVOID): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetTapeParameters\".}"
  }, 
  {
    "name": "Beep", 
    "type": "skProc", 
    "code": "proc Beep*(dwFreq: DWORD; dwDuration: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"Beep\".}"
  }, 
  {
    "name": "MulDiv", 
    "type": "skProc", 
    "code": "proc MulDiv*(nNumber: int32; nNumerator: int32; nDenominator: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MulDiv\".}"
  }, 
  {
    "name": "GetSystemTime", 
    "type": "skProc", 
    "code": "proc GetSystemTime*(lpSystemTime: LPSYSTEMTIME) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemTime\".}"
  }, 
  {
    "name": "GetSystemTimeAsFileTime", 
    "type": "skProc", 
    "code": "proc GetSystemTimeAsFileTime*(lpSystemTimeAsFileTime: LPFILETIME) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetSystemTimeAsFileTime\".}"
  }, 
  {
    "name": "SetSystemTime", 
    "type": "skProc", 
    "code": "proc SetSystemTime*(lpSystemTime: LPSYSTEMTIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetSystemTime\".}"
  }, 
  {
    "name": "GetLocalTime", 
    "type": "skProc", 
    "code": "proc GetLocalTime*(lpSystemTime: LPSYSTEMTIME) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetLocalTime\".}"
  }, 
  {
    "name": "SetLocalTime", 
    "type": "skProc", 
    "code": "proc SetLocalTime*(lpSystemTime: LPSYSTEMTIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetLocalTime\".}"
  }, 
  {
    "name": "GetSystemInfo", 
    "type": "skProc", 
    "code": "proc GetSystemInfo*(lpSystemInfo: LPSYSTEM_INFO) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemInfo\".}"
  }, 
  {
    "name": "SystemTimeToTzSpecificLocalTime", 
    "type": "skProc", 
    "code": "proc SystemTimeToTzSpecificLocalTime*(lpTimeZoneInformation: LPTIME_ZONE_INFORMATION; \u000A                                      lpUniversalTime: LPSYSTEMTIME; \u000A                                      lpLocalTime: LPSYSTEMTIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SystemTimeToTzSpecificLocalTime\".}"
  }, 
  {
    "name": "GetTimeZoneInformation", 
    "type": "skProc", 
    "code": "proc GetTimeZoneInformation*(lpTimeZoneInformation: LPTIME_ZONE_INFORMATION): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTimeZoneInformation\".}"
  }, 
  {
    "name": "SetTimeZoneInformation", 
    "type": "skProc", 
    "code": "proc SetTimeZoneInformation*(lpTimeZoneInformation: LPTIME_ZONE_INFORMATION): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetTimeZoneInformation\".}"
  }, 
  {
    "name": "SystemTimeToFileTime", 
    "type": "skProc", 
    "code": "proc SystemTimeToFileTime*(lpSystemTime: LPSYSTEMTIME; lpFileTime: LPFILETIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SystemTimeToFileTime\".}"
  }, 
  {
    "name": "FileTimeToLocalFileTime", 
    "type": "skProc", 
    "code": "proc FileTimeToLocalFileTime*(FileTime: LPFILETIME; lpLocalFileTime: LPFILETIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FileTimeToLocalFileTime\".}"
  }, 
  {
    "name": "LocalFileTimeToFileTime", 
    "type": "skProc", 
    "code": "proc LocalFileTimeToFileTime*(lpLocalFileTime: LPFILETIME; \u000A                              lpFileTime: LPFILETIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LocalFileTimeToFileTime\".}"
  }, 
  {
    "name": "FileTimeToSystemTime", 
    "type": "skProc", 
    "code": "proc FileTimeToSystemTime*(lpFileTime: LPFILETIME; lpSystemTime: LPSYSTEMTIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FileTimeToSystemTime\".}"
  }, 
  {
    "name": "CompareFileTime", 
    "type": "skProc", 
    "code": "proc CompareFileTime*(lpFileTime1: LPFILETIME; lpFileTime2: LPFILETIME): LONG {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CompareFileTime\".}"
  }, 
  {
    "name": "FileTimeToDosDateTime", 
    "type": "skProc", 
    "code": "proc FileTimeToDosDateTime*(lpFileTime: LPFILETIME; lpFatDate: LPWORD; \u000A                            lpFatTime: LPWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FileTimeToDosDateTime\".}"
  }, 
  {
    "name": "DosDateTimeToFileTime", 
    "type": "skProc", 
    "code": "proc DosDateTimeToFileTime*(wFatDate: int16; wFatTime: int16; \u000A                            lpFileTime: LPFILETIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DosDateTimeToFileTime\".}"
  }, 
  {
    "name": "GetTickCount", 
    "type": "skProc", 
    "code": "proc GetTickCount*(): DWORD {.stdcall, dynlib: \"kernel32\", \u000A                              importc: \"GetTickCount\".}"
  }, 
  {
    "name": "SetSystemTimeAdjustment", 
    "type": "skProc", 
    "code": "proc SetSystemTimeAdjustment*(dwTimeAdjustment: DWORD; \u000A                              bTimeAdjustmentDisabled: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetSystemTimeAdjustment\".}"
  }, 
  {
    "name": "GetSystemTimeAdjustment", 
    "type": "skProc", 
    "code": "proc GetSystemTimeAdjustment*(lpTimeAdjustment: PDWORD; lpTimeIncrement: PDWORD; \u000A                              lpTimeAdjustmentDisabled: PWINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetSystemTimeAdjustment\".}"
  }, 
  {
    "name": "CreatePipe", 
    "type": "skProc", 
    "code": "proc CreatePipe*(hReadPipe: PHANDLE; hWritePipe: PHANDLE; \u000A                 lpPipeAttributes: LPSECURITY_ATTRIBUTES; nSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreatePipe\".}"
  }, 
  {
    "name": "ConnectNamedPipe", 
    "type": "skProc", 
    "code": "proc ConnectNamedPipe*(hNamedPipe: HANDLE; lpOverlapped: LPOVERLAPPED): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ConnectNamedPipe\".}"
  }, 
  {
    "name": "DisconnectNamedPipe", 
    "type": "skProc", 
    "code": "proc DisconnectNamedPipe*(hNamedPipe: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DisconnectNamedPipe\".}"
  }, 
  {
    "name": "SetNamedPipeHandleState", 
    "type": "skProc", 
    "code": "proc SetNamedPipeHandleState*(hNamedPipe: HANDLE; lpMode: LPDWORD; \u000A                              lpMaxCollectionCount: LPDWORD; \u000A                              lpCollectDataTimeout: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetNamedPipeHandleState\".}"
  }, 
  {
    "name": "GetNamedPipeInfo", 
    "type": "skProc", 
    "code": "proc GetNamedPipeInfo*(hNamedPipe: HANDLE; lpFlags: LPDWORD; \u000A                       lpOutBufferSize: LPDWORD; lpInBufferSize: LPDWORD; \u000A                       lpMaxInstances: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetNamedPipeInfo\".}"
  }, 
  {
    "name": "PeekNamedPipe", 
    "type": "skProc", 
    "code": "proc PeekNamedPipe*(hNamedPipe: HANDLE; lpBuffer: LPVOID; nBufferSize: DWORD; \u000A                    lpBytesRead: LPDWORD; lpTotalBytesAvail: LPDWORD; \u000A                    lpBytesLeftThisMessage: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"PeekNamedPipe\".}"
  }, 
  {
    "name": "TransactNamedPipe", 
    "type": "skProc", 
    "code": "proc TransactNamedPipe*(hNamedPipe: HANDLE; lpInBuffer: LPVOID; \u000A                        nInBufferSize: DWORD; lpOutBuffer: LPVOID; \u000A                        nOutBufferSize: DWORD; lpBytesRead: LPDWORD; \u000A                        lpOverlapped: LPOVERLAPPED): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TransactNamedPipe\".}"
  }, 
  {
    "name": "GetMailslotInfo", 
    "type": "skProc", 
    "code": "proc GetMailslotInfo*(hMailslot: HANDLE; lpMaxMessageSize: LPDWORD; \u000A                      lpNextSize: LPDWORD; lpMessageCount: LPDWORD; \u000A                      lpReadTimeout: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetMailslotInfo\".}"
  }, 
  {
    "name": "SetMailslotInfo", 
    "type": "skProc", 
    "code": "proc SetMailslotInfo*(hMailslot: HANDLE; lReadTimeout: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetMailslotInfo\".}"
  }, 
  {
    "name": "MapViewOfFile", 
    "type": "skProc", 
    "code": "proc MapViewOfFile*(hFileMappingObject: HANDLE; dwDesiredAccess: DWORD; \u000A                    dwFileOffsetHigh: DWORD; dwFileOffsetLow: DWORD; \u000A                    dwNumberOfBytesToMap: DWORD): LPVOID {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"MapViewOfFile\".}"
  }, 
  {
    "name": "FlushViewOfFile", 
    "type": "skProc", 
    "code": "proc FlushViewOfFile*(lpBaseAddress: LPCVOID; dwNumberOfBytesToFlush: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FlushViewOfFile\".}"
  }, 
  {
    "name": "UnmapViewOfFile", 
    "type": "skProc", 
    "code": "proc UnmapViewOfFile*(lpBaseAddress: LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"UnmapViewOfFile\".}"
  }, 
  {
    "name": "OpenFile", 
    "type": "skProc", 
    "code": "proc OpenFile*(lpFileName: LPCSTR; lpReOpenBuff: LPOFSTRUCT; uStyle: WINUINT): HFILE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"OpenFile\".}"
  }, 
  {
    "name": "lopen", 
    "type": "skProc", 
    "code": "proc lopen*(lpPathName: LPCSTR; iReadWrite: int32): HFILE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_lopen\".}"
  }, 
  {
    "name": "lcreat", 
    "type": "skProc", 
    "code": "proc lcreat*(lpPathName: LPCSTR; iAttribute: int32): HFILE {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_lcreat\".}"
  }, 
  {
    "name": "lread", 
    "type": "skProc", 
    "code": "proc lread*(hFile: HFILE; lpBuffer: LPVOID; uBytes: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_lread\".}"
  }, 
  {
    "name": "lwrite", 
    "type": "skProc", 
    "code": "proc lwrite*(hFile: HFILE; lpBuffer: LPCSTR; uBytes: WINUINT): WINUINT {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"_lwrite\".}"
  }, 
  {
    "name": "hread", 
    "type": "skProc", 
    "code": "proc hread*(hFile: HFILE; lpBuffer: LPVOID; lBytes: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_hread\".}"
  }, 
  {
    "name": "hwrite", 
    "type": "skProc", 
    "code": "proc hwrite*(hFile: HFILE; lpBuffer: LPCSTR; lBytes: int32): int32 {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_hwrite\".}"
  }, 
  {
    "name": "lclose", 
    "type": "skProc", 
    "code": "proc lclose*(file: HFILE): HFILE {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"_lclose\".}"
  }, 
  {
    "name": "llseek", 
    "type": "skProc", 
    "code": "proc llseek*(file: HFILE; lOffset: LONG; iOrigin: int32): LONG {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"_llseek\".}"
  }, 
  {
    "name": "IsTextUnicode", 
    "type": "skProc", 
    "code": "proc IsTextUnicode*(lpBuffer: LPVOID; cb: int32; lpi: LPINT): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"IsTextUnicode\".}"
  }, 
  {
    "name": "TlsAlloc", 
    "type": "skProc", 
    "code": "proc TlsAlloc*(): DWORD {.stdcall, dynlib: \"kernel32\", importc: \"TlsAlloc\".}"
  }, 
  {
    "name": "TlsGetValue", 
    "type": "skProc", 
    "code": "proc TlsGetValue*(dwTlsIndex: DWORD): LPVOID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"TlsGetValue\".}"
  }, 
  {
    "name": "TlsSetValue", 
    "type": "skProc", 
    "code": "proc TlsSetValue*(dwTlsIndex: DWORD; lpTlsValue: LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TlsSetValue\".}"
  }, 
  {
    "name": "TlsFree", 
    "type": "skProc", 
    "code": "proc TlsFree*(dwTlsIndex: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"TlsFree\".}"
  }, 
  {
    "name": "SleepEx", 
    "type": "skProc", 
    "code": "proc SleepEx*(dwMilliseconds: DWORD; bAlertable: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SleepEx\".}"
  }, 
  {
    "name": "WaitForSingleObjectEx", 
    "type": "skProc", 
    "code": "proc WaitForSingleObjectEx*(hHandle: HANDLE; dwMilliseconds: DWORD; \u000A                            bAlertable: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WaitForSingleObjectEx\".}"
  }, 
  {
    "name": "WaitForMultipleObjectsEx", 
    "type": "skProc", 
    "code": "proc WaitForMultipleObjectsEx*(nCount: DWORD; lpHandles: LPHANDLE; \u000A                               bWaitAll: WINBOOL; dwMilliseconds: DWORD; \u000A                               bAlertable: WINBOOL): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WaitForMultipleObjectsEx\".}"
  }, 
  {
    "name": "ReadFileEx", 
    "type": "skProc", 
    "code": "proc ReadFileEx*(hFile: HANDLE; lpBuffer: LPVOID; nNumberOfBytesToRead: DWORD; \u000A                 lpOverlapped: LPOVERLAPPED; \u000A                 lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadFileEx\".}"
  }, 
  {
    "name": "WriteFileEx", 
    "type": "skProc", 
    "code": "proc WriteFileEx*(hFile: HANDLE; lpBuffer: LPCVOID; \u000A                  nNumberOfBytesToWrite: DWORD; lpOverlapped: LPOVERLAPPED; \u000A                  lpCompletionRoutine: LPOVERLAPPED_COMPLETION_ROUTINE): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteFileEx\".}"
  }, 
  {
    "name": "BackupRead", 
    "type": "skProc", 
    "code": "proc BackupRead*(hFile: HANDLE; lpBuffer: LPBYTE; nNumberOfBytesToRead: DWORD; \u000A                 lpNumberOfBytesRead: LPDWORD; bAbort: WINBOOL; \u000A                 bProcessSecurity: WINBOOL; lpContext: var LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BackupRead\".}"
  }, 
  {
    "name": "BackupSeek", 
    "type": "skProc", 
    "code": "proc BackupSeek*(hFile: HANDLE; dwLowBytesToSeek: DWORD; \u000A                 dwHighBytesToSeek: DWORD; lpdwLowByteSeeked: LPDWORD; \u000A                 lpdwHighByteSeeked: LPDWORD; lpContext: var LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BackupSeek\".}"
  }, 
  {
    "name": "BackupWrite", 
    "type": "skProc", 
    "code": "proc BackupWrite*(hFile: HANDLE; lpBuffer: LPBYTE; nNumberOfBytesToWrite: DWORD; \u000A                  lpNumberOfBytesWritten: LPDWORD; bAbort: WINBOOL; \u000A                  bProcessSecurity: WINBOOL; lpContext: var LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BackupWrite\".}"
  }, 
  {
    "name": "SetProcessShutdownParameters", 
    "type": "skProc", 
    "code": "proc SetProcessShutdownParameters*(dwLevel: DWORD; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetProcessShutdownParameters\".}"
  }, 
  {
    "name": "GetProcessShutdownParameters", 
    "type": "skProc", 
    "code": "proc GetProcessShutdownParameters*(lpdwLevel: LPDWORD; lpdwFlags: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessShutdownParameters\".}"
  }, 
  {
    "name": "SetFileApisToOEM", 
    "type": "skProc", 
    "code": "proc SetFileApisToOEM*() {.stdcall, dynlib: \"kernel32\", \u000A                           importc: \"SetFileApisToOEM\".}"
  }, 
  {
    "name": "SetFileApisToANSI", 
    "type": "skProc", 
    "code": "proc SetFileApisToANSI*() {.stdcall, dynlib: \"kernel32\", \u000A                            importc: \"SetFileApisToANSI\".}"
  }, 
  {
    "name": "AreFileApisANSI", 
    "type": "skProc", 
    "code": "proc AreFileApisANSI*(): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"AreFileApisANSI\".}"
  }, 
  {
    "name": "CloseEventLog", 
    "type": "skProc", 
    "code": "proc CloseEventLog*(hEventLog: HANDLE): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"CloseEventLog\".}"
  }, 
  {
    "name": "DeregisterEventSource", 
    "type": "skProc", 
    "code": "proc DeregisterEventSource*(hEventLog: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"DeregisterEventSource\".}"
  }, 
  {
    "name": "NotifyChangeEventLog", 
    "type": "skProc", 
    "code": "proc NotifyChangeEventLog*(hEventLog: HANDLE; hEvent: HANDLE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"NotifyChangeEventLog\".}"
  }, 
  {
    "name": "GetNumberOfEventLogRecords", 
    "type": "skProc", 
    "code": "proc GetNumberOfEventLogRecords*(hEventLog: HANDLE; NumberOfRecords: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetNumberOfEventLogRecords\".}"
  }, 
  {
    "name": "GetOldestEventLogRecord", 
    "type": "skProc", 
    "code": "proc GetOldestEventLogRecord*(hEventLog: HANDLE; OldestRecord: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetOldestEventLogRecord\".}"
  }, 
  {
    "name": "DuplicateToken", 
    "type": "skProc", 
    "code": "proc DuplicateToken*(ExistingTokenHandle: HANDLE; \u000A                     ImpersonationLevel: SECURITY_IMPERSONATION_LEVEL; \u000A                     DuplicateTokenHandle: PHANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"DuplicateToken\".}"
  }, 
  {
    "name": "GetKernelObjectSecurity", 
    "type": "skProc", 
    "code": "proc GetKernelObjectSecurity*(Handle: HANDLE; \u000A                              RequestedInformation: SECURITY_INFORMATION; \u000A                              pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                              nLength: DWORD; lpnLengthNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetKernelObjectSecurity\".}"
  }, 
  {
    "name": "ImpersonateNamedPipeClient", 
    "type": "skProc", 
    "code": "proc ImpersonateNamedPipeClient*(hNamedPipe: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ImpersonateNamedPipeClient\".}"
  }, 
  {
    "name": "ImpersonateLoggedOnUser", 
    "type": "skProc", 
    "code": "proc ImpersonateLoggedOnUser*(hToken: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ImpersonateLoggedOnUser\".}"
  }, 
  {
    "name": "ImpersonateSelf", 
    "type": "skProc", 
    "code": "proc ImpersonateSelf*(ImpersonationLevel: SECURITY_IMPERSONATION_LEVEL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ImpersonateSelf\".}"
  }, 
  {
    "name": "RevertToSelf", 
    "type": "skProc", 
    "code": "proc RevertToSelf*(): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A                                importc: \"RevertToSelf\".}"
  }, 
  {
    "name": "SetThreadToken", 
    "type": "skProc", 
    "code": "proc SetThreadToken*(Thread: PHANDLE; Token: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetThreadToken\".}"
  }, 
  {
    "name": "OpenProcessToken", 
    "type": "skProc", 
    "code": "proc OpenProcessToken*(ProcessHandle: HANDLE; DesiredAccess: DWORD; \u000A                       TokenHandle: PHANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenProcessToken\".}"
  }, 
  {
    "name": "OpenThreadToken", 
    "type": "skProc", 
    "code": "proc OpenThreadToken*(ThreadHandle: HANDLE; DesiredAccess: DWORD; \u000A                      OpenAsSelf: WINBOOL; TokenHandle: PHANDLE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenThreadToken\".}"
  }, 
  {
    "name": "GetTokenInformation", 
    "type": "skProc", 
    "code": "proc GetTokenInformation*(TokenHandle: HANDLE; \u000A                          TokenInformationClass: TOKEN_INFORMATION_CLASS; \u000A                          TokenInformation: LPVOID; \u000A                          TokenInformationLength: DWORD; ReturnLength: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetTokenInformation\".}"
  }, 
  {
    "name": "SetTokenInformation", 
    "type": "skProc", 
    "code": "proc SetTokenInformation*(TokenHandle: HANDLE; \u000A                          TokenInformationClass: TOKEN_INFORMATION_CLASS; \u000A                          TokenInformation: LPVOID; \u000A                          TokenInformationLength: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetTokenInformation\".}"
  }, 
  {
    "name": "AdjustTokenPrivileges", 
    "type": "skProc", 
    "code": "proc AdjustTokenPrivileges*(TokenHandle: HANDLE; DisableAllPrivileges: WINBOOL; \u000A                            NewState: PTOKEN_PRIVILEGES; BufferLength: DWORD; \u000A                            PreviousState: PTOKEN_PRIVILEGES; \u000A                            ReturnLength: PDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AdjustTokenPrivileges\".}"
  }, 
  {
    "name": "AdjustTokenGroups", 
    "type": "skProc", 
    "code": "proc AdjustTokenGroups*(TokenHandle: HANDLE; ResetToDefault: WINBOOL; \u000A                        NewState: PTOKEN_GROUPS; BufferLength: DWORD; \u000A                        PreviousState: PTOKEN_GROUPS; ReturnLength: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AdjustTokenGroups\".}"
  }, 
  {
    "name": "PrivilegeCheck", 
    "type": "skProc", 
    "code": "proc PrivilegeCheck*(ClientToken: HANDLE; RequiredPrivileges: PPRIVILEGE_SET; \u000A                     pfResult: LPBOOL): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"PrivilegeCheck\".}"
  }, 
  {
    "name": "IsValidSid", 
    "type": "skProc", 
    "code": "proc IsValidSid*(pSid: PSID): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A                                        importc: \"IsValidSid\".}"
  }, 
  {
    "name": "EqualSid", 
    "type": "skProc", 
    "code": "proc EqualSid*(pSid1: PSID; pSid2: PSID): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"EqualSid\".}"
  }, 
  {
    "name": "EqualPrefixSid", 
    "type": "skProc", 
    "code": "proc EqualPrefixSid*(pSid1: PSID; pSid2: PSID): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"EqualPrefixSid\".}"
  }, 
  {
    "name": "GetSidLengthRequired", 
    "type": "skProc", 
    "code": "proc GetSidLengthRequired*(nSubAuthorityCount: UCHAR): DWORD {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetSidLengthRequired\".}"
  }, 
  {
    "name": "AllocateAndInitializeSid", 
    "type": "skProc", 
    "code": "proc AllocateAndInitializeSid*(pIdentifierAuthority: PSID_IDENTIFIER_AUTHORITY; \u000A                               nSubAuthorityCount: int8; nSubAuthority0: DWORD; \u000A                               nSubAuthority1: DWORD; nSubAuthority2: DWORD; \u000A                               nSubAuthority3: DWORD; nSubAuthority4: DWORD; \u000A                               nSubAuthority5: DWORD; nSubAuthority6: DWORD; \u000A                               nSubAuthority7: DWORD; pSid: var PSID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AllocateAndInitializeSid\".}"
  }, 
  {
    "name": "FreeSid", 
    "type": "skProc", 
    "code": "proc FreeSid*(pSid: PSID): PVOID {.stdcall, dynlib: \"advapi32\", \u000A                                   importc: \"FreeSid\".}"
  }, 
  {
    "name": "InitializeSid", 
    "type": "skProc", 
    "code": "proc InitializeSid*(Sid: PSID; pIdentifierAuthority: PSID_IDENTIFIER_AUTHORITY; \u000A                    nSubAuthorityCount: int8): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitializeSid\".}"
  }, 
  {
    "name": "GetSidIdentifierAuthority", 
    "type": "skProc", 
    "code": "proc GetSidIdentifierAuthority*(pSid: PSID): PSID_IDENTIFIER_AUTHORITY {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetSidIdentifierAuthority\".}"
  }, 
  {
    "name": "GetSidSubAuthority", 
    "type": "skProc", 
    "code": "proc GetSidSubAuthority*(pSid: PSID; nSubAuthority: DWORD): PDWORD {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetSidSubAuthority\".}"
  }, 
  {
    "name": "GetSidSubAuthorityCount", 
    "type": "skProc", 
    "code": "proc GetSidSubAuthorityCount*(pSid: PSID): PUCHAR {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"GetSidSubAuthorityCount\".}"
  }, 
  {
    "name": "GetLengthSid", 
    "type": "skProc", 
    "code": "proc GetLengthSid*(pSid: PSID): DWORD {.stdcall, dynlib: \"advapi32\", \u000A                                        importc: \"GetLengthSid\".}"
  }, 
  {
    "name": "CopySid", 
    "type": "skProc", 
    "code": "proc CopySid*(nDestinationSidLength: DWORD; pDestinationSid: PSID; \u000A              pSourceSid: PSID): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"CopySid\".}"
  }, 
  {
    "name": "AreAllAccessesGranted", 
    "type": "skProc", 
    "code": "proc AreAllAccessesGranted*(GrantedAccess: DWORD; DesiredAccess: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AreAllAccessesGranted\".}"
  }, 
  {
    "name": "AreAnyAccessesGranted", 
    "type": "skProc", 
    "code": "proc AreAnyAccessesGranted*(GrantedAccess: DWORD; DesiredAccess: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AreAnyAccessesGranted\".}"
  }, 
  {
    "name": "MapGenericMask", 
    "type": "skProc", 
    "code": "proc MapGenericMask*(AccessMask: PDWORD; GenericMapping: PGENERIC_MAPPING) {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"MapGenericMask\".}"
  }, 
  {
    "name": "IsValidAcl", 
    "type": "skProc", 
    "code": "proc IsValidAcl*(pAcl: PACL): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A                                        importc: \"IsValidAcl\".}"
  }, 
  {
    "name": "InitializeAcl", 
    "type": "skProc", 
    "code": "proc InitializeAcl*(pAcl: PACL; nAclLength: DWORD; dwAclRevision: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"InitializeAcl\".}"
  }, 
  {
    "name": "GetAclInformation", 
    "type": "skProc", 
    "code": "proc GetAclInformation*(pAcl: PACL; pAclInformation: LPVOID; \u000A                        nAclInformationLength: DWORD; \u000A                        dwAclInformationClass: ACL_INFORMATION_CLASS): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetAclInformation\".}"
  }, 
  {
    "name": "SetAclInformation", 
    "type": "skProc", 
    "code": "proc SetAclInformation*(pAcl: PACL; pAclInformation: LPVOID; \u000A                        nAclInformationLength: DWORD; \u000A                        dwAclInformationClass: ACL_INFORMATION_CLASS): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetAclInformation\".}"
  }, 
  {
    "name": "AddAce", 
    "type": "skProc", 
    "code": "proc AddAce*(pAcl: PACL; dwAceRevision: DWORD; dwStartingAceIndex: DWORD; \u000A             pAceList: LPVOID; nAceListLength: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AddAce\".}"
  }, 
  {
    "name": "DeleteAce", 
    "type": "skProc", 
    "code": "proc DeleteAce*(pAcl: PACL; dwAceIndex: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"DeleteAce\".}"
  }, 
  {
    "name": "GetAce", 
    "type": "skProc", 
    "code": "proc GetAce*(pAcl: PACL; dwAceIndex: DWORD; pAce: var LPVOID): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetAce\".}"
  }, 
  {
    "name": "AddAccessAllowedAce", 
    "type": "skProc", 
    "code": "proc AddAccessAllowedAce*(pAcl: PACL; dwAceRevision: DWORD; AccessMask: DWORD; \u000A                          pSid: PSID): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"AddAccessAllowedAce\".}"
  }, 
  {
    "name": "AddAccessDeniedAce", 
    "type": "skProc", 
    "code": "proc AddAccessDeniedAce*(pAcl: PACL; dwAceRevision: DWORD; AccessMask: DWORD; \u000A                         pSid: PSID): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"AddAccessDeniedAce\".}"
  }, 
  {
    "name": "AddAuditAccessAce", 
    "type": "skProc", 
    "code": "proc AddAuditAccessAce*(pAcl: PACL; dwAceRevision: DWORD; dwAccessMask: DWORD; \u000A                        pSid: PSID; bAuditSuccess: WINBOOL; \u000A                        bAuditFailure: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AddAuditAccessAce\".}"
  }, 
  {
    "name": "FindFirstFreeAce", 
    "type": "skProc", 
    "code": "proc FindFirstFreeAce*(pAcl: PACL; pAce: var LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"FindFirstFreeAce\".}"
  }, 
  {
    "name": "InitializeSecurityDescriptor", 
    "type": "skProc", 
    "code": "proc InitializeSecurityDescriptor*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                   dwRevision: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitializeSecurityDescriptor\".}"
  }, 
  {
    "name": "IsValidSecurityDescriptor", 
    "type": "skProc", 
    "code": "proc IsValidSecurityDescriptor*(pSecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"IsValidSecurityDescriptor\".}"
  }, 
  {
    "name": "GetSecurityDescriptorLength", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorLength*(pSecurityDescriptor: PSECURITY_DESCRIPTOR): DWORD {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetSecurityDescriptorLength\".}"
  }, 
  {
    "name": "GetSecurityDescriptorControl", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorControl*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                   pControl: PSECURITY_DESCRIPTOR_CONTROL; \u000A                                   lpdwRevision: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetSecurityDescriptorControl\".}"
  }, 
  {
    "name": "SetSecurityDescriptorDacl", 
    "type": "skProc", 
    "code": "proc SetSecurityDescriptorDacl*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                bDaclPresent: WINBOOL; pDacl: PACL; \u000A                                bDaclDefaulted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetSecurityDescriptorDacl\".}"
  }, 
  {
    "name": "GetSecurityDescriptorDacl", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorDacl*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                lpbDaclPresent: LPBOOL; pDacl: var PACL; \u000A                                lpbDaclDefaulted: LPBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetSecurityDescriptorDacl\".}"
  }, 
  {
    "name": "SetSecurityDescriptorSacl", 
    "type": "skProc", 
    "code": "proc SetSecurityDescriptorSacl*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                bSaclPresent: WINBOOL; pSacl: PACL; \u000A                                bSaclDefaulted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetSecurityDescriptorSacl\".}"
  }, 
  {
    "name": "GetSecurityDescriptorSacl", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorSacl*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                lpbSaclPresent: LPBOOL; pSacl: var PACL; \u000A                                lpbSaclDefaulted: LPBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetSecurityDescriptorSacl\".}"
  }, 
  {
    "name": "SetSecurityDescriptorOwner", 
    "type": "skProc", 
    "code": "proc SetSecurityDescriptorOwner*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                 pOwner: PSID; bOwnerDefaulted: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetSecurityDescriptorOwner\".}"
  }, 
  {
    "name": "GetSecurityDescriptorOwner", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorOwner*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                 pOwner: var PSID; lpbOwnerDefaulted: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetSecurityDescriptorOwner\".}"
  }, 
  {
    "name": "SetSecurityDescriptorGroup", 
    "type": "skProc", 
    "code": "proc SetSecurityDescriptorGroup*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                 pGroup: PSID; bGroupDefaulted: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetSecurityDescriptorGroup\".}"
  }, 
  {
    "name": "GetSecurityDescriptorGroup", 
    "type": "skProc", 
    "code": "proc GetSecurityDescriptorGroup*(pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                 pGroup: var PSID; lpbGroupDefaulted: LPBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetSecurityDescriptorGroup\".}"
  }, 
  {
    "name": "CreatePrivateObjectSecurity", 
    "type": "skProc", 
    "code": "proc CreatePrivateObjectSecurity*(ParentDescriptor: PSECURITY_DESCRIPTOR; \u000A                                  CreatorDescriptor: PSECURITY_DESCRIPTOR; \u000A                                  NewDescriptor: var PSECURITY_DESCRIPTOR; \u000A                                  IsDirectoryObject: WINBOOL; Token: HANDLE; \u000A                                  GenericMapping: PGENERIC_MAPPING): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"CreatePrivateObjectSecurity\".}"
  }, 
  {
    "name": "SetPrivateObjectSecurity", 
    "type": "skProc", 
    "code": "proc SetPrivateObjectSecurity*(SecurityInformation: SECURITY_INFORMATION; \u000A                               ModificationDescriptor: PSECURITY_DESCRIPTOR; \u000A    ObjectsSecurityDescriptor: var PSECURITY_DESCRIPTOR; \u000A                               GenericMapping: PGENERIC_MAPPING; Token: HANDLE): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetPrivateObjectSecurity\".}"
  }, 
  {
    "name": "GetPrivateObjectSecurity", 
    "type": "skProc", 
    "code": "proc GetPrivateObjectSecurity*(ObjectDescriptor: PSECURITY_DESCRIPTOR; \u000A                               SecurityInformation: SECURITY_INFORMATION; \u000A                               ResultantDescriptor: PSECURITY_DESCRIPTOR; \u000A                               DescriptorLength: DWORD; ReturnLength: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"GetPrivateObjectSecurity\".}"
  }, 
  {
    "name": "DestroyPrivateObjectSecurity", 
    "type": "skProc", 
    "code": "proc DestroyPrivateObjectSecurity*(ObjectDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"DestroyPrivateObjectSecurity\".}"
  }, 
  {
    "name": "MakeSelfRelativeSD", 
    "type": "skProc", 
    "code": "proc MakeSelfRelativeSD*(pAbsoluteSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                         pSelfRelativeSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                         lpdwBufferLength: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"MakeSelfRelativeSD\".}"
  }, 
  {
    "name": "MakeAbsoluteSD", 
    "type": "skProc", 
    "code": "proc MakeAbsoluteSD*(pSelfRelativeSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                     pAbsoluteSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                     lpdwAbsoluteSecurityDescriptorSize: LPDWORD; pDacl: PACL; \u000A                     lpdwDaclSize: LPDWORD; pSacl: PACL; lpdwSaclSize: LPDWORD; \u000A                     pOwner: PSID; lpdwOwnerSize: LPDWORD; pPrimaryGroup: PSID; \u000A                     lpdwPrimaryGroupSize: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"MakeAbsoluteSD\".}"
  }, 
  {
    "name": "SetKernelObjectSecurity", 
    "type": "skProc", 
    "code": "proc SetKernelObjectSecurity*(Handle: HANDLE; \u000A                              SecurityInformation: SECURITY_INFORMATION; \u000A                              SecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetKernelObjectSecurity\".}"
  }, 
  {
    "name": "FindNextChangeNotification", 
    "type": "skProc", 
    "code": "proc FindNextChangeNotification*(hChangeHandle: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FindNextChangeNotification\".}"
  }, 
  {
    "name": "FindCloseChangeNotification", 
    "type": "skProc", 
    "code": "proc FindCloseChangeNotification*(hChangeHandle: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FindCloseChangeNotification\".}"
  }, 
  {
    "name": "VirtualLock", 
    "type": "skProc", 
    "code": "proc VirtualLock*(lpAddress: LPVOID; dwSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"VirtualLock\".}"
  }, 
  {
    "name": "VirtualUnlock", 
    "type": "skProc", 
    "code": "proc VirtualUnlock*(lpAddress: LPVOID; dwSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"VirtualUnlock\".}"
  }, 
  {
    "name": "MapViewOfFileEx", 
    "type": "skProc", 
    "code": "proc MapViewOfFileEx*(hFileMappingObject: HANDLE; dwDesiredAccess: DWORD; \u000A                      dwFileOffsetHigh: DWORD; dwFileOffsetLow: DWORD; \u000A                      dwNumberOfBytesToMap: DWORD; lpBaseAddress: LPVOID): LPVOID {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MapViewOfFileEx\".}"
  }, 
  {
    "name": "SetPriorityClass", 
    "type": "skProc", 
    "code": "proc SetPriorityClass*(hProcess: HANDLE; dwPriorityClass: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetPriorityClass\".}"
  }, 
  {
    "name": "GetPriorityClass", 
    "type": "skProc", 
    "code": "proc GetPriorityClass*(hProcess: HANDLE): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetPriorityClass\".}"
  }, 
  {
    "name": "IsBadReadPtr", 
    "type": "skProc", 
    "code": "proc IsBadReadPtr*(lp: pointer; ucb: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadReadPtr\".}"
  }, 
  {
    "name": "IsBadWritePtr", 
    "type": "skProc", 
    "code": "proc IsBadWritePtr*(lp: LPVOID; ucb: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadWritePtr\".}"
  }, 
  {
    "name": "IsBadHugeReadPtr", 
    "type": "skProc", 
    "code": "proc IsBadHugeReadPtr*(lp: pointer; ucb: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadHugeReadPtr\".}"
  }, 
  {
    "name": "IsBadHugeWritePtr", 
    "type": "skProc", 
    "code": "proc IsBadHugeWritePtr*(lp: LPVOID; ucb: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsBadHugeWritePtr\".}"
  }, 
  {
    "name": "IsBadCodePtr", 
    "type": "skProc", 
    "code": "proc IsBadCodePtr*(lpfn: FARPROC): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"IsBadCodePtr\".}"
  }, 
  {
    "name": "AllocateLocallyUniqueId", 
    "type": "skProc", 
    "code": "proc AllocateLocallyUniqueId*(Luid: PLUID): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AllocateLocallyUniqueId\".}"
  }, 
  {
    "name": "QueryPerformanceCounter", 
    "type": "skProc", 
    "code": "proc QueryPerformanceCounter*(lpPerformanceCount: PLARGE_INTEGER): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"QueryPerformanceCounter\".}"
  }, 
  {
    "name": "QueryPerformanceFrequency", 
    "type": "skProc", 
    "code": "proc QueryPerformanceFrequency*(lpFrequency: PLARGE_INTEGER): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"QueryPerformanceFrequency\".}"
  }, 
  {
    "name": "ActivateKeyboardLayout", 
    "type": "skProc", 
    "code": "proc ActivateKeyboardLayout*(hkl: HKL; Flags: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ActivateKeyboardLayout\".}"
  }, 
  {
    "name": "UnloadKeyboardLayout", 
    "type": "skProc", 
    "code": "proc UnloadKeyboardLayout*(hkl: HKL): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"UnloadKeyboardLayout\".}"
  }, 
  {
    "name": "GetKeyboardLayoutList", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayoutList*(nBuff: int32; lpList: var HKL): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetKeyboardLayoutList\".}"
  }, 
  {
    "name": "GetKeyboardLayout", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayout*(dwLayout: DWORD): HKL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetKeyboardLayout\".}"
  }, 
  {
    "name": "OpenInputDesktop", 
    "type": "skProc", 
    "code": "proc OpenInputDesktop*(dwFlags: DWORD; fInherit: WINBOOL; dwDesiredAccess: DWORD): HDESK {.\u000A    stdcall, dynlib: \"user32\", importc: \"OpenInputDesktop\".}"
  }, 
  {
    "name": "EnumDesktopWindows", 
    "type": "skProc", 
    "code": "proc EnumDesktopWindows*(hDesktop: HDESK; lpfn: ENUMWINDOWSPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumDesktopWindows\".}"
  }, 
  {
    "name": "SwitchDesktop", 
    "type": "skProc", 
    "code": "proc SwitchDesktop*(hDesktop: HDESK): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SwitchDesktop\".}"
  }, 
  {
    "name": "SetThreadDesktop", 
    "type": "skProc", 
    "code": "proc SetThreadDesktop*(hDesktop: HDESK): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetThreadDesktop\".}"
  }, 
  {
    "name": "CloseDesktop", 
    "type": "skProc", 
    "code": "proc CloseDesktop*(hDesktop: HDESK): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"CloseDesktop\".}"
  }, 
  {
    "name": "GetThreadDesktop", 
    "type": "skProc", 
    "code": "proc GetThreadDesktop*(dwThreadId: DWORD): HDESK {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetThreadDesktop\".}"
  }, 
  {
    "name": "CloseWindowStation", 
    "type": "skProc", 
    "code": "proc CloseWindowStation*(hWinSta: HWINSTA): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"CloseWindowStation\".}"
  }, 
  {
    "name": "SetProcessWindowStation", 
    "type": "skProc", 
    "code": "proc SetProcessWindowStation*(hWinSta: HWINSTA): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetProcessWindowStation\".}"
  }, 
  {
    "name": "GetProcessWindowStation", 
    "type": "skProc", 
    "code": "proc GetProcessWindowStation*(): HWINSTA {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetProcessWindowStation\".}"
  }, 
  {
    "name": "SetUserObjectSecurity", 
    "type": "skProc", 
    "code": "proc SetUserObjectSecurity*(hObj: HANDLE; pSIRequested: PSECURITY_INFORMATION; \u000A                            pSID: PSECURITY_DESCRIPTOR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetUserObjectSecurity\".}"
  }, 
  {
    "name": "GetUserObjectSecurity", 
    "type": "skProc", 
    "code": "proc GetUserObjectSecurity*(hObj: HANDLE; pSIRequested: PSECURITY_INFORMATION; \u000A                            pSID: PSECURITY_DESCRIPTOR; nLength: DWORD; \u000A                            lpnLengthNeeded: LPDWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetUserObjectSecurity\".}"
  }, 
  {
    "name": "TranslateMessage", 
    "type": "skProc", 
    "code": "proc TranslateMessage*(lpMsg: LPMSG): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"TranslateMessage\".}"
  }, 
  {
    "name": "SetMessageQueue", 
    "type": "skProc", 
    "code": "proc SetMessageQueue*(cMessagesMax: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetMessageQueue\".}"
  }, 
  {
    "name": "RegisterHotKey", 
    "type": "skProc", 
    "code": "proc RegisterHotKey*(wnd: HWND; anID: int32; fsModifiers: WINUINT; vk: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"RegisterHotKey\".}"
  }, 
  {
    "name": "UnregisterHotKey", 
    "type": "skProc", 
    "code": "proc UnregisterHotKey*(wnd: HWND; anID: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"UnregisterHotKey\".}"
  }, 
  {
    "name": "ExitWindowsEx", 
    "type": "skProc", 
    "code": "proc ExitWindowsEx*(uFlags: WINUINT; dwReserved: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ExitWindowsEx\".}"
  }, 
  {
    "name": "SwapMouseButton", 
    "type": "skProc", 
    "code": "proc SwapMouseButton*(fSwap: WINBOOL): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SwapMouseButton\".}"
  }, 
  {
    "name": "GetMessagePos", 
    "type": "skProc", 
    "code": "proc GetMessagePos*(): DWORD {.stdcall, dynlib: \"user32\", \u000A                               importc: \"GetMessagePos\".}"
  }, 
  {
    "name": "GetMessageTime", 
    "type": "skProc", 
    "code": "proc GetMessageTime*(): LONG {.stdcall, dynlib: \"user32\", \u000A                               importc: \"GetMessageTime\".}"
  }, 
  {
    "name": "GetMessageExtraInfo", 
    "type": "skProc", 
    "code": "proc GetMessageExtraInfo*(): LONG {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"GetMessageExtraInfo\".}"
  }, 
  {
    "name": "SetMessageExtraInfo", 
    "type": "skProc", 
    "code": "proc SetMessageExtraInfo*(lp: LPARAM): LPARAM {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetMessageExtraInfo\".}"
  }, 
  {
    "name": "BroadcastSystemMessage", 
    "type": "skProc", 
    "code": "proc BroadcastSystemMessage*(para1: DWORD; para2: LPDWORD; para3: WINUINT; \u000A                             para4: WPARAM; para5: LPARAM): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"BroadcastSystemMessage\".}"
  }, 
  {
    "name": "AttachThreadInput", 
    "type": "skProc", 
    "code": "proc AttachThreadInput*(idAttach: DWORD; idAttachTo: DWORD; fAttach: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"AttachThreadInput\".}"
  }, 
  {
    "name": "ReplyMessage", 
    "type": "skProc", 
    "code": "proc ReplyMessage*(lResult: LRESULT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ReplyMessage\".}"
  }, 
  {
    "name": "WaitMessage", 
    "type": "skProc", 
    "code": "proc WaitMessage*(): WINBOOL {.stdcall, dynlib: \"user32\", importc: \"WaitMessage\".}"
  }, 
  {
    "name": "WaitForInputIdle", 
    "type": "skProc", 
    "code": "proc WaitForInputIdle*(hProcess: HANDLE; dwMilliseconds: DWORD): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"WaitForInputIdle\".}"
  }, 
  {
    "name": "PostQuitMessage", 
    "type": "skProc", 
    "code": "proc PostQuitMessage*(nExitCode: int32) {.stdcall, dynlib: \"user32\", \u000A    importc: \"PostQuitMessage\".}"
  }, 
  {
    "name": "InSendMessage", 
    "type": "skProc", 
    "code": "proc InSendMessage*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                 importc: \"InSendMessage\".}"
  }, 
  {
    "name": "GetDoubleClickTime", 
    "type": "skProc", 
    "code": "proc GetDoubleClickTime*(): WINUINT {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"GetDoubleClickTime\".}"
  }, 
  {
    "name": "SetDoubleClickTime", 
    "type": "skProc", 
    "code": "proc SetDoubleClickTime*(para1: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetDoubleClickTime\".}"
  }, 
  {
    "name": "IsWindow", 
    "type": "skProc", 
    "code": "proc IsWindow*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"IsWindow\".}"
  }, 
  {
    "name": "IsMenu", 
    "type": "skProc", 
    "code": "proc IsMenu*(menu: HMENU): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"IsMenu\".}"
  }, 
  {
    "name": "IsChild", 
    "type": "skProc", 
    "code": "proc IsChild*(hWndParent: HWND; wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsChild\".}"
  }, 
  {
    "name": "DestroyWindow", 
    "type": "skProc", 
    "code": "proc DestroyWindow*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DestroyWindow\".}"
  }, 
  {
    "name": "ShowWindow", 
    "type": "skProc", 
    "code": "proc ShowWindow*(wnd: HWND; nCmdShow: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ShowWindow\".}"
  }, 
  {
    "name": "ShowWindowAsync", 
    "type": "skProc", 
    "code": "proc ShowWindowAsync*(wnd: HWND; nCmdShow: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ShowWindowAsync\".}"
  }, 
  {
    "name": "FlashWindow", 
    "type": "skProc", 
    "code": "proc FlashWindow*(wnd: HWND; bInvert: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"FlashWindow\".}"
  }, 
  {
    "name": "ShowOwnedPopups", 
    "type": "skProc", 
    "code": "proc ShowOwnedPopups*(wnd: HWND; fShow: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ShowOwnedPopups\".}"
  }, 
  {
    "name": "OpenIcon", 
    "type": "skProc", 
    "code": "proc OpenIcon*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"OpenIcon\".}"
  }, 
  {
    "name": "CloseWindow", 
    "type": "skProc", 
    "code": "proc CloseWindow*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"CloseWindow\".}"
  }, 
  {
    "name": "MoveWindow", 
    "type": "skProc", 
    "code": "proc MoveWindow*(wnd: HWND; X: int32; Y: int32; nWidth: int32; nHeight: int32; \u000A                 bRepaint: WINBOOL): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"MoveWindow\".}"
  }, 
  {
    "name": "SetWindowPos", 
    "type": "skProc", 
    "code": "proc SetWindowPos*(wnd: HWND; hWndInsertAfter: HWND; X: int32; Y: int32; \u000A                   cx: int32; cy: int32; uFlags: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowPos\".}"
  }, 
  {
    "name": "GetWindowPlacement", 
    "type": "skProc", 
    "code": "proc GetWindowPlacement*(wnd: HWND; lpwndpl: var WINDOWPLACEMENT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowPlacement\".}"
  }, 
  {
    "name": "SetWindowPlacement", 
    "type": "skProc", 
    "code": "proc SetWindowPlacement*(wnd: HWND; lpwndpl: var WINDOWPLACEMENT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetWindowPlacement\".}"
  }, 
  {
    "name": "GetWindowPlacement", 
    "type": "skProc", 
    "code": "proc GetWindowPlacement*(wnd: HWND; lpwndpl: PWINDOWPLACEMENT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowPlacement\".}"
  }, 
  {
    "name": "SetWindowPlacement", 
    "type": "skProc", 
    "code": "proc SetWindowPlacement*(wnd: HWND; lpwndpl: PWINDOWPLACEMENT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetWindowPlacement\".}"
  }, 
  {
    "name": "BeginDeferWindowPos", 
    "type": "skProc", 
    "code": "proc BeginDeferWindowPos*(nNumWindows: int32): HDWP {.stdcall, dynlib: \"user32\", \u000A    importc: \"BeginDeferWindowPos\".}"
  }, 
  {
    "name": "DeferWindowPos", 
    "type": "skProc", 
    "code": "proc DeferWindowPos*(hWinPosInfo: HDWP; wnd: HWND; hWndInsertAfter: HWND; \u000A                     x: int32; y: int32; cx: int32; cy: int32; uFlags: WINUINT): HDWP {.\u000A    stdcall, dynlib: \"user32\", importc: \"DeferWindowPos\".}"
  }, 
  {
    "name": "EndDeferWindowPos", 
    "type": "skProc", 
    "code": "proc EndDeferWindowPos*(hWinPosInfo: HDWP): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"EndDeferWindowPos\".}"
  }, 
  {
    "name": "IsWindowVisible", 
    "type": "skProc", 
    "code": "proc IsWindowVisible*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsWindowVisible\".}"
  }, 
  {
    "name": "IsIconic", 
    "type": "skProc", 
    "code": "proc IsIconic*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"IsIconic\".}"
  }, 
  {
    "name": "AnyPopup", 
    "type": "skProc", 
    "code": "proc AnyPopup*(): WINBOOL {.stdcall, dynlib: \"user32\", importc: \"AnyPopup\".}"
  }, 
  {
    "name": "BringWindowToTop", 
    "type": "skProc", 
    "code": "proc BringWindowToTop*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"BringWindowToTop\".}"
  }, 
  {
    "name": "IsZoomed", 
    "type": "skProc", 
    "code": "proc IsZoomed*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"IsZoomed\".}"
  }, 
  {
    "name": "EndDialog", 
    "type": "skProc", 
    "code": "proc EndDialog*(hDlg: HWND; nResult: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EndDialog\".}"
  }, 
  {
    "name": "GetDlgItem", 
    "type": "skProc", 
    "code": "proc GetDlgItem*(hDlg: HWND; nIDDlgItem: int32): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetDlgItem\".}"
  }, 
  {
    "name": "SetDlgItemInt", 
    "type": "skProc", 
    "code": "proc SetDlgItemInt*(hDlg: HWND; nIDDlgItem: int32; uValue: WINUINT; \u000A                    bSigned: WINBOOL): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetDlgItemInt\".}"
  }, 
  {
    "name": "GetDlgItemInt", 
    "type": "skProc", 
    "code": "proc GetDlgItemInt*(hDlg: HWND; nIDDlgItem: int32; lpTranslated: var WINBOOL; \u000A                    bSigned: WINBOOL): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetDlgItemInt\".}"
  }, 
  {
    "name": "CheckDlgButton", 
    "type": "skProc", 
    "code": "proc CheckDlgButton*(hDlg: HWND; nIDButton: int32; uCheck: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CheckDlgButton\".}"
  }, 
  {
    "name": "CheckRadioButton", 
    "type": "skProc", 
    "code": "proc CheckRadioButton*(hDlg: HWND; nIDFirstButton: int32; nIDLastButton: int32; \u000A                       nIDCheckButton: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CheckRadioButton\".}"
  }, 
  {
    "name": "IsDlgButtonChecked", 
    "type": "skProc", 
    "code": "proc IsDlgButtonChecked*(hDlg: HWND; nIDButton: int32): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDlgButtonChecked\".}"
  }, 
  {
    "name": "GetNextDlgGroupItem", 
    "type": "skProc", 
    "code": "proc GetNextDlgGroupItem*(hDlg: HWND; hCtl: HWND; bPrevious: WINBOOL): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetNextDlgGroupItem\".}"
  }, 
  {
    "name": "GetNextDlgTabItem", 
    "type": "skProc", 
    "code": "proc GetNextDlgTabItem*(hDlg: HWND; hCtl: HWND; bPrevious: WINBOOL): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetNextDlgTabItem\".}"
  }, 
  {
    "name": "GetDlgCtrlID", 
    "type": "skProc", 
    "code": "proc GetDlgCtrlID*(wnd: HWND): int32 {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"GetDlgCtrlID\".}"
  }, 
  {
    "name": "GetDialogBaseUnits", 
    "type": "skProc", 
    "code": "proc GetDialogBaseUnits*(): int32 {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"GetDialogBaseUnits\".}"
  }, 
  {
    "name": "OpenClipboard", 
    "type": "skProc", 
    "code": "proc OpenClipboard*(hWndNewOwner: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"OpenClipboard\".}"
  }, 
  {
    "name": "CloseClipboard", 
    "type": "skProc", 
    "code": "proc CloseClipboard*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                  importc: \"CloseClipboard\".}"
  }, 
  {
    "name": "GetClipboardOwner", 
    "type": "skProc", 
    "code": "proc GetClipboardOwner*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                  importc: \"GetClipboardOwner\".}"
  }, 
  {
    "name": "SetClipboardViewer", 
    "type": "skProc", 
    "code": "proc SetClipboardViewer*(hWndNewViewer: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetClipboardViewer\".}"
  }, 
  {
    "name": "GetClipboardViewer", 
    "type": "skProc", 
    "code": "proc GetClipboardViewer*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                   importc: \"GetClipboardViewer\".}"
  }, 
  {
    "name": "ChangeClipboardChain", 
    "type": "skProc", 
    "code": "proc ChangeClipboardChain*(hWndRemove: HWND; hWndNewNext: HWND): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeClipboardChain\".}"
  }, 
  {
    "name": "SetClipboardData", 
    "type": "skProc", 
    "code": "proc SetClipboardData*(uFormat: WINUINT; hMem: HANDLE): HANDLE {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetClipboardData\".}"
  }, 
  {
    "name": "GetClipboardData", 
    "type": "skProc", 
    "code": "proc GetClipboardData*(uFormat: WINUINT): HANDLE {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClipboardData\".}"
  }, 
  {
    "name": "CountClipboardFormats", 
    "type": "skProc", 
    "code": "proc CountClipboardFormats*(): int32 {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"CountClipboardFormats\".}"
  }, 
  {
    "name": "EnumClipboardFormats", 
    "type": "skProc", 
    "code": "proc EnumClipboardFormats*(format: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumClipboardFormats\".}"
  }, 
  {
    "name": "EmptyClipboard", 
    "type": "skProc", 
    "code": "proc EmptyClipboard*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                  importc: \"EmptyClipboard\".}"
  }, 
  {
    "name": "IsClipboardFormatAvailable", 
    "type": "skProc", 
    "code": "proc IsClipboardFormatAvailable*(format: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsClipboardFormatAvailable\".}"
  }, 
  {
    "name": "GetPriorityClipboardFormat", 
    "type": "skProc", 
    "code": "proc GetPriorityClipboardFormat*(paFormatPriorityList: var WINUINT; \u000A                                 cFormats: int32): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetPriorityClipboardFormat\".}"
  }, 
  {
    "name": "GetOpenClipboardWindow", 
    "type": "skProc", 
    "code": "proc GetOpenClipboardWindow*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                       importc: \"GetOpenClipboardWindow\".}"
  }, 
  {
    "name": "CharNextExA", 
    "type": "skProc", 
    "code": "proc CharNextExA*(CodePage: int16; lpCurrentChar: LPCSTR; dwFlags: DWORD): LPSTR {.\u000A    stdcall, dynlib: \"user32\", importc: \"CharNextExA\".}"
  }, 
  {
    "name": "CharPrevExA", 
    "type": "skProc", 
    "code": "proc CharPrevExA*(CodePage: int16; lpStart: LPCSTR; lpCurrentChar: LPCSTR; \u000A                  dwFlags: DWORD): LPSTR {.stdcall, dynlib: \"user32\", \u000A    importc: \"CharPrevExA\".}"
  }, 
  {
    "name": "SetFocus", 
    "type": "skProc", 
    "code": "proc SetFocus*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", importc: \"SetFocus\".}"
  }, 
  {
    "name": "GetActiveWindow", 
    "type": "skProc", 
    "code": "proc GetActiveWindow*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                importc: \"GetActiveWindow\".}"
  }, 
  {
    "name": "GetFocus", 
    "type": "skProc", 
    "code": "proc GetFocus*(): HWND {.stdcall, dynlib: \"user32\", importc: \"GetFocus\".}"
  }, 
  {
    "name": "GetKBCodePage", 
    "type": "skProc", 
    "code": "proc GetKBCodePage*(): WINUINT {.stdcall, dynlib: \"user32\", \u000A                                 importc: \"GetKBCodePage\".}"
  }, 
  {
    "name": "GetKeyState", 
    "type": "skProc", 
    "code": "proc GetKeyState*(nVirtKey: int32): SHORT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetKeyState\".}"
  }, 
  {
    "name": "GetAsyncKeyState", 
    "type": "skProc", 
    "code": "proc GetAsyncKeyState*(vKey: int32): SHORT {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetAsyncKeyState\".}"
  }, 
  {
    "name": "GetKeyboardState", 
    "type": "skProc", 
    "code": "proc GetKeyboardState*(lpKeyState: PBYTE): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetKeyboardState\".}"
  }, 
  {
    "name": "SetKeyboardState", 
    "type": "skProc", 
    "code": "proc SetKeyboardState*(lpKeyState: LPBYTE): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetKeyboardState\".}"
  }, 
  {
    "name": "GetKeyboardType", 
    "type": "skProc", 
    "code": "proc GetKeyboardType*(nTypeFlag: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetKeyboardType\".}"
  }, 
  {
    "name": "ToAscii", 
    "type": "skProc", 
    "code": "proc ToAscii*(uVirtKey: WINUINT; uScanCode: WINUINT; lpKeyState: PBYTE; \u000A              lpChar: LPWORD; uFlags: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"ToAscii\".}"
  }, 
  {
    "name": "ToAsciiEx", 
    "type": "skProc", 
    "code": "proc ToAsciiEx*(uVirtKey: WINUINT; uScanCode: WINUINT; lpKeyState: PBYTE; \u000A                lpChar: LPWORD; uFlags: WINUINT; dwhkl: HKL): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"ToAsciiEx\".}"
  }, 
  {
    "name": "ToUnicode", 
    "type": "skProc", 
    "code": "proc ToUnicode*(wVirtKey: WINUINT; wScanCode: WINUINT; lpKeyState: PBYTE; \u000A                pwszBuff: LPWSTR; cchBuff: int32; wFlags: WINUINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ToUnicode\".}"
  }, 
  {
    "name": "OemKeyScan", 
    "type": "skProc", 
    "code": "proc OemKeyScan*(wOemChar: int16): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"OemKeyScan\".}"
  }, 
  {
    "name": "keybd_event", 
    "type": "skProc", 
    "code": "proc keybd_event*(bVk: int8; bScan: int8; dwFlags: DWORD; dwExtraInfo: DWORD) {.\u000A    stdcall, dynlib: \"user32\", importc: \"keybd_event\".}"
  }, 
  {
    "name": "mouse_event", 
    "type": "skProc", 
    "code": "proc mouse_event*(dwFlags: DWORD; dx: DWORD; dy: DWORD; cButtons: DWORD; \u000A                  dwExtraInfo: DWORD) {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"mouse_event\".}"
  }, 
  {
    "name": "GetInputState", 
    "type": "skProc", 
    "code": "proc GetInputState*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                 importc: \"GetInputState\".}"
  }, 
  {
    "name": "GetQueueStatus", 
    "type": "skProc", 
    "code": "proc GetQueueStatus*(flags: WINUINT): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetQueueStatus\".}"
  }, 
  {
    "name": "GetCapture", 
    "type": "skProc", 
    "code": "proc GetCapture*(): HWND {.stdcall, dynlib: \"user32\", importc: \"GetCapture\".}"
  }, 
  {
    "name": "SetCapture", 
    "type": "skProc", 
    "code": "proc SetCapture*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"SetCapture\".}"
  }, 
  {
    "name": "ReleaseCapture", 
    "type": "skProc", 
    "code": "proc ReleaseCapture*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                  importc: \"ReleaseCapture\".}"
  }, 
  {
    "name": "MsgWaitForMultipleObjects", 
    "type": "skProc", 
    "code": "proc MsgWaitForMultipleObjects*(nCount: DWORD; pHandles: LPHANDLE; \u000A                                fWaitAll: WINBOOL; dwMilliseconds: DWORD; \u000A                                dwWakeMask: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"MsgWaitForMultipleObjects\".}"
  }, 
  {
    "name": "SetTimer", 
    "type": "skProc", 
    "code": "proc SetTimer*(wnd: HWND; nIDEvent: WINUINT; uElapse: WINUINT; \u000A               lpTimerFunc: TIMERPROC): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetTimer\".}"
  }, 
  {
    "name": "KillTimer", 
    "type": "skProc", 
    "code": "proc KillTimer*(wnd: HWND; uIDEvent: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"KillTimer\".}"
  }, 
  {
    "name": "IsWindowUnicode", 
    "type": "skProc", 
    "code": "proc IsWindowUnicode*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsWindowUnicode\".}"
  }, 
  {
    "name": "EnableWindow", 
    "type": "skProc", 
    "code": "proc EnableWindow*(wnd: HWND; bEnable: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnableWindow\".}"
  }, 
  {
    "name": "IsWindowEnabled", 
    "type": "skProc", 
    "code": "proc IsWindowEnabled*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsWindowEnabled\".}"
  }, 
  {
    "name": "DestroyAcceleratorTable", 
    "type": "skProc", 
    "code": "proc DestroyAcceleratorTable*(hAccel: HACCEL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DestroyAcceleratorTable\".}"
  }, 
  {
    "name": "GetSystemMetrics", 
    "type": "skProc", 
    "code": "proc GetSystemMetrics*(nIndex: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetSystemMetrics\".}"
  }, 
  {
    "name": "GetMenu", 
    "type": "skProc", 
    "code": "proc GetMenu*(wnd: HWND): HMENU {.stdcall, dynlib: \"user32\", importc: \"GetMenu\".}"
  }, 
  {
    "name": "SetMenu", 
    "type": "skProc", 
    "code": "proc SetMenu*(wnd: HWND; menu: HMENU): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetMenu\".}"
  }, 
  {
    "name": "HiliteMenuItem", 
    "type": "skProc", 
    "code": "proc HiliteMenuItem*(wnd: HWND; menu: HMENU; uIDHiliteItem: WINUINT; \u000A                     uHilite: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"HiliteMenuItem\".}"
  }, 
  {
    "name": "GetMenuState", 
    "type": "skProc", 
    "code": "proc GetMenuState*(menu: HMENU; uId: WINUINT; uFlags: WINUINT): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetMenuState\".}"
  }, 
  {
    "name": "DrawMenuBar", 
    "type": "skProc", 
    "code": "proc DrawMenuBar*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"DrawMenuBar\".}"
  }, 
  {
    "name": "GetSystemMenu", 
    "type": "skProc", 
    "code": "proc GetSystemMenu*(wnd: HWND; bRevert: WINBOOL): HMENU {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetSystemMenu\".}"
  }, 
  {
    "name": "CreateMenu", 
    "type": "skProc", 
    "code": "proc CreateMenu*(): HMENU {.stdcall, dynlib: \"user32\", importc: \"CreateMenu\".}"
  }, 
  {
    "name": "CreatePopupMenu", 
    "type": "skProc", 
    "code": "proc CreatePopupMenu*(): HMENU {.stdcall, dynlib: \"user32\", \u000A                                 importc: \"CreatePopupMenu\".}"
  }, 
  {
    "name": "DestroyMenu", 
    "type": "skProc", 
    "code": "proc DestroyMenu*(menu: HMENU): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DestroyMenu\".}"
  }, 
  {
    "name": "CheckMenuItem", 
    "type": "skProc", 
    "code": "proc CheckMenuItem*(menu: HMENU; uIDCheckItem: WINUINT; uCheck: WINUINT): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"CheckMenuItem\".}"
  }, 
  {
    "name": "EnableMenuItem", 
    "type": "skProc", 
    "code": "proc EnableMenuItem*(menu: HMENU; uIDEnableItem: WINUINT; uEnable: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnableMenuItem\".}"
  }, 
  {
    "name": "GetSubMenu", 
    "type": "skProc", 
    "code": "proc GetSubMenu*(menu: HMENU; nPos: int32): HMENU {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetSubMenu\".}"
  }, 
  {
    "name": "GetMenuItemID", 
    "type": "skProc", 
    "code": "proc GetMenuItemID*(menu: HMENU; nPos: int32): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuItemID\".}"
  }, 
  {
    "name": "GetMenuItemCount", 
    "type": "skProc", 
    "code": "proc GetMenuItemCount*(menu: HMENU): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMenuItemCount\".}"
  }, 
  {
    "name": "RemoveMenu", 
    "type": "skProc", 
    "code": "proc RemoveMenu*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"RemoveMenu\".}"
  }, 
  {
    "name": "DeleteMenu", 
    "type": "skProc", 
    "code": "proc DeleteMenu*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DeleteMenu\".}"
  }, 
  {
    "name": "SetMenuItemBitmaps", 
    "type": "skProc", 
    "code": "proc SetMenuItemBitmaps*(menu: HMENU; uPosition: WINUINT; uFlags: WINUINT; \u000A                         hBitmapUnchecked: HBITMAP; hBitmapChecked: HBITMAP): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetMenuItemBitmaps\".}"
  }, 
  {
    "name": "GetMenuCheckMarkDimensions", 
    "type": "skProc", 
    "code": "proc GetMenuCheckMarkDimensions*(): LONG {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMenuCheckMarkDimensions\".}"
  }, 
  {
    "name": "TrackPopupMenu", 
    "type": "skProc", 
    "code": "proc TrackPopupMenu*(menu: HMENU; uFlags: WINUINT; x: int32; y: int32; \u000A                     nReserved: int32; wnd: HWND; prcRect: var RECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"TrackPopupMenu\".}"
  }, 
  {
    "name": "GetMenuDefaultItem", 
    "type": "skProc", 
    "code": "proc GetMenuDefaultItem*(menu: HMENU; fByPos: WINUINT; gmdiFlags: WINUINT): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetMenuDefaultItem\".}"
  }, 
  {
    "name": "SetMenuDefaultItem", 
    "type": "skProc", 
    "code": "proc SetMenuDefaultItem*(menu: HMENU; uItem: WINUINT; fByPos: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetMenuDefaultItem\".}"
  }, 
  {
    "name": "GetMenuItemRect", 
    "type": "skProc", 
    "code": "proc GetMenuItemRect*(wnd: HWND; menu: HMENU; uItem: WINUINT; lprcItem: LPRECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetMenuItemRect\".}"
  }, 
  {
    "name": "MenuItemFromPoint", 
    "type": "skProc", 
    "code": "proc MenuItemFromPoint*(wnd: HWND; menu: HMENU; ptScreen: POINT): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"MenuItemFromPoint\".}"
  }, 
  {
    "name": "DragObject", 
    "type": "skProc", 
    "code": "proc DragObject*(para1: HWND; para2: HWND; para3: WINUINT; para4: DWORD; \u000A                 para5: HCURSOR): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"DragObject\".}"
  }, 
  {
    "name": "DragDetect", 
    "type": "skProc", 
    "code": "proc DragDetect*(wnd: HWND; pt: POINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DragDetect\".}"
  }, 
  {
    "name": "DrawIcon", 
    "type": "skProc", 
    "code": "proc DrawIcon*(hDC: HDC; X: int32; Y: int32; icon: HICON): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawIcon\".}"
  }, 
  {
    "name": "UpdateWindow", 
    "type": "skProc", 
    "code": "proc UpdateWindow*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"UpdateWindow\".}"
  }, 
  {
    "name": "SetActiveWindow", 
    "type": "skProc", 
    "code": "proc SetActiveWindow*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetActiveWindow\".}"
  }, 
  {
    "name": "GetForegroundWindow", 
    "type": "skProc", 
    "code": "proc GetForegroundWindow*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"GetForegroundWindow\".}"
  }, 
  {
    "name": "PaintDesktop", 
    "type": "skProc", 
    "code": "proc PaintDesktop*(hdc: HDC): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"PaintDesktop\".}"
  }, 
  {
    "name": "SetForegroundWindow", 
    "type": "skProc", 
    "code": "proc SetForegroundWindow*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetForegroundWindow\".}"
  }, 
  {
    "name": "WindowFromDC", 
    "type": "skProc", 
    "code": "proc WindowFromDC*(hDC: HDC): HWND {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"WindowFromDC\".}"
  }, 
  {
    "name": "GetDC", 
    "type": "skProc", 
    "code": "proc GetDC*(wnd: HWND): HDC {.stdcall, dynlib: \"user32\", importc: \"GetDC\".}"
  }, 
  {
    "name": "GetDCEx", 
    "type": "skProc", 
    "code": "proc GetDCEx*(wnd: HWND; hrgnClip: HRGN; flags: DWORD): HDC {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetDCEx\".}"
  }, 
  {
    "name": "GetWindowDC", 
    "type": "skProc", 
    "code": "proc GetWindowDC*(wnd: HWND): HDC {.stdcall, dynlib: \"user32\", \u000A                                    importc: \"GetWindowDC\".}"
  }, 
  {
    "name": "ReleaseDC", 
    "type": "skProc", 
    "code": "proc ReleaseDC*(wnd: HWND; hDC: HDC): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"ReleaseDC\".}"
  }, 
  {
    "name": "BeginPaint", 
    "type": "skProc", 
    "code": "proc BeginPaint*(wnd: HWND; lpPaint: LPPAINTSTRUCT): HDC {.stdcall, \u000A    dynlib: \"user32\", importc: \"BeginPaint\".}"
  }, 
  {
    "name": "EndPaint", 
    "type": "skProc", 
    "code": "proc EndPaint*(wnd: HWND; lpPaint: LPPAINTSTRUCT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EndPaint\".}"
  }, 
  {
    "name": "GetUpdateRect", 
    "type": "skProc", 
    "code": "proc GetUpdateRect*(wnd: HWND; lpRect: LPRECT; bErase: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUpdateRect\".}"
  }, 
  {
    "name": "GetUpdateRgn", 
    "type": "skProc", 
    "code": "proc GetUpdateRgn*(wnd: HWND; hRgn: HRGN; bErase: WINBOOL): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetUpdateRgn\".}"
  }, 
  {
    "name": "SetWindowRgn", 
    "type": "skProc", 
    "code": "proc SetWindowRgn*(wnd: HWND; hRgn: HRGN; bRedraw: WINBOOL): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowRgn\".}"
  }, 
  {
    "name": "GetWindowRgn", 
    "type": "skProc", 
    "code": "proc GetWindowRgn*(wnd: HWND; hRgn: HRGN): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowRgn\".}"
  }, 
  {
    "name": "ExcludeUpdateRgn", 
    "type": "skProc", 
    "code": "proc ExcludeUpdateRgn*(hDC: HDC; wnd: HWND): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"ExcludeUpdateRgn\".}"
  }, 
  {
    "name": "InvalidateRect", 
    "type": "skProc", 
    "code": "proc InvalidateRect*(wnd: HWND; lpRect: var RECT; bErase: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"InvalidateRect\".}"
  }, 
  {
    "name": "InvalidateRect", 
    "type": "skProc", 
    "code": "proc InvalidateRect*(wnd: HWND; lpRect: LPRECT; bErase: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"InvalidateRect\".}"
  }, 
  {
    "name": "ValidateRect", 
    "type": "skProc", 
    "code": "proc ValidateRect*(wnd: HWND; lpRect: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ValidateRect\".}"
  }, 
  {
    "name": "ValidateRect", 
    "type": "skProc", 
    "code": "proc ValidateRect*(wnd: HWND; lpRect: LPRECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ValidateRect\".}"
  }, 
  {
    "name": "InvalidateRgn", 
    "type": "skProc", 
    "code": "proc InvalidateRgn*(wnd: HWND; hRgn: HRGN; bErase: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InvalidateRgn\".}"
  }, 
  {
    "name": "ValidateRgn", 
    "type": "skProc", 
    "code": "proc ValidateRgn*(wnd: HWND; hRgn: HRGN): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ValidateRgn\".}"
  }, 
  {
    "name": "RedrawWindow", 
    "type": "skProc", 
    "code": "proc RedrawWindow*(wnd: HWND; lprcUpdate: var RECT; hrgnUpdate: HRGN; \u000A                   flags: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"RedrawWindow\".}"
  }, 
  {
    "name": "RedrawWindow", 
    "type": "skProc", 
    "code": "proc RedrawWindow*(wnd: HWND; lprcUpdate: LPRECT; hrgnUpdate: HRGN; \u000A                   flags: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"RedrawWindow\".}"
  }, 
  {
    "name": "LockWindowUpdate", 
    "type": "skProc", 
    "code": "proc LockWindowUpdate*(hWndLock: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"LockWindowUpdate\".}"
  }, 
  {
    "name": "ScrollWindow", 
    "type": "skProc", 
    "code": "proc ScrollWindow*(wnd: HWND; XAmount: int32; YAmount: int32; lpRect: var RECT; \u000A                   lpClipRect: var RECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ScrollWindow\".}"
  }, 
  {
    "name": "ScrollDC", 
    "type": "skProc", 
    "code": "proc ScrollDC*(hDC: HDC; dx: int32; dy: int32; lprcScroll: var RECT; \u000A               lprcClip: var RECT; hrgnUpdate: HRGN; lprcUpdate: LPRECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"ScrollDC\".}"
  }, 
  {
    "name": "ScrollWindowEx", 
    "type": "skProc", 
    "code": "proc ScrollWindowEx*(wnd: HWND; dx: int32; dy: int32; prcScroll: var RECT; \u000A                     prcClip: var RECT; hrgnUpdate: HRGN; prcUpdate: LPRECT; \u000A                     flags: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"ScrollWindowEx\".}"
  }, 
  {
    "name": "SetScrollPos", 
    "type": "skProc", 
    "code": "proc SetScrollPos*(wnd: HWND; nBar: int32; nPos: int32; bRedraw: WINBOOL): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetScrollPos\".}"
  }, 
  {
    "name": "GetScrollPos", 
    "type": "skProc", 
    "code": "proc GetScrollPos*(wnd: HWND; nBar: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetScrollPos\".}"
  }, 
  {
    "name": "SetScrollRange", 
    "type": "skProc", 
    "code": "proc SetScrollRange*(wnd: HWND; nBar: int32; nMinPos: int32; nMaxPos: int32; \u000A                     bRedraw: WINBOOL): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetScrollRange\".}"
  }, 
  {
    "name": "GetScrollRange", 
    "type": "skProc", 
    "code": "proc GetScrollRange*(wnd: HWND; nBar: int32; lpMinPos: LPINT; lpMaxPos: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetScrollRange\".}"
  }, 
  {
    "name": "ShowScrollBar", 
    "type": "skProc", 
    "code": "proc ShowScrollBar*(wnd: HWND; wBar: int32; bShow: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ShowScrollBar\".}"
  }, 
  {
    "name": "EnableScrollBar", 
    "type": "skProc", 
    "code": "proc EnableScrollBar*(wnd: HWND; wSBflags: WINUINT; wArrows: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnableScrollBar\".}"
  }, 
  {
    "name": "GetClientRect", 
    "type": "skProc", 
    "code": "proc GetClientRect*(wnd: HWND; lpRect: LPRECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClientRect\".}"
  }, 
  {
    "name": "GetWindowRect", 
    "type": "skProc", 
    "code": "proc GetWindowRect*(wnd: HWND; lpRect: LPRECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowRect\".}"
  }, 
  {
    "name": "AdjustWindowRect", 
    "type": "skProc", 
    "code": "proc AdjustWindowRect*(lpRect: LPRECT; dwStyle: DWORD; bMenu: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"AdjustWindowRect\".}"
  }, 
  {
    "name": "AdjustWindowRectEx", 
    "type": "skProc", 
    "code": "proc AdjustWindowRectEx*(lpRect: LPRECT; dwStyle: DWORD; bMenu: WINBOOL; \u000A                         dwExStyle: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"AdjustWindowRectEx\".}"
  }, 
  {
    "name": "SetWindowContextHelpId", 
    "type": "skProc", 
    "code": "proc SetWindowContextHelpId*(para1: HWND; para2: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowContextHelpId\".}"
  }, 
  {
    "name": "GetWindowContextHelpId", 
    "type": "skProc", 
    "code": "proc GetWindowContextHelpId*(para1: HWND): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindowContextHelpId\".}"
  }, 
  {
    "name": "SetMenuContextHelpId", 
    "type": "skProc", 
    "code": "proc SetMenuContextHelpId*(para1: HMENU; para2: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetMenuContextHelpId\".}"
  }, 
  {
    "name": "GetMenuContextHelpId", 
    "type": "skProc", 
    "code": "proc GetMenuContextHelpId*(para1: HMENU): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMenuContextHelpId\".}"
  }, 
  {
    "name": "MessageBeep", 
    "type": "skProc", 
    "code": "proc MessageBeep*(uType: WINUINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"MessageBeep\".}"
  }, 
  {
    "name": "ShowCursor", 
    "type": "skProc", 
    "code": "proc ShowCursor*(bShow: WINBOOL): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"ShowCursor\".}"
  }, 
  {
    "name": "SetCursorPos", 
    "type": "skProc", 
    "code": "proc SetCursorPos*(X: int32; Y: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetCursorPos\".}"
  }, 
  {
    "name": "SetCursor", 
    "type": "skProc", 
    "code": "proc SetCursor*(cursor: HCURSOR): HCURSOR {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetCursor\".}"
  }, 
  {
    "name": "GetCursorPos", 
    "type": "skProc", 
    "code": "proc GetCursorPos*(lpPoint: LPPOINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetCursorPos\".}"
  }, 
  {
    "name": "ClipCursor", 
    "type": "skProc", 
    "code": "proc ClipCursor*(lpRect: LPRECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ClipCursor\".}"
  }, 
  {
    "name": "GetClipCursor", 
    "type": "skProc", 
    "code": "proc GetClipCursor*(lpRect: LPRECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClipCursor\".}"
  }, 
  {
    "name": "GetCursor", 
    "type": "skProc", 
    "code": "proc GetCursor*(): HCURSOR {.stdcall, dynlib: \"user32\", importc: \"GetCursor\".}"
  }, 
  {
    "name": "CreateCaret", 
    "type": "skProc", 
    "code": "proc CreateCaret*(wnd: HWND; hBitmap: HBITMAP; nWidth: int32; nHeight: int32): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateCaret\".}"
  }, 
  {
    "name": "GetCaretBlinkTime", 
    "type": "skProc", 
    "code": "proc GetCaretBlinkTime*(): WINUINT {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"GetCaretBlinkTime\".}"
  }, 
  {
    "name": "SetCaretBlinkTime", 
    "type": "skProc", 
    "code": "proc SetCaretBlinkTime*(uMSeconds: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetCaretBlinkTime\".}"
  }, 
  {
    "name": "DestroyCaret", 
    "type": "skProc", 
    "code": "proc DestroyCaret*(): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                importc: \"DestroyCaret\".}"
  }, 
  {
    "name": "HideCaret", 
    "type": "skProc", 
    "code": "proc HideCaret*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"HideCaret\".}"
  }, 
  {
    "name": "ShowCaret", 
    "type": "skProc", 
    "code": "proc ShowCaret*(wnd: HWND): WINBOOL {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"ShowCaret\".}"
  }, 
  {
    "name": "SetCaretPos", 
    "type": "skProc", 
    "code": "proc SetCaretPos*(X: int32; Y: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetCaretPos\".}"
  }, 
  {
    "name": "GetCaretPos", 
    "type": "skProc", 
    "code": "proc GetCaretPos*(lpPoint: LPPOINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetCaretPos\".}"
  }, 
  {
    "name": "ClientToScreen", 
    "type": "skProc", 
    "code": "proc ClientToScreen*(wnd: HWND; lpPoint: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ClientToScreen\".}"
  }, 
  {
    "name": "ScreenToClient", 
    "type": "skProc", 
    "code": "proc ScreenToClient*(wnd: HWND; lpPoint: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ScreenToClient\".}"
  }, 
  {
    "name": "MapWindowPoints", 
    "type": "skProc", 
    "code": "proc MapWindowPoints*(hWndFrom: HWND; hWndTo: HWND; lpPoints: LPPOINT; \u000A                      cPoints: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"MapWindowPoints\".}"
  }, 
  {
    "name": "WindowFromPoint", 
    "type": "skProc", 
    "code": "proc WindowFromPoint*(Point: POINT): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"WindowFromPoint\".}"
  }, 
  {
    "name": "ChildWindowFromPoint", 
    "type": "skProc", 
    "code": "proc ChildWindowFromPoint*(hWndParent: HWND; Point: POINT): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"ChildWindowFromPoint\".}"
  }, 
  {
    "name": "GetSysColor", 
    "type": "skProc", 
    "code": "proc GetSysColor*(nIndex: int32): DWORD {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetSysColor\".}"
  }, 
  {
    "name": "GetSysColorBrush", 
    "type": "skProc", 
    "code": "proc GetSysColorBrush*(nIndex: int32): HBRUSH {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetSysColorBrush\".}"
  }, 
  {
    "name": "SetSysColors", 
    "type": "skProc", 
    "code": "proc SetSysColors*(cElements: int32; lpaElements: var WINT; \u000A                   lpaRgbValues: var COLORREF): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetSysColors\".}"
  }, 
  {
    "name": "DrawFocusRect", 
    "type": "skProc", 
    "code": "proc DrawFocusRect*(hDC: HDC; lprc: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawFocusRect\".}"
  }, 
  {
    "name": "FillRect", 
    "type": "skProc", 
    "code": "proc FillRect*(hDC: HDC; lprc: var RECT; hbr: HBRUSH): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"FillRect\".}"
  }, 
  {
    "name": "FrameRect", 
    "type": "skProc", 
    "code": "proc FrameRect*(hDC: HDC; lprc: var RECT; hbr: HBRUSH): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"FrameRect\".}"
  }, 
  {
    "name": "InvertRect", 
    "type": "skProc", 
    "code": "proc InvertRect*(hDC: HDC; lprc: var RECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"InvertRect\".}"
  }, 
  {
    "name": "SetRect", 
    "type": "skProc", 
    "code": "proc SetRect*(lprc: LPRECT; xLeft: int32; yTop: int32; xRight: int32; \u000A              yBottom: int32): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetRect\".}"
  }, 
  {
    "name": "SetRectEmpty", 
    "type": "skProc", 
    "code": "proc SetRectEmpty*(lprc: LPRECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetRectEmpty\".}"
  }, 
  {
    "name": "CopyRect", 
    "type": "skProc", 
    "code": "proc CopyRect*(lprcDst: LPRECT; lprcSrc: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyRect\".}"
  }, 
  {
    "name": "InflateRect", 
    "type": "skProc", 
    "code": "proc InflateRect*(lprc: LPRECT; dx: int32; dy: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InflateRect\".}"
  }, 
  {
    "name": "IntersectRect", 
    "type": "skProc", 
    "code": "proc IntersectRect*(lprcDst: LPRECT; lprcSrc1: var RECT; lprcSrc2: var RECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"IntersectRect\".}"
  }, 
  {
    "name": "UnionRect", 
    "type": "skProc", 
    "code": "proc UnionRect*(lprcDst: LPRECT; lprcSrc1: var RECT; lprcSrc2: var RECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnionRect\".}"
  }, 
  {
    "name": "SubtractRect", 
    "type": "skProc", 
    "code": "proc SubtractRect*(lprcDst: LPRECT; lprcSrc1: var RECT; lprcSrc2: var RECT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SubtractRect\".}"
  }, 
  {
    "name": "OffsetRect", 
    "type": "skProc", 
    "code": "proc OffsetRect*(lprc: LPRECT; dx: int32; dy: int32): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OffsetRect\".}"
  }, 
  {
    "name": "IsRectEmpty", 
    "type": "skProc", 
    "code": "proc IsRectEmpty*(lprc: var RECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"IsRectEmpty\".}"
  }, 
  {
    "name": "EqualRect", 
    "type": "skProc", 
    "code": "proc EqualRect*(lprc1: var RECT; lprc2: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EqualRect\".}"
  }, 
  {
    "name": "PtInRect", 
    "type": "skProc", 
    "code": "proc PtInRect*(lprc: var RECT; pt: POINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"PtInRect\".}"
  }, 
  {
    "name": "PtInRect", 
    "type": "skProc", 
    "code": "proc PtInRect*(lprc: LPRECT; pt: POINT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"PtInRect\".}"
  }, 
  {
    "name": "GetWindowWord", 
    "type": "skProc", 
    "code": "proc GetWindowWord*(wnd: HWND; nIndex: int32): int16 {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowWord\".}"
  }, 
  {
    "name": "SetWindowWord", 
    "type": "skProc", 
    "code": "proc SetWindowWord*(wnd: HWND; nIndex: int32; wNewWord: int16): int16 {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetWindowWord\".}"
  }, 
  {
    "name": "GetClassWord", 
    "type": "skProc", 
    "code": "proc GetClassWord*(wnd: HWND; nIndex: int32): int16 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClassWord\".}"
  }, 
  {
    "name": "SetClassWord", 
    "type": "skProc", 
    "code": "proc SetClassWord*(wnd: HWND; nIndex: int32; wNewWord: int16): int16 {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetClassWord\".}"
  }, 
  {
    "name": "GetDesktopWindow", 
    "type": "skProc", 
    "code": "proc GetDesktopWindow*(): HWND {.stdcall, dynlib: \"user32\", \u000A                                 importc: \"GetDesktopWindow\".}"
  }, 
  {
    "name": "GetParent", 
    "type": "skProc", 
    "code": "proc GetParent*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A                                   importc: \"GetParent\".}"
  }, 
  {
    "name": "SetParent", 
    "type": "skProc", 
    "code": "proc SetParent*(hWndChild: HWND; hWndNewParent: HWND): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetParent\".}"
  }, 
  {
    "name": "EnumChildWindows", 
    "type": "skProc", 
    "code": "proc EnumChildWindows*(hWndParent: HWND; lpEnumFunc: ENUMWINDOWSPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumChildWindows\".}"
  }, 
  {
    "name": "EnumWindows", 
    "type": "skProc", 
    "code": "proc EnumWindows*(lpEnumFunc: ENUMWINDOWSPROC; lp: LPARAM): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumWindows\".}"
  }, 
  {
    "name": "EnumThreadWindows", 
    "type": "skProc", 
    "code": "proc EnumThreadWindows*(dwThreadId: DWORD; lpfn: ENUMWINDOWSPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumThreadWindows\".}"
  }, 
  {
    "name": "EnumTaskWindows", 
    "type": "skProc", 
    "code": "proc EnumTaskWindows*(hTask: HWND; lpfn: FARPROC; lp: LPARAM): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"EnumThreadWindows\".}"
  }, 
  {
    "name": "GetTopWindow", 
    "type": "skProc", 
    "code": "proc GetTopWindow*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"GetTopWindow\".}"
  }, 
  {
    "name": "GetWindowThreadProcessId", 
    "type": "skProc", 
    "code": "proc GetWindowThreadProcessId*(wnd: HWND; lpdwProcessId: LPDWORD): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetWindowThreadProcessId\".}"
  }, 
  {
    "name": "GetLastActivePopup", 
    "type": "skProc", 
    "code": "proc GetLastActivePopup*(wnd: HWND): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetLastActivePopup\".}"
  }, 
  {
    "name": "GetWindow", 
    "type": "skProc", 
    "code": "proc GetWindow*(wnd: HWND; uCmd: WINUINT): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindow\".}"
  }, 
  {
    "name": "UnhookWindowsHook", 
    "type": "skProc", 
    "code": "proc UnhookWindowsHook*(nCode: int32; pfnFilterProc: HOOKPROC): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnhookWindowsHook\".}"
  }, 
  {
    "name": "UnhookWindowsHookEx", 
    "type": "skProc", 
    "code": "proc UnhookWindowsHookEx*(hhk: HHOOK): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"UnhookWindowsHookEx\".}"
  }, 
  {
    "name": "CallNextHookEx", 
    "type": "skProc", 
    "code": "proc CallNextHookEx*(hhk: HHOOK; nCode: int32; wp: WPARAM; lp: LPARAM): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"CallNextHookEx\".}"
  }, 
  {
    "name": "CheckMenuRadioItem", 
    "type": "skProc", 
    "code": "proc CheckMenuRadioItem*(para1: HMENU; para2: WINUINT; para3: WINUINT; \u000A                         para4: WINUINT; para5: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CheckMenuRadioItem\".}"
  }, 
  {
    "name": "CreateCursor", 
    "type": "skProc", 
    "code": "proc CreateCursor*(hInst: HINST; xHotSpot: int32; yHotSpot: int32; \u000A                   nWidth: int32; nHeight: int32; pvANDPlane: pointer; \u000A                   pvXORPlane: pointer): HCURSOR {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateCursor\".}"
  }, 
  {
    "name": "DestroyCursor", 
    "type": "skProc", 
    "code": "proc DestroyCursor*(cursor: HCURSOR): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DestroyCursor\".}"
  }, 
  {
    "name": "SetSystemCursor", 
    "type": "skProc", 
    "code": "proc SetSystemCursor*(hcur: HCURSOR; anID: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetSystemCursor\".}"
  }, 
  {
    "name": "CreateIcon", 
    "type": "skProc", 
    "code": "proc CreateIcon*(hInstance: HINST; nWidth: int32; nHeight: int32; cPlanes: int8; \u000A                 cBitsPixel: int8; lpbANDbits: var int8; lpbXORbits: var int8): HICON {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateIcon\".}"
  }, 
  {
    "name": "DestroyIcon", 
    "type": "skProc", 
    "code": "proc DestroyIcon*(icon: HICON): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DestroyIcon\".}"
  }, 
  {
    "name": "LookupIconIdFromDirectory", 
    "type": "skProc", 
    "code": "proc LookupIconIdFromDirectory*(presbits: PBYTE; fIcon: WINBOOL): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"LookupIconIdFromDirectory\".}"
  }, 
  {
    "name": "LookupIconIdFromDirectoryEx", 
    "type": "skProc", 
    "code": "proc LookupIconIdFromDirectoryEx*(presbits: PBYTE; fIcon: WINBOOL; \u000A                                  cxDesired: int32; cyDesired: int32; \u000A                                  Flags: WINUINT): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"LookupIconIdFromDirectoryEx\".}"
  }, 
  {
    "name": "CreateIconFromResource", 
    "type": "skProc", 
    "code": "proc CreateIconFromResource*(presbits: PBYTE; dwResSize: DWORD; fIcon: WINBOOL; \u000A                             dwVer: DWORD): HICON {.stdcall, dynlib: \"user32\", \u000A    importc: \"CreateIconFromResource\".}"
  }, 
  {
    "name": "CreateIconFromResourceEx", 
    "type": "skProc", 
    "code": "proc CreateIconFromResourceEx*(presbits: PBYTE; dwResSize: DWORD; \u000A                               fIcon: WINBOOL; dwVer: DWORD; cxDesired: int32; \u000A                               cyDesired: int32; Flags: WINUINT): HICON {.\u000A    stdcall, dynlib: \"user32\", importc: \"CreateIconFromResourceEx\".}"
  }, 
  {
    "name": "CopyImage", 
    "type": "skProc", 
    "code": "proc CopyImage*(para1: HANDLE; para2: WINUINT; para3: int32; para4: int32; \u000A                para5: WINUINT): HICON {.stdcall, dynlib: \"user32\", \u000A    importc: \"CopyImage\".}"
  }, 
  {
    "name": "CreateIconIndirect", 
    "type": "skProc", 
    "code": "proc CreateIconIndirect*(piconinfo: PICONINFO): HICON {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateIconIndirect\".}"
  }, 
  {
    "name": "CopyIcon", 
    "type": "skProc", 
    "code": "proc CopyIcon*(icon: HICON): HICON {.stdcall, dynlib: \"user32\", \u000A                                     importc: \"CopyIcon\".}"
  }, 
  {
    "name": "GetIconInfo", 
    "type": "skProc", 
    "code": "proc GetIconInfo*(icon: HICON; piconinfo: PICONINFO): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetIconInfo\".}"
  }, 
  {
    "name": "MapDialogRect", 
    "type": "skProc", 
    "code": "proc MapDialogRect*(hDlg: HWND; lpRect: LPRECT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"MapDialogRect\".}"
  }, 
  {
    "name": "SetScrollInfo", 
    "type": "skProc", 
    "code": "proc SetScrollInfo*(para1: HWND; para2: int32; para3: LPCSCROLLINFO; \u000A                    para4: WINBOOL): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetScrollInfo\".}"
  }, 
  {
    "name": "GetScrollInfo", 
    "type": "skProc", 
    "code": "proc GetScrollInfo*(para1: HWND; para2: int32; para3: LPSCROLLINFO): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetScrollInfo\".}"
  }, 
  {
    "name": "TranslateMDISysAccel", 
    "type": "skProc", 
    "code": "proc TranslateMDISysAccel*(hWndClient: HWND; lpMsg: LPMSG): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"TranslateMDISysAccel\".}"
  }, 
  {
    "name": "ArrangeIconicWindows", 
    "type": "skProc", 
    "code": "proc ArrangeIconicWindows*(wnd: HWND): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"ArrangeIconicWindows\".}"
  }, 
  {
    "name": "TileWindows", 
    "type": "skProc", 
    "code": "proc TileWindows*(hwndParent: HWND; wHow: WINUINT; lpRect: var RECT; \u000A                  cKids: WINUINT; lpKids: var HWND): int16 {.stdcall, \u000A    dynlib: \"user32\", importc: \"TileWindows\".}"
  }, 
  {
    "name": "CascadeWindows", 
    "type": "skProc", 
    "code": "proc CascadeWindows*(hwndParent: HWND; wHow: WINUINT; lpRect: var RECT; \u000A                     cKids: WINUINT; lpKids: var HWND): int16 {.stdcall, \u000A    dynlib: \"user32\", importc: \"CascadeWindows\".}"
  }, 
  {
    "name": "SetLastErrorEx", 
    "type": "skProc", 
    "code": "proc SetLastErrorEx*(dwErrCode: DWORD; dwType: DWORD) {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetLastErrorEx\".}"
  }, 
  {
    "name": "SetDebugErrorLevel", 
    "type": "skProc", 
    "code": "proc SetDebugErrorLevel*(dwLevel: DWORD) {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetDebugErrorLevel\".}"
  }, 
  {
    "name": "DrawEdge", 
    "type": "skProc", 
    "code": "proc DrawEdge*(hdc: HDC; qrc: LPRECT; edge: WINUINT; grfFlags: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawEdge\".}"
  }, 
  {
    "name": "DrawFrameControl", 
    "type": "skProc", 
    "code": "proc DrawFrameControl*(para1: HDC; para2: LPRECT; para3: WINUINT; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawFrameControl\".}"
  }, 
  {
    "name": "DrawCaption", 
    "type": "skProc", 
    "code": "proc DrawCaption*(para1: HWND; para2: HDC; para3: var RECT; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawCaption\".}"
  }, 
  {
    "name": "DrawAnimatedRects", 
    "type": "skProc", 
    "code": "proc DrawAnimatedRects*(wnd: HWND; idAni: int32; lprcFrom: var RECT; \u000A                        lprcTo: var RECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawAnimatedRects\".}"
  }, 
  {
    "name": "TrackPopupMenuEx", 
    "type": "skProc", 
    "code": "proc TrackPopupMenuEx*(para1: HMENU; para2: WINUINT; para3: int32; para4: int32; \u000A                       para5: HWND; para6: LPTPMPARAMS): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"TrackPopupMenuEx\".}"
  }, 
  {
    "name": "ChildWindowFromPointEx", 
    "type": "skProc", 
    "code": "proc ChildWindowFromPointEx*(para1: HWND; para2: POINT; para3: WINUINT): HWND {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChildWindowFromPointEx\".}"
  }, 
  {
    "name": "DrawIconEx", 
    "type": "skProc", 
    "code": "proc DrawIconEx*(hdc: HDC; xLeft: int32; yTop: int32; icon: HICON; \u000A                 cxWidth: int32; cyWidth: int32; istepIfAniCur: WINUINT; \u000A                 hbrFlickerFreeDraw: HBRUSH; diFlags: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawIconEx\".}"
  }, 
  {
    "name": "AnimatePalette", 
    "type": "skProc", 
    "code": "proc AnimatePalette*(para1: HPALETTE; para2: WINUINT; para3: WINUINT; \u000A                     para4: var PALETTEENTRY): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"AnimatePalette\".}"
  }, 
  {
    "name": "Arc", 
    "type": "skProc", 
    "code": "proc Arc*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A          para6: int32; para7: int32; para8: int32; para9: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"Arc\".}"
  }, 
  {
    "name": "BitBlt", 
    "type": "skProc", 
    "code": "proc BitBlt*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A             para6: HDC; para7: int32; para8: int32; para9: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"BitBlt\".}"
  }, 
  {
    "name": "CancelDC", 
    "type": "skProc", 
    "code": "proc CancelDC*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"CancelDC\".}"
  }, 
  {
    "name": "Chord", 
    "type": "skProc", 
    "code": "proc Chord*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A            para6: int32; para7: int32; para8: int32; para9: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"Chord\".}"
  }, 
  {
    "name": "CloseMetaFile", 
    "type": "skProc", 
    "code": "proc CloseMetaFile*(para1: HDC): HMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CloseMetaFile\".}"
  }, 
  {
    "name": "CombineRgn", 
    "type": "skProc", 
    "code": "proc CombineRgn*(para1: HRGN; para2: HRGN; para3: HRGN; para4: int32): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CombineRgn\".}"
  }, 
  {
    "name": "CreateBitmap", 
    "type": "skProc", 
    "code": "proc CreateBitmap*(para1: int32; para2: int32; para3: WINUINT; para4: WINUINT; \u000A                   para5: pointer): HBITMAP {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateBitmap\".}"
  }, 
  {
    "name": "CreateBitmapIndirect", 
    "type": "skProc", 
    "code": "proc CreateBitmapIndirect*(para1: var BITMAP): HBITMAP {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateBitmapIndirect\".}"
  }, 
  {
    "name": "CreateBrushIndirect", 
    "type": "skProc", 
    "code": "proc CreateBrushIndirect*(para1: var LOGBRUSH): HBRUSH {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateBrushIndirect\".}"
  }, 
  {
    "name": "CreateCompatibleBitmap", 
    "type": "skProc", 
    "code": "proc CreateCompatibleBitmap*(para1: HDC; para2: int32; para3: int32): HBITMAP {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateCompatibleBitmap\".}"
  }, 
  {
    "name": "CreateDiscardableBitmap", 
    "type": "skProc", 
    "code": "proc CreateDiscardableBitmap*(para1: HDC; para2: int32; para3: int32): HBITMAP {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDiscardableBitmap\".}"
  }, 
  {
    "name": "CreateCompatibleDC", 
    "type": "skProc", 
    "code": "proc CreateCompatibleDC*(para1: HDC): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateCompatibleDC\".}"
  }, 
  {
    "name": "CreateDIBitmap", 
    "type": "skProc", 
    "code": "proc CreateDIBitmap*(para1: HDC; para2: var BITMAPINFOHEADER; para3: DWORD; \u000A                     para4: pointer; para5: var BITMAPINFO; para6: WINUINT): HBITMAP {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDIBitmap\".}"
  }, 
  {
    "name": "CreateDIBPatternBrush", 
    "type": "skProc", 
    "code": "proc CreateDIBPatternBrush*(para1: HGLOBAL; para2: WINUINT): HBRUSH {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateDIBPatternBrush\".}"
  }, 
  {
    "name": "CreateDIBPatternBrushPt", 
    "type": "skProc", 
    "code": "proc CreateDIBPatternBrushPt*(para1: pointer; para2: WINUINT): HBRUSH {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateDIBPatternBrushPt\".}"
  }, 
  {
    "name": "CreateEllipticRgn", 
    "type": "skProc", 
    "code": "proc CreateEllipticRgn*(para1: int32; para2: int32; para3: int32; para4: int32): HRGN {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateEllipticRgn\".}"
  }, 
  {
    "name": "CreateEllipticRgnIndirect", 
    "type": "skProc", 
    "code": "proc CreateEllipticRgnIndirect*(para1: var RECT): HRGN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateEllipticRgnIndirect\".}"
  }, 
  {
    "name": "CreateHatchBrush", 
    "type": "skProc", 
    "code": "proc CreateHatchBrush*(para1: int32; para2: COLORREF): HBRUSH {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateHatchBrush\".}"
  }, 
  {
    "name": "CreatePalette", 
    "type": "skProc", 
    "code": "proc CreatePalette*(para1: var LOGPALETTE): HPALETTE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreatePalette\".}"
  }, 
  {
    "name": "CreatePen", 
    "type": "skProc", 
    "code": "proc CreatePen*(para1: int32; para2: int32; para3: COLORREF): HPEN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreatePen\".}"
  }, 
  {
    "name": "CreatePenIndirect", 
    "type": "skProc", 
    "code": "proc CreatePenIndirect*(para1: var LOGPEN): HPEN {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreatePenIndirect\".}"
  }, 
  {
    "name": "CreatePolyPolygonRgn", 
    "type": "skProc", 
    "code": "proc CreatePolyPolygonRgn*(para1: var POINT; para2: var WINT; para3: int32; \u000A                           para4: int32): HRGN {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreatePolyPolygonRgn\".}"
  }, 
  {
    "name": "CreatePatternBrush", 
    "type": "skProc", 
    "code": "proc CreatePatternBrush*(para1: HBITMAP): HBRUSH {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreatePatternBrush\".}"
  }, 
  {
    "name": "CreateRectRgn", 
    "type": "skProc", 
    "code": "proc CreateRectRgn*(para1: int32; para2: int32; para3: int32; para4: int32): HRGN {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateRectRgn\".}"
  }, 
  {
    "name": "CreateRectRgnIndirect", 
    "type": "skProc", 
    "code": "proc CreateRectRgnIndirect*(para1: var RECT): HRGN {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateRectRgnIndirect\".}"
  }, 
  {
    "name": "CreateRoundRectRgn", 
    "type": "skProc", 
    "code": "proc CreateRoundRectRgn*(para1: int32; para2: int32; para3: int32; para4: int32; \u000A                         para5: int32; para6: int32): HRGN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateRoundRectRgn\".}"
  }, 
  {
    "name": "CreateSolidBrush", 
    "type": "skProc", 
    "code": "proc CreateSolidBrush*(para1: COLORREF): HBRUSH {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateSolidBrush\".}"
  }, 
  {
    "name": "DeleteDC", 
    "type": "skProc", 
    "code": "proc DeleteDC*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"DeleteDC\".}"
  }, 
  {
    "name": "DeleteMetaFile", 
    "type": "skProc", 
    "code": "proc DeleteMetaFile*(para1: HMETAFILE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"DeleteMetaFile\".}"
  }, 
  {
    "name": "DeleteObject", 
    "type": "skProc", 
    "code": "proc DeleteObject*(para1: HGDIOBJ): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"DeleteObject\".}"
  }, 
  {
    "name": "DrawEscape", 
    "type": "skProc", 
    "code": "proc DrawEscape*(para1: HDC; para2: int32; para3: int32; para4: LPCSTR): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"DrawEscape\".}"
  }, 
  {
    "name": "Ellipse", 
    "type": "skProc", 
    "code": "proc Ellipse*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"Ellipse\".}"
  }, 
  {
    "name": "EnumObjects", 
    "type": "skProc", 
    "code": "proc EnumObjects*(para1: HDC; para2: int32; para3: ENUMOBJECTSPROC; \u000A                  para4: LPARAM): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumObjects\".}"
  }, 
  {
    "name": "EqualRgn", 
    "type": "skProc", 
    "code": "proc EqualRgn*(para1: HRGN; para2: HRGN): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EqualRgn\".}"
  }, 
  {
    "name": "Escape", 
    "type": "skProc", 
    "code": "proc Escape*(para1: HDC; para2: int32; para3: int32; para4: LPCSTR; \u000A             para5: LPVOID): int32 {.stdcall, dynlib: \"gdi32\", importc: \"Escape\".}"
  }, 
  {
    "name": "ExtEscape", 
    "type": "skProc", 
    "code": "proc ExtEscape*(para1: HDC; para2: int32; para3: int32; para4: LPCSTR; \u000A                para5: int32; para6: LPSTR): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ExtEscape\".}"
  }, 
  {
    "name": "ExcludeClipRect", 
    "type": "skProc", 
    "code": "proc ExcludeClipRect*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                      para5: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ExcludeClipRect\".}"
  }, 
  {
    "name": "ExtCreateRegion", 
    "type": "skProc", 
    "code": "proc ExtCreateRegion*(para1: var XFORM; para2: DWORD; para3: var RGNDATA): HRGN {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ExtCreateRegion\".}"
  }, 
  {
    "name": "ExtFloodFill", 
    "type": "skProc", 
    "code": "proc ExtFloodFill*(para1: HDC; para2: int32; para3: int32; para4: COLORREF; \u000A                   para5: WINUINT): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ExtFloodFill\".}"
  }, 
  {
    "name": "FillRgn", 
    "type": "skProc", 
    "code": "proc FillRgn*(para1: HDC; para2: HRGN; para3: HBRUSH): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"FillRgn\".}"
  }, 
  {
    "name": "FloodFill", 
    "type": "skProc", 
    "code": "proc FloodFill*(para1: HDC; para2: int32; para3: int32; para4: COLORREF): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"FloodFill\".}"
  }, 
  {
    "name": "FrameRgn", 
    "type": "skProc", 
    "code": "proc FrameRgn*(para1: HDC; para2: HRGN; para3: HBRUSH; para4: int32; \u000A               para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                        importc: \"FrameRgn\".}"
  }, 
  {
    "name": "GetROP2", 
    "type": "skProc", 
    "code": "proc GetROP2*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", importc: \"GetROP2\".}"
  }, 
  {
    "name": "GetAspectRatioFilterEx", 
    "type": "skProc", 
    "code": "proc GetAspectRatioFilterEx*(para1: HDC; para2: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetAspectRatioFilterEx\".}"
  }, 
  {
    "name": "GetBkColor", 
    "type": "skProc", 
    "code": "proc GetBkColor*(para1: HDC): COLORREF {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetBkColor\".}"
  }, 
  {
    "name": "GetBkMode", 
    "type": "skProc", 
    "code": "proc GetBkMode*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                     importc: \"GetBkMode\".}"
  }, 
  {
    "name": "GetBitmapBits", 
    "type": "skProc", 
    "code": "proc GetBitmapBits*(para1: HBITMAP; para2: LONG; para3: LPVOID): LONG {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBitmapBits\".}"
  }, 
  {
    "name": "GetBitmapDimensionEx", 
    "type": "skProc", 
    "code": "proc GetBitmapDimensionEx*(para1: HBITMAP; para2: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBitmapDimensionEx\".}"
  }, 
  {
    "name": "GetBoundsRect", 
    "type": "skProc", 
    "code": "proc GetBoundsRect*(para1: HDC; para2: LPRECT; para3: WINUINT): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetBoundsRect\".}"
  }, 
  {
    "name": "GetBrushOrgEx", 
    "type": "skProc", 
    "code": "proc GetBrushOrgEx*(para1: HDC; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBrushOrgEx\".}"
  }, 
  {
    "name": "GetClipBox", 
    "type": "skProc", 
    "code": "proc GetClipBox*(para1: HDC; para2: LPRECT): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetClipBox\".}"
  }, 
  {
    "name": "GetClipRgn", 
    "type": "skProc", 
    "code": "proc GetClipRgn*(para1: HDC; para2: HRGN): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetClipRgn\".}"
  }, 
  {
    "name": "GetMetaRgn", 
    "type": "skProc", 
    "code": "proc GetMetaRgn*(para1: HDC; para2: HRGN): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetMetaRgn\".}"
  }, 
  {
    "name": "GetCurrentObject", 
    "type": "skProc", 
    "code": "proc GetCurrentObject*(para1: HDC; para2: WINUINT): HGDIOBJ {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCurrentObject\".}"
  }, 
  {
    "name": "GetCurrentPositionEx", 
    "type": "skProc", 
    "code": "proc GetCurrentPositionEx*(para1: HDC; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCurrentPositionEx\".}"
  }, 
  {
    "name": "GetDeviceCaps", 
    "type": "skProc", 
    "code": "proc GetDeviceCaps*(para1: HDC; para2: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetDeviceCaps\".}"
  }, 
  {
    "name": "GetDIBits", 
    "type": "skProc", 
    "code": "proc GetDIBits*(para1: HDC; para2: HBITMAP; para3: WINUINT; para4: WINUINT; \u000A                para5: LPVOID; para6: LPBITMAPINFO; para7: WINUINT): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetDIBits\".}"
  }, 
  {
    "name": "GetFontData", 
    "type": "skProc", 
    "code": "proc GetFontData*(para1: HDC; para2: DWORD; para3: DWORD; para4: LPVOID; \u000A                  para5: DWORD): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetFontData\".}"
  }, 
  {
    "name": "GetGraphicsMode", 
    "type": "skProc", 
    "code": "proc GetGraphicsMode*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetGraphicsMode\".}"
  }, 
  {
    "name": "GetMapMode", 
    "type": "skProc", 
    "code": "proc GetMapMode*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"GetMapMode\".}"
  }, 
  {
    "name": "GetMetaFileBitsEx", 
    "type": "skProc", 
    "code": "proc GetMetaFileBitsEx*(para1: HMETAFILE; para2: WINUINT; para3: LPVOID): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetMetaFileBitsEx\".}"
  }, 
  {
    "name": "GetNearestColor", 
    "type": "skProc", 
    "code": "proc GetNearestColor*(para1: HDC; para2: COLORREF): COLORREF {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetNearestColor\".}"
  }, 
  {
    "name": "GetNearestPaletteIndex", 
    "type": "skProc", 
    "code": "proc GetNearestPaletteIndex*(para1: HPALETTE; para2: COLORREF): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetNearestPaletteIndex\".}"
  }, 
  {
    "name": "GetObjectType", 
    "type": "skProc", 
    "code": "proc GetObjectType*(h: HGDIOBJ): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetObjectType\".}"
  }, 
  {
    "name": "GetPaletteEntries", 
    "type": "skProc", 
    "code": "proc GetPaletteEntries*(para1: HPALETTE; para2: WINUINT; para3: WINUINT; \u000A                        para4: LPPALETTEENTRY): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetPaletteEntries\".}"
  }, 
  {
    "name": "GetPixel", 
    "type": "skProc", 
    "code": "proc GetPixel*(para1: HDC; para2: int32; para3: int32): COLORREF {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetPixel\".}"
  }, 
  {
    "name": "GetPixelFormat", 
    "type": "skProc", 
    "code": "proc GetPixelFormat*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetPixelFormat\".}"
  }, 
  {
    "name": "GetPolyFillMode", 
    "type": "skProc", 
    "code": "proc GetPolyFillMode*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetPolyFillMode\".}"
  }, 
  {
    "name": "GetRasterizerCaps", 
    "type": "skProc", 
    "code": "proc GetRasterizerCaps*(para1: LPRASTERIZER_STATUS; para2: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetRasterizerCaps\".}"
  }, 
  {
    "name": "GetRegionData", 
    "type": "skProc", 
    "code": "proc GetRegionData*(para1: HRGN; para2: DWORD; para3: LPRGNDATA): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetRegionData\".}"
  }, 
  {
    "name": "GetRgnBox", 
    "type": "skProc", 
    "code": "proc GetRgnBox*(para1: HRGN; para2: LPRECT): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetRgnBox\".}"
  }, 
  {
    "name": "GetStockObject", 
    "type": "skProc", 
    "code": "proc GetStockObject*(para1: int32): HGDIOBJ {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetStockObject\".}"
  }, 
  {
    "name": "GetStretchBltMode", 
    "type": "skProc", 
    "code": "proc GetStretchBltMode*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetStretchBltMode\".}"
  }, 
  {
    "name": "GetSystemPaletteEntries", 
    "type": "skProc", 
    "code": "proc GetSystemPaletteEntries*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                              para4: LPPALETTEENTRY): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetSystemPaletteEntries\".}"
  }, 
  {
    "name": "GetSystemPaletteUse", 
    "type": "skProc", 
    "code": "proc GetSystemPaletteUse*(para1: HDC): WINUINT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetSystemPaletteUse\".}"
  }, 
  {
    "name": "GetTextCharacterExtra", 
    "type": "skProc", 
    "code": "proc GetTextCharacterExtra*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextCharacterExtra\".}"
  }, 
  {
    "name": "GetTextAlign", 
    "type": "skProc", 
    "code": "proc GetTextAlign*(para1: HDC): WINUINT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextAlign\".}"
  }, 
  {
    "name": "GetTextColor", 
    "type": "skProc", 
    "code": "proc GetTextColor*(para1: HDC): COLORREF {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextColor\".}"
  }, 
  {
    "name": "GetTextCharset", 
    "type": "skProc", 
    "code": "proc GetTextCharset*(hdc: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                        importc: \"GetTextCharset\".}"
  }, 
  {
    "name": "GetTextCharsetInfo", 
    "type": "skProc", 
    "code": "proc GetTextCharsetInfo*(hdc: HDC; lpSig: LPFONTSIGNATURE; dwFlags: DWORD): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextCharsetInfo\".}"
  }, 
  {
    "name": "TranslateCharsetInfo", 
    "type": "skProc", 
    "code": "proc TranslateCharsetInfo*(lpSrc: var DWORD; lpCs: LPCHARSETINFO; dwFlags: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"TranslateCharsetInfo\".}"
  }, 
  {
    "name": "GetFontLanguageInfo", 
    "type": "skProc", 
    "code": "proc GetFontLanguageInfo*(para1: HDC): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetFontLanguageInfo\".}"
  }, 
  {
    "name": "GetViewportExtEx", 
    "type": "skProc", 
    "code": "proc GetViewportExtEx*(para1: HDC; para2: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetViewportExtEx\".}"
  }, 
  {
    "name": "GetViewportOrgEx", 
    "type": "skProc", 
    "code": "proc GetViewportOrgEx*(para1: HDC; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetViewportOrgEx\".}"
  }, 
  {
    "name": "GetWindowExtEx", 
    "type": "skProc", 
    "code": "proc GetWindowExtEx*(para1: HDC; para2: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWindowExtEx\".}"
  }, 
  {
    "name": "GetWindowOrgEx", 
    "type": "skProc", 
    "code": "proc GetWindowOrgEx*(para1: HDC; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWindowOrgEx\".}"
  }, 
  {
    "name": "IntersectClipRect", 
    "type": "skProc", 
    "code": "proc IntersectClipRect*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                        para5: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"IntersectClipRect\".}"
  }, 
  {
    "name": "InvertRgn", 
    "type": "skProc", 
    "code": "proc InvertRgn*(para1: HDC; para2: HRGN): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"InvertRgn\".}"
  }, 
  {
    "name": "LineDDA", 
    "type": "skProc", 
    "code": "proc LineDDA*(para1: int32; para2: int32; para3: int32; para4: int32; \u000A              para5: LINEDDAPROC; para6: LPARAM): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"LineDDA\".}"
  }, 
  {
    "name": "LineTo", 
    "type": "skProc", 
    "code": "proc LineTo*(para1: HDC; para2: int32; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"LineTo\".}"
  }, 
  {
    "name": "MaskBlt", 
    "type": "skProc", 
    "code": "proc MaskBlt*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A              para5: int32; para6: HDC; para7: int32; para8: int32; \u000A              para9: HBITMAP; para10: int32; para11: int32; para12: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"MaskBlt\".}"
  }, 
  {
    "name": "PlgBlt", 
    "type": "skProc", 
    "code": "proc PlgBlt*(para1: HDC; para2: var POINT; para3: HDC; para4: int32; \u000A             para5: int32; para6: int32; para7: int32; para8: HBITMAP; \u000A             para9: int32; para10: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"PlgBlt\".}"
  }, 
  {
    "name": "OffsetClipRgn", 
    "type": "skProc", 
    "code": "proc OffsetClipRgn*(para1: HDC; para2: int32; para3: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"OffsetClipRgn\".}"
  }, 
  {
    "name": "OffsetRgn", 
    "type": "skProc", 
    "code": "proc OffsetRgn*(para1: HRGN; para2: int32; para3: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"OffsetRgn\".}"
  }, 
  {
    "name": "PatBlt", 
    "type": "skProc", 
    "code": "proc PatBlt*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A             para6: DWORD): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"PatBlt\".}"
  }, 
  {
    "name": "Pie", 
    "type": "skProc", 
    "code": "proc Pie*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A          para6: int32; para7: int32; para8: int32; para9: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"Pie\".}"
  }, 
  {
    "name": "PlayMetaFile", 
    "type": "skProc", 
    "code": "proc PlayMetaFile*(para1: HDC; para2: HMETAFILE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PlayMetaFile\".}"
  }, 
  {
    "name": "PaintRgn", 
    "type": "skProc", 
    "code": "proc PaintRgn*(para1: HDC; para2: HRGN): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"PaintRgn\".}"
  }, 
  {
    "name": "PolyPolygon", 
    "type": "skProc", 
    "code": "proc PolyPolygon*(para1: HDC; para2: var POINT; para3: var WINT; para4: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyPolygon\".}"
  }, 
  {
    "name": "PtInRegion", 
    "type": "skProc", 
    "code": "proc PtInRegion*(para1: HRGN; para2: int32; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PtInRegion\".}"
  }, 
  {
    "name": "PtVisible", 
    "type": "skProc", 
    "code": "proc PtVisible*(para1: HDC; para2: int32; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PtVisible\".}"
  }, 
  {
    "name": "RectInRegion", 
    "type": "skProc", 
    "code": "proc RectInRegion*(para1: HRGN; para2: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"RectInRegion\".}"
  }, 
  {
    "name": "RectVisible", 
    "type": "skProc", 
    "code": "proc RectVisible*(para1: HDC; para2: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"RectVisible\".}"
  }, 
  {
    "name": "Rectangle", 
    "type": "skProc", 
    "code": "proc Rectangle*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"Rectangle\".}"
  }, 
  {
    "name": "RestoreDC", 
    "type": "skProc", 
    "code": "proc RestoreDC*(para1: HDC; para2: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"RestoreDC\".}"
  }, 
  {
    "name": "RealizePalette", 
    "type": "skProc", 
    "code": "proc RealizePalette*(para1: HDC): WINUINT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"RealizePalette\".}"
  }, 
  {
    "name": "RoundRect", 
    "type": "skProc", 
    "code": "proc RoundRect*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                para5: int32; para6: int32; para7: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"RoundRect\".}"
  }, 
  {
    "name": "ResizePalette", 
    "type": "skProc", 
    "code": "proc ResizePalette*(para1: HPALETTE; para2: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ResizePalette\".}"
  }, 
  {
    "name": "SaveDC", 
    "type": "skProc", 
    "code": "proc SaveDC*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", importc: \"SaveDC\".}"
  }, 
  {
    "name": "SelectClipRgn", 
    "type": "skProc", 
    "code": "proc SelectClipRgn*(para1: HDC; para2: HRGN): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SelectClipRgn\".}"
  }, 
  {
    "name": "ExtSelectClipRgn", 
    "type": "skProc", 
    "code": "proc ExtSelectClipRgn*(para1: HDC; para2: HRGN; para3: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ExtSelectClipRgn\".}"
  }, 
  {
    "name": "SetMetaRgn", 
    "type": "skProc", 
    "code": "proc SetMetaRgn*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"SetMetaRgn\".}"
  }, 
  {
    "name": "SelectObject", 
    "type": "skProc", 
    "code": "proc SelectObject*(para1: HDC; para2: HGDIOBJ): HGDIOBJ {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SelectObject\".}"
  }, 
  {
    "name": "SelectPalette", 
    "type": "skProc", 
    "code": "proc SelectPalette*(para1: HDC; para2: HPALETTE; para3: WINBOOL): HPALETTE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SelectPalette\".}"
  }, 
  {
    "name": "SetBkColor", 
    "type": "skProc", 
    "code": "proc SetBkColor*(para1: HDC; para2: COLORREF): COLORREF {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetBkColor\".}"
  }, 
  {
    "name": "SetBkMode", 
    "type": "skProc", 
    "code": "proc SetBkMode*(para1: HDC; para2: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetBkMode\".}"
  }, 
  {
    "name": "SetBitmapBits", 
    "type": "skProc", 
    "code": "proc SetBitmapBits*(para1: HBITMAP; para2: DWORD; para3: pointer): LONG {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetBitmapBits\".}"
  }, 
  {
    "name": "SetBoundsRect", 
    "type": "skProc", 
    "code": "proc SetBoundsRect*(para1: HDC; para2: var RECT; para3: WINUINT): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetBoundsRect\".}"
  }, 
  {
    "name": "SetDIBits", 
    "type": "skProc", 
    "code": "proc SetDIBits*(para1: HDC; para2: HBITMAP; para3: WINUINT; para4: WINUINT; \u000A                para5: pointer; para6: PBITMAPINFO; para7: WINUINT): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetDIBits\".}"
  }, 
  {
    "name": "SetDIBitsToDevice", 
    "type": "skProc", 
    "code": "proc SetDIBitsToDevice*(para1: HDC; para2: int32; para3: int32; para4: DWORD; \u000A                        para5: DWORD; para6: int32; para7: int32; \u000A                        para8: WINUINT; para9: WINUINT; para10: pointer; \u000A                        para11: var BITMAPINFO; para12: WINUINT): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetDIBitsToDevice\".}"
  }, 
  {
    "name": "SetMapperFlags", 
    "type": "skProc", 
    "code": "proc SetMapperFlags*(para1: HDC; para2: DWORD): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetMapperFlags\".}"
  }, 
  {
    "name": "SetGraphicsMode", 
    "type": "skProc", 
    "code": "proc SetGraphicsMode*(hdc: HDC; iMode: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetGraphicsMode\".}"
  }, 
  {
    "name": "SetMapMode", 
    "type": "skProc", 
    "code": "proc SetMapMode*(para1: HDC; para2: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetMapMode\".}"
  }, 
  {
    "name": "SetMetaFileBitsEx", 
    "type": "skProc", 
    "code": "proc SetMetaFileBitsEx*(para1: WINUINT; para2: var int8): HMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetMetaFileBitsEx\".}"
  }, 
  {
    "name": "SetPaletteEntries", 
    "type": "skProc", 
    "code": "proc SetPaletteEntries*(para1: HPALETTE; para2: WINUINT; para3: WINUINT; \u000A                        para4: var PALETTEENTRY): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetPaletteEntries\".}"
  }, 
  {
    "name": "SetPixel", 
    "type": "skProc", 
    "code": "proc SetPixel*(para1: HDC; para2: int32; para3: int32; para4: COLORREF): COLORREF {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetPixel\".}"
  }, 
  {
    "name": "SetPixelV", 
    "type": "skProc", 
    "code": "proc SetPixelV*(para1: HDC; para2: int32; para3: int32; para4: COLORREF): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetPixelV\".}"
  }, 
  {
    "name": "SetPolyFillMode", 
    "type": "skProc", 
    "code": "proc SetPolyFillMode*(para1: HDC; para2: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetPolyFillMode\".}"
  }, 
  {
    "name": "StretchBlt", 
    "type": "skProc", 
    "code": "proc StretchBlt*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                 para5: int32; para6: HDC; para7: int32; para8: int32; \u000A                 para9: int32; para10: int32; para11: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"StretchBlt\".}"
  }, 
  {
    "name": "SetRectRgn", 
    "type": "skProc", 
    "code": "proc SetRectRgn*(para1: HRGN; para2: int32; para3: int32; para4: int32; \u000A                 para5: int32): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetRectRgn\".}"
  }, 
  {
    "name": "StretchDIBits", 
    "type": "skProc", 
    "code": "proc StretchDIBits*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                    para5: int32; para6: int32; para7: int32; para8: int32; \u000A                    para9: int32; para10: pointer; para11: var BITMAPINFO; \u000A                    para12: WINUINT; para13: DWORD): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"StretchDIBits\".}"
  }, 
  {
    "name": "SetROP2", 
    "type": "skProc", 
    "code": "proc SetROP2*(para1: HDC; para2: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetROP2\".}"
  }, 
  {
    "name": "SetStretchBltMode", 
    "type": "skProc", 
    "code": "proc SetStretchBltMode*(para1: HDC; para2: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetStretchBltMode\".}"
  }, 
  {
    "name": "SetSystemPaletteUse", 
    "type": "skProc", 
    "code": "proc SetSystemPaletteUse*(para1: HDC; para2: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetSystemPaletteUse\".}"
  }, 
  {
    "name": "SetTextCharacterExtra", 
    "type": "skProc", 
    "code": "proc SetTextCharacterExtra*(para1: HDC; para2: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetTextCharacterExtra\".}"
  }, 
  {
    "name": "SetTextColor", 
    "type": "skProc", 
    "code": "proc SetTextColor*(para1: HDC; para2: COLORREF): COLORREF {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetTextColor\".}"
  }, 
  {
    "name": "SetTextAlign", 
    "type": "skProc", 
    "code": "proc SetTextAlign*(para1: HDC; para2: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetTextAlign\".}"
  }, 
  {
    "name": "SetTextJustification", 
    "type": "skProc", 
    "code": "proc SetTextJustification*(para1: HDC; para2: int32; para3: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetTextJustification\".}"
  }, 
  {
    "name": "UpdateColors", 
    "type": "skProc", 
    "code": "proc UpdateColors*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"UpdateColors\".}"
  }, 
  {
    "name": "PlayMetaFileRecord", 
    "type": "skProc", 
    "code": "proc PlayMetaFileRecord*(para1: HDC; para2: LPHANDLETABLE; para3: LPMETARECORD; \u000A                         para4: WINUINT): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"PlayMetaFileRecord\".}"
  }, 
  {
    "name": "EnumMetaFile", 
    "type": "skProc", 
    "code": "proc EnumMetaFile*(para1: HDC; para2: HMETAFILE; para3: ENUMMETAFILEPROC; \u000A                   para4: LPARAM): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"EnumMetaFile\".}"
  }, 
  {
    "name": "CloseEnhMetaFile", 
    "type": "skProc", 
    "code": "proc CloseEnhMetaFile*(para1: HDC): HENHMETAFILE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CloseEnhMetaFile\".}"
  }, 
  {
    "name": "DeleteEnhMetaFile", 
    "type": "skProc", 
    "code": "proc DeleteEnhMetaFile*(para1: HENHMETAFILE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"DeleteEnhMetaFile\".}"
  }, 
  {
    "name": "EnumEnhMetaFile", 
    "type": "skProc", 
    "code": "proc EnumEnhMetaFile*(para1: HDC; para2: HENHMETAFILE; para3: ENHMETAFILEPROC; \u000A                      para4: LPVOID; para5: var RECT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"EnumEnhMetaFile\".}"
  }, 
  {
    "name": "GetEnhMetaFileHeader", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileHeader*(para1: HENHMETAFILE; para2: WINUINT; \u000A                           para3: LPENHMETAHEADER): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetEnhMetaFileHeader\".}"
  }, 
  {
    "name": "GetEnhMetaFilePaletteEntries", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFilePaletteEntries*(para1: HENHMETAFILE; para2: WINUINT; \u000A                                   para3: LPPALETTEENTRY): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetEnhMetaFilePaletteEntries\".}"
  }, 
  {
    "name": "GetEnhMetaFileBits", 
    "type": "skProc", 
    "code": "proc GetEnhMetaFileBits*(para1: HENHMETAFILE; para2: WINUINT; para3: LPBYTE): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetEnhMetaFileBits\".}"
  }, 
  {
    "name": "GetWinMetaFileBits", 
    "type": "skProc", 
    "code": "proc GetWinMetaFileBits*(para1: HENHMETAFILE; para2: WINUINT; para3: LPBYTE; \u000A                         para4: WINT; para5: HDC): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWinMetaFileBits\".}"
  }, 
  {
    "name": "PlayEnhMetaFile", 
    "type": "skProc", 
    "code": "proc PlayEnhMetaFile*(para1: HDC; para2: HENHMETAFILE; para3: RECT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PlayEnhMetaFile\".}"
  }, 
  {
    "name": "PlayEnhMetaFileRecord", 
    "type": "skProc", 
    "code": "proc PlayEnhMetaFileRecord*(para1: HDC; para2: LPHANDLETABLE; \u000A                            para3: var TENHMETARECORD; para4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PlayEnhMetaFileRecord\".}"
  }, 
  {
    "name": "SetEnhMetaFileBits", 
    "type": "skProc", 
    "code": "proc SetEnhMetaFileBits*(para1: WINUINT; para2: var int8): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetEnhMetaFileBits\".}"
  }, 
  {
    "name": "SetWinMetaFileBits", 
    "type": "skProc", 
    "code": "proc SetWinMetaFileBits*(para1: WINUINT; para2: var int8; para3: HDC; \u000A                         para4: var METAFILEPICT): HENHMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetWinMetaFileBits\".}"
  }, 
  {
    "name": "GdiComment", 
    "type": "skProc", 
    "code": "proc GdiComment*(para1: HDC; para2: WINUINT; para3: var int8): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GdiComment\".}"
  }, 
  {
    "name": "AngleArc", 
    "type": "skProc", 
    "code": "proc AngleArc*(para1: HDC; para2: int32; para3: int32; para4: DWORD; \u000A               para5: float32; para6: float32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"AngleArc\".}"
  }, 
  {
    "name": "PolyPolyline", 
    "type": "skProc", 
    "code": "proc PolyPolyline*(para1: HDC; para2: var POINT; para3: var DWORD; para4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyPolyline\".}"
  }, 
  {
    "name": "GetWorldTransform", 
    "type": "skProc", 
    "code": "proc GetWorldTransform*(para1: HDC; para2: LPXFORM): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWorldTransform\".}"
  }, 
  {
    "name": "SetWorldTransform", 
    "type": "skProc", 
    "code": "proc SetWorldTransform*(para1: HDC; para2: var XFORM): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetWorldTransform\".}"
  }, 
  {
    "name": "ModifyWorldTransform", 
    "type": "skProc", 
    "code": "proc ModifyWorldTransform*(para1: HDC; para2: var XFORM; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ModifyWorldTransform\".}"
  }, 
  {
    "name": "CombineTransform", 
    "type": "skProc", 
    "code": "proc CombineTransform*(para1: LPXFORM; para2: var XFORM; para3: var XFORM): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CombineTransform\".}"
  }, 
  {
    "name": "CreateDIBSection", 
    "type": "skProc", 
    "code": "proc CreateDIBSection*(para1: HDC; para2: var BITMAPINFO; para3: WINUINT; \u000A                       para4: var pointer; para5: HANDLE; para6: DWORD): HBITMAP {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreateDIBSection\".}"
  }, 
  {
    "name": "GetDIBColorTable", 
    "type": "skProc", 
    "code": "proc GetDIBColorTable*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                       para4: var RGBQUAD): WINUINT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetDIBColorTable\".}"
  }, 
  {
    "name": "SetDIBColorTable", 
    "type": "skProc", 
    "code": "proc SetDIBColorTable*(para1: HDC; para2: WINUINT; para3: WINUINT; \u000A                       para4: var RGBQUAD): WINUINT {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetDIBColorTable\".}"
  }, 
  {
    "name": "SetColorAdjustment", 
    "type": "skProc", 
    "code": "proc SetColorAdjustment*(para1: HDC; para2: var COLORADJUSTMENT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetColorAdjustment\".}"
  }, 
  {
    "name": "GetColorAdjustment", 
    "type": "skProc", 
    "code": "proc GetColorAdjustment*(para1: HDC; para2: LPCOLORADJUSTMENT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetColorAdjustment\".}"
  }, 
  {
    "name": "CreateHalftonePalette", 
    "type": "skProc", 
    "code": "proc CreateHalftonePalette*(para1: HDC): HPALETTE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CreateHalftonePalette\".}"
  }, 
  {
    "name": "EndDoc", 
    "type": "skProc", 
    "code": "proc EndDoc*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", importc: \"EndDoc\".}"
  }, 
  {
    "name": "StartPage", 
    "type": "skProc", 
    "code": "proc StartPage*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                     importc: \"StartPage\".}"
  }, 
  {
    "name": "EndPage", 
    "type": "skProc", 
    "code": "proc EndPage*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", importc: \"EndPage\".}"
  }, 
  {
    "name": "AbortDoc", 
    "type": "skProc", 
    "code": "proc AbortDoc*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A                                    importc: \"AbortDoc\".}"
  }, 
  {
    "name": "SetAbortProc", 
    "type": "skProc", 
    "code": "proc SetAbortProc*(para1: HDC; para2: TABORTPROC): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetAbortProc\".}"
  }, 
  {
    "name": "ArcTo", 
    "type": "skProc", 
    "code": "proc ArcTo*(para1: HDC; para2: int32; para3: int32; para4: int32; para5: int32; \u000A            para6: int32; para7: int32; para8: int32; para9: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ArcTo\".}"
  }, 
  {
    "name": "BeginPath", 
    "type": "skProc", 
    "code": "proc BeginPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                       importc: \"BeginPath\".}"
  }, 
  {
    "name": "CloseFigure", 
    "type": "skProc", 
    "code": "proc CloseFigure*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"CloseFigure\".}"
  }, 
  {
    "name": "EndPath", 
    "type": "skProc", 
    "code": "proc EndPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                     importc: \"EndPath\".}"
  }, 
  {
    "name": "FillPath", 
    "type": "skProc", 
    "code": "proc FillPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                      importc: \"FillPath\".}"
  }, 
  {
    "name": "FlattenPath", 
    "type": "skProc", 
    "code": "proc FlattenPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"FlattenPath\".}"
  }, 
  {
    "name": "GetPath", 
    "type": "skProc", 
    "code": "proc GetPath*(para1: HDC; para2: LPPOINT; para3: LPBYTE; para4: int32): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetPath\".}"
  }, 
  {
    "name": "PathToRegion", 
    "type": "skProc", 
    "code": "proc PathToRegion*(para1: HDC): HRGN {.stdcall, dynlib: \"gdi32\", \u000A                                       importc: \"PathToRegion\".}"
  }, 
  {
    "name": "PolyDraw", 
    "type": "skProc", 
    "code": "proc PolyDraw*(para1: HDC; para2: var POINT; para3: var int8; para4: int32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyDraw\".}"
  }, 
  {
    "name": "SelectClipPath", 
    "type": "skProc", 
    "code": "proc SelectClipPath*(para1: HDC; para2: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SelectClipPath\".}"
  }, 
  {
    "name": "SetArcDirection", 
    "type": "skProc", 
    "code": "proc SetArcDirection*(para1: HDC; para2: int32): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetArcDirection\".}"
  }, 
  {
    "name": "SetMiterLimit", 
    "type": "skProc", 
    "code": "proc SetMiterLimit*(para1: HDC; para2: float32; para3: ptr float32): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetMiterLimit\".}"
  }, 
  {
    "name": "StrokeAndFillPath", 
    "type": "skProc", 
    "code": "proc StrokeAndFillPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StrokeAndFillPath\".}"
  }, 
  {
    "name": "StrokePath", 
    "type": "skProc", 
    "code": "proc StrokePath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                        importc: \"StrokePath\".}"
  }, 
  {
    "name": "WidenPath", 
    "type": "skProc", 
    "code": "proc WidenPath*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A                                       importc: \"WidenPath\".}"
  }, 
  {
    "name": "ExtCreatePen", 
    "type": "skProc", 
    "code": "proc ExtCreatePen*(para1: DWORD; para2: DWORD; para3: var LOGBRUSH; \u000A                   para4: DWORD; para5: var DWORD): HPEN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ExtCreatePen\".}"
  }, 
  {
    "name": "GetMiterLimit", 
    "type": "skProc", 
    "code": "proc GetMiterLimit*(para1: HDC; para2: ptr float32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetMiterLimit\".}"
  }, 
  {
    "name": "GetArcDirection", 
    "type": "skProc", 
    "code": "proc GetArcDirection*(para1: HDC): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetArcDirection\".}"
  }, 
  {
    "name": "MoveToEx", 
    "type": "skProc", 
    "code": "proc MoveToEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"MoveToEx\".}"
  }, 
  {
    "name": "CreatePolygonRgn", 
    "type": "skProc", 
    "code": "proc CreatePolygonRgn*(para1: var POINT; para2: int32; para3: int32): HRGN {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreatePolygonRgn\".}"
  }, 
  {
    "name": "DPtoLP", 
    "type": "skProc", 
    "code": "proc DPtoLP*(para1: HDC; para2: LPPOINT; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"DPtoLP\".}"
  }, 
  {
    "name": "LPtoDP", 
    "type": "skProc", 
    "code": "proc LPtoDP*(para1: HDC; para2: LPPOINT; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"LPtoDP\".}"
  }, 
  {
    "name": "Polygon", 
    "type": "skProc", 
    "code": "proc Polygon*(para1: HDC; para2: LPPOINT; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"Polygon\".}"
  }, 
  {
    "name": "Polyline", 
    "type": "skProc", 
    "code": "proc Polyline*(para1: HDC; para2: LPPOINT; para3: int32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"Polyline\".}"
  }, 
  {
    "name": "PolyBezier", 
    "type": "skProc", 
    "code": "proc PolyBezier*(para1: HDC; para2: LPPOINT; para3: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolyBezier\".}"
  }, 
  {
    "name": "PolyBezierTo", 
    "type": "skProc", 
    "code": "proc PolyBezierTo*(para1: HDC; para2: POINT; para3: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolyBezierTo\".}"
  }, 
  {
    "name": "PolylineTo", 
    "type": "skProc", 
    "code": "proc PolylineTo*(para1: HDC; para2: LPPOINT; para3: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolylineTo\".}"
  }, 
  {
    "name": "SetViewportExtEx", 
    "type": "skProc", 
    "code": "proc SetViewportExtEx*(para1: HDC; para2: int32; para3: int32; para4: LPSIZE): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetViewportExtEx\".}"
  }, 
  {
    "name": "SetViewportOrgEx", 
    "type": "skProc", 
    "code": "proc SetViewportOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetViewportOrgEx\".}"
  }, 
  {
    "name": "SetWindowExtEx", 
    "type": "skProc", 
    "code": "proc SetWindowExtEx*(para1: HDC; para2: int32; para3: int32; para4: LPSIZE): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetWindowExtEx\".}"
  }, 
  {
    "name": "SetWindowOrgEx", 
    "type": "skProc", 
    "code": "proc SetWindowOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetWindowOrgEx\".}"
  }, 
  {
    "name": "OffsetViewportOrgEx", 
    "type": "skProc", 
    "code": "proc OffsetViewportOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"OffsetViewportOrgEx\".}"
  }, 
  {
    "name": "OffsetWindowOrgEx", 
    "type": "skProc", 
    "code": "proc OffsetWindowOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"OffsetWindowOrgEx\".}"
  }, 
  {
    "name": "ScaleViewportExtEx", 
    "type": "skProc", 
    "code": "proc ScaleViewportExtEx*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                         para5: int32; para6: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ScaleViewportExtEx\".}"
  }, 
  {
    "name": "ScaleWindowExtEx", 
    "type": "skProc", 
    "code": "proc ScaleWindowExtEx*(para1: HDC; para2: int32; para3: int32; para4: int32; \u000A                       para5: int32; para6: LPSIZE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ScaleWindowExtEx\".}"
  }, 
  {
    "name": "SetBitmapDimensionEx", 
    "type": "skProc", 
    "code": "proc SetBitmapDimensionEx*(para1: HBITMAP; para2: int32; para3: int32; \u000A                           para4: LPSIZE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetBitmapDimensionEx\".}"
  }, 
  {
    "name": "SetBrushOrgEx", 
    "type": "skProc", 
    "code": "proc SetBrushOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetBrushOrgEx\".}"
  }, 
  {
    "name": "GetDCOrgEx", 
    "type": "skProc", 
    "code": "proc GetDCOrgEx*(para1: HDC; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetDCOrgEx\".}"
  }, 
  {
    "name": "FixBrushOrgEx", 
    "type": "skProc", 
    "code": "proc FixBrushOrgEx*(para1: HDC; para2: int32; para3: int32; para4: LPPOINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"FixBrushOrgEx\".}"
  }, 
  {
    "name": "UnrealizeObject", 
    "type": "skProc", 
    "code": "proc UnrealizeObject*(para1: HGDIOBJ): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"UnrealizeObject\".}"
  }, 
  {
    "name": "GdiFlush", 
    "type": "skProc", 
    "code": "proc GdiFlush*(): WINBOOL {.stdcall, dynlib: \"gdi32\", importc: \"GdiFlush\".}"
  }, 
  {
    "name": "GdiSetBatchLimit", 
    "type": "skProc", 
    "code": "proc GdiSetBatchLimit*(para1: DWORD): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GdiSetBatchLimit\".}"
  }, 
  {
    "name": "GdiGetBatchLimit", 
    "type": "skProc", 
    "code": "proc GdiGetBatchLimit*(): DWORD {.stdcall, dynlib: \"gdi32\", \u000A                                  importc: \"GdiGetBatchLimit\".}"
  }, 
  {
    "name": "SetICMMode", 
    "type": "skProc", 
    "code": "proc SetICMMode*(para1: HDC; para2: int32): int32 {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SetICMMode\".}"
  }, 
  {
    "name": "CheckColorsInGamut", 
    "type": "skProc", 
    "code": "proc CheckColorsInGamut*(para1: HDC; para2: LPVOID; para3: LPVOID; para4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CheckColorsInGamut\".}"
  }, 
  {
    "name": "GetColorSpace", 
    "type": "skProc", 
    "code": "proc GetColorSpace*(para1: HDC): HANDLE {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetColorSpace\".}"
  }, 
  {
    "name": "SetColorSpace", 
    "type": "skProc", 
    "code": "proc SetColorSpace*(para1: HDC; para2: HCOLORSPACE): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetColorSpace\".}"
  }, 
  {
    "name": "DeleteColorSpace", 
    "type": "skProc", 
    "code": "proc DeleteColorSpace*(para1: HCOLORSPACE): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"DeleteColorSpace\".}"
  }, 
  {
    "name": "GetDeviceGammaRamp", 
    "type": "skProc", 
    "code": "proc GetDeviceGammaRamp*(para1: HDC; para2: LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetDeviceGammaRamp\".}"
  }, 
  {
    "name": "SetDeviceGammaRamp", 
    "type": "skProc", 
    "code": "proc SetDeviceGammaRamp*(para1: HDC; para2: LPVOID): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetDeviceGammaRamp\".}"
  }, 
  {
    "name": "ColorMatchToTarget", 
    "type": "skProc", 
    "code": "proc ColorMatchToTarget*(para1: HDC; para2: HDC; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ColorMatchToTarget\".}"
  }, 
  {
    "name": "CreatePropertySheetPageA", 
    "type": "skProc", 
    "code": "proc CreatePropertySheetPageA*(lppsp: LPCPROPSHEETPAGE): HPROPSHEETPAGE {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"CreatePropertySheetPageA\".}"
  }, 
  {
    "name": "DestroyPropertySheetPage", 
    "type": "skProc", 
    "code": "proc DestroyPropertySheetPage*(hPSPage: HPROPSHEETPAGE): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"DestroyPropertySheetPage\".}"
  }, 
  {
    "name": "InitCommonControls", 
    "type": "skProc", 
    "code": "proc InitCommonControls*() {.stdcall, dynlib: \"comctl32\", \u000A                             importc: \"InitCommonControls\".}"
  }, 
  {
    "name": "ImageList_AddIcon", 
    "type": "skProc", 
    "code": "proc ImageList_AddIcon*(himl: HIMAGELIST; hicon: HICON): int32"
  }, 
  {
    "name": "ImageList_Create", 
    "type": "skProc", 
    "code": "proc ImageList_Create*(cx: int32; cy: int32; flags: WINUINT; cInitial: int32; \u000A                       cGrow: int32): HIMAGELIST {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"ImageList_Create\".}"
  }, 
  {
    "name": "ImageList_Destroy", 
    "type": "skProc", 
    "code": "proc ImageList_Destroy*(himl: HIMAGELIST): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_Destroy\".}"
  }, 
  {
    "name": "ImageList_GetImageCount", 
    "type": "skProc", 
    "code": "proc ImageList_GetImageCount*(himl: HIMAGELIST): int32 {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_GetImageCount\".}"
  }, 
  {
    "name": "ImageList_Add", 
    "type": "skProc", 
    "code": "proc ImageList_Add*(himl: HIMAGELIST; hbmImage: HBITMAP; hbmMask: HBITMAP): int32 {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_Add\".}"
  }, 
  {
    "name": "ImageList_ReplaceIcon", 
    "type": "skProc", 
    "code": "proc ImageList_ReplaceIcon*(himl: HIMAGELIST; i: int32; hicon: HICON): int32 {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_ReplaceIcon\".}"
  }, 
  {
    "name": "ImageList_SetBkColor", 
    "type": "skProc", 
    "code": "proc ImageList_SetBkColor*(himl: HIMAGELIST; clrBk: COLORREF): COLORREF {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_SetBkColor\".}"
  }, 
  {
    "name": "ImageList_GetBkColor", 
    "type": "skProc", 
    "code": "proc ImageList_GetBkColor*(himl: HIMAGELIST): COLORREF {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_GetBkColor\".}"
  }, 
  {
    "name": "ImageList_SetOverlayImage", 
    "type": "skProc", 
    "code": "proc ImageList_SetOverlayImage*(himl: HIMAGELIST; iImage: int32; iOverlay: int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_SetOverlayImage\".}"
  }, 
  {
    "name": "ImageList_Draw", 
    "type": "skProc", 
    "code": "proc ImageList_Draw*(himl: HIMAGELIST; i: int32; hdcDst: HDC; x: int32; \u000A                     y: int32; fStyle: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_Draw\".}"
  }, 
  {
    "name": "ImageList_Replace", 
    "type": "skProc", 
    "code": "proc ImageList_Replace*(himl: HIMAGELIST; i: int32; hbmImage: HBITMAP; \u000A                        hbmMask: HBITMAP): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_Replace\".}"
  }, 
  {
    "name": "ImageList_AddMasked", 
    "type": "skProc", 
    "code": "proc ImageList_AddMasked*(himl: HIMAGELIST; hbmImage: HBITMAP; crMask: COLORREF): int32 {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_AddMasked\".}"
  }, 
  {
    "name": "ImageList_DrawEx", 
    "type": "skProc", 
    "code": "proc ImageList_DrawEx*(himl: HIMAGELIST; i: int32; hdcDst: HDC; x: int32; \u000A                       y: int32; dx: int32; dy: int32; rgbBk: COLORREF; \u000A                       rgbFg: COLORREF; fStyle: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_DrawEx\".}"
  }, 
  {
    "name": "ImageList_Remove", 
    "type": "skProc", 
    "code": "proc ImageList_Remove*(himl: HIMAGELIST; i: int32): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_Remove\".}"
  }, 
  {
    "name": "ImageList_GetIcon", 
    "type": "skProc", 
    "code": "proc ImageList_GetIcon*(himl: HIMAGELIST; i: int32; flags: WINUINT): HICON {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_GetIcon\".}"
  }, 
  {
    "name": "ImageList_BeginDrag", 
    "type": "skProc", 
    "code": "proc ImageList_BeginDrag*(himlTrack: HIMAGELIST; iTrack: int32; \u000A                          dxHotspot: int32; dyHotspot: int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_BeginDrag\".}"
  }, 
  {
    "name": "ImageList_EndDrag", 
    "type": "skProc", 
    "code": "proc ImageList_EndDrag*() {.stdcall, dynlib: \"comctl32\", \u000A                            importc: \"ImageList_EndDrag\".}"
  }, 
  {
    "name": "ImageList_DragEnter", 
    "type": "skProc", 
    "code": "proc ImageList_DragEnter*(hwndLock: HWND; x: int32; y: int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_DragEnter\".}"
  }, 
  {
    "name": "ImageList_DragLeave", 
    "type": "skProc", 
    "code": "proc ImageList_DragLeave*(hwndLock: HWND): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_DragLeave\".}"
  }, 
  {
    "name": "ImageList_DragMove", 
    "type": "skProc", 
    "code": "proc ImageList_DragMove*(x: int32; y: int32): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_DragMove\".}"
  }, 
  {
    "name": "ImageList_SetDragCursorImage", 
    "type": "skProc", 
    "code": "proc ImageList_SetDragCursorImage*(himlDrag: HIMAGELIST; iDrag: int32; \u000A                                   dxHotspot: int32; dyHotspot: int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_SetDragCursorImage\".}"
  }, 
  {
    "name": "ImageList_DragShowNolock", 
    "type": "skProc", 
    "code": "proc ImageList_DragShowNolock*(fShow: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_DragShowNolock\".}"
  }, 
  {
    "name": "ImageList_GetDragImage", 
    "type": "skProc", 
    "code": "proc ImageList_GetDragImage*(ppt: LPPOINT; pptHotspot: LPPOINT): HIMAGELIST {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_GetDragImage\".}"
  }, 
  {
    "name": "ImageList_GetIconSize", 
    "type": "skProc", 
    "code": "proc ImageList_GetIconSize*(himl: HIMAGELIST; cx: var int32; cy: var int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_GetIconSize\".}"
  }, 
  {
    "name": "ImageList_SetIconSize", 
    "type": "skProc", 
    "code": "proc ImageList_SetIconSize*(himl: HIMAGELIST; cx: int32; cy: int32): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_SetIconSize\".}"
  }, 
  {
    "name": "ImageList_GetImageInfo", 
    "type": "skProc", 
    "code": "proc ImageList_GetImageInfo*(himl: HIMAGELIST; i: int32; \u000A                             pImageInfo: var IMAGEINFO): WINBOOL {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_GetImageInfo\".}"
  }, 
  {
    "name": "ImageList_Merge", 
    "type": "skProc", 
    "code": "proc ImageList_Merge*(himl1: HIMAGELIST; i1: int32; himl2: HIMAGELIST; \u000A                      i2: int32; dx: int32; dy: int32): HIMAGELIST {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"ImageList_Merge\".}"
  }, 
  {
    "name": "ImageList_SetImageCount", 
    "type": "skProc", 
    "code": "proc ImageList_SetImageCount*(himl: HIMAGELIST; uNewCount: WINUINT): int {.\u000A    stdcall, dynlib: \"comctl32.dll\", importc: \"ImageList_SetImageCount\".}"
  }, 
  {
    "name": "CreateToolbarEx", 
    "type": "skProc", 
    "code": "proc CreateToolbarEx*(wnd: HWND; ws: DWORD; wID: WINUINT; nBitmaps: int32; \u000A                      hBMInst: HINST; wBMID: WINUINT; lpButtons: LPCTBBUTTON; \u000A                      iNumButtons: int32; dxButton: int32; dyButton: int32; \u000A                      dxBitmap: int32; dyBitmap: int32; uStructSize: WINUINT): HWND {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"CreateToolbarEx\".}"
  }, 
  {
    "name": "CreateMappedBitmap", 
    "type": "skProc", 
    "code": "proc CreateMappedBitmap*(hInstance: HINST; idBitmap: int32; wFlags: WINUINT; \u000A                         lpColorMap: LPCOLORMAP; iNumMaps: int32): HBITMAP {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"CreateMappedBitmap\".}"
  }, 
  {
    "name": "MenuHelp", 
    "type": "skProc", 
    "code": "proc MenuHelp*(uMsg: WINUINT; wp: WPARAM; lp: LPARAM; hMainMenu: HMENU; \u000A               hInst: HINST; hwndStatus: HWND; lpwIDs: var WINUINT) {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"MenuHelp\".}"
  }, 
  {
    "name": "ShowHideMenuCtl", 
    "type": "skProc", 
    "code": "proc ShowHideMenuCtl*(wnd: HWND; uFlags: WINUINT; lpInfo: LPINT): WINBOOL {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ShowHideMenuCtl\".}"
  }, 
  {
    "name": "GetEffectiveClientRect", 
    "type": "skProc", 
    "code": "proc GetEffectiveClientRect*(wnd: HWND; lprc: LPRECT; lpInfo: LPINT) {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"GetEffectiveClientRect\".}"
  }, 
  {
    "name": "MakeDragList", 
    "type": "skProc", 
    "code": "proc MakeDragList*(hLB: HWND): WINBOOL {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"MakeDragList\".}"
  }, 
  {
    "name": "DrawInsert", 
    "type": "skProc", 
    "code": "proc DrawInsert*(handParent: HWND; hLB: HWND; nItem: int32) {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"DrawInsert\".}"
  }, 
  {
    "name": "LBItemFromPt", 
    "type": "skProc", 
    "code": "proc LBItemFromPt*(hLB: HWND; pt: POINT; bAutoScroll: WINBOOL): int32 {.stdcall, \u000A    dynlib: \"comctl32\", importc: \"LBItemFromPt\".}"
  }, 
  {
    "name": "CreateUpDownControl", 
    "type": "skProc", 
    "code": "proc CreateUpDownControl*(dwStyle: DWORD; x: int32; y: int32; cx: int32; \u000A                          cy: int32; hParent: HWND; nID: int32; hInst: HINST; \u000A                          hBuddy: HWND; nUpper: int32; nLower: int32; \u000A                          nPos: int32): HWND {.stdcall, dynlib: \"comctl32\", \u000A    importc: \"CreateUpDownControl\".}"
  }, 
  {
    "name": "RegCloseKey", 
    "type": "skProc", 
    "code": "proc RegCloseKey*(key: HKEY): LONG {.stdcall, dynlib: \"advapi32\", \u000A                                     importc: \"RegCloseKey\".}"
  }, 
  {
    "name": "RegSetKeySecurity", 
    "type": "skProc", 
    "code": "proc RegSetKeySecurity*(key: HKEY; SecurityInformation: SECURITY_INFORMATION; \u000A                        pSecurityDescriptor: PSECURITY_DESCRIPTOR): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetKeySecurity\".}"
  }, 
  {
    "name": "RegFlushKey", 
    "type": "skProc", 
    "code": "proc RegFlushKey*(key: HKEY): LONG {.stdcall, dynlib: \"advapi32\", \u000A                                     importc: \"RegFlushKey\".}"
  }, 
  {
    "name": "RegGetKeySecurity", 
    "type": "skProc", 
    "code": "proc RegGetKeySecurity*(key: HKEY; SecurityInformation: SECURITY_INFORMATION; \u000A                        pSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                        lpcbSecurityDescriptor: LPDWORD): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegGetKeySecurity\".}"
  }, 
  {
    "name": "RegNotifyChangeKeyValue", 
    "type": "skProc", 
    "code": "proc RegNotifyChangeKeyValue*(key: HKEY; bWatchSubtree: WINBOOL; \u000A                              dwNotifyFilter: DWORD; hEvent: HANDLE; \u000A                              fAsynchronus: WINBOOL): LONG {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegNotifyChangeKeyValue\".}"
  }, 
  {
    "name": "IsValidCodePage", 
    "type": "skProc", 
    "code": "proc IsValidCodePage*(CodePage: WINUINT): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"IsValidCodePage\".}"
  }, 
  {
    "name": "GetACP", 
    "type": "skProc", 
    "code": "proc GetACP*(): WINUINT {.stdcall, dynlib: \"kernel32\", importc: \"GetACP\".}"
  }, 
  {
    "name": "GetOEMCP", 
    "type": "skProc", 
    "code": "proc GetOEMCP*(): WINUINT {.stdcall, dynlib: \"kernel32\", importc: \"GetOEMCP\".}"
  }, 
  {
    "name": "GetCPInfo", 
    "type": "skProc", 
    "code": "proc GetCPInfo*(para1: WINUINT; para2: LPCPINFO): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCPInfo\".}"
  }, 
  {
    "name": "IsDBCSLeadByte", 
    "type": "skProc", 
    "code": "proc IsDBCSLeadByte*(TestChar: int8): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"IsDBCSLeadByte\".}"
  }, 
  {
    "name": "IsDBCSLeadByteEx", 
    "type": "skProc", 
    "code": "proc IsDBCSLeadByteEx*(CodePage: WINUINT; TestChar: int8): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsDBCSLeadByteEx\".}"
  }, 
  {
    "name": "MultiByteToWideChar", 
    "type": "skProc", 
    "code": "proc MultiByteToWideChar*(CodePage: WINUINT; dwFlags: DWORD; \u000A                          lpMultiByteStr: LPCSTR; cchMultiByte: int32; \u000A                          lpWideCharStr: LPWSTR; cchWideChar: int32): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"MultiByteToWideChar\".}"
  }, 
  {
    "name": "WideCharToMultiByte", 
    "type": "skProc", 
    "code": "proc WideCharToMultiByte*(CodePage: WINUINT; dwFlags: DWORD; \u000A                          lpWideCharStr: LPCWSTR; cchWideChar: int32; \u000A                          lpMultiByteStr: LPSTR; cchMultiByte: int32; \u000A                          lpDefaultChar: LPCSTR; lpUsedDefaultChar: LPBOOL): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WideCharToMultiByte\".}"
  }, 
  {
    "name": "IsValidLocale", 
    "type": "skProc", 
    "code": "proc IsValidLocale*(Locale: LCID; dwFlags: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"IsValidLocale\".}"
  }, 
  {
    "name": "ConvertDefaultLocale", 
    "type": "skProc", 
    "code": "proc ConvertDefaultLocale*(Locale: LCID): LCID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ConvertDefaultLocale\".}"
  }, 
  {
    "name": "GetThreadLocale", 
    "type": "skProc", 
    "code": "proc GetThreadLocale*(): LCID {.stdcall, dynlib: \"kernel32\", \u000A                                importc: \"GetThreadLocale\".}"
  }, 
  {
    "name": "SetThreadLocale", 
    "type": "skProc", 
    "code": "proc SetThreadLocale*(Locale: LCID): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetThreadLocale\".}"
  }, 
  {
    "name": "GetSystemDefaultLangID", 
    "type": "skProc", 
    "code": "proc GetSystemDefaultLangID*(): LANGID {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemDefaultLangID\".}"
  }, 
  {
    "name": "GetUserDefaultLangID", 
    "type": "skProc", 
    "code": "proc GetUserDefaultLangID*(): LANGID {.stdcall, dynlib: \"kernel32\", \u000A                                       importc: \"GetUserDefaultLangID\".}"
  }, 
  {
    "name": "GetSystemDefaultLCID", 
    "type": "skProc", 
    "code": "proc GetSystemDefaultLCID*(): LCID {.stdcall, dynlib: \"kernel32\", \u000A                                     importc: \"GetSystemDefaultLCID\".}"
  }, 
  {
    "name": "GetUserDefaultLCID", 
    "type": "skProc", 
    "code": "proc GetUserDefaultLCID*(): LCID {.stdcall, dynlib: \"kernel32\", \u000A                                   importc: \"GetUserDefaultLCID\".}"
  }, 
  {
    "name": "ReadConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputAttribute*(hConsoleOutput: HANDLE; lpAttribute: LPWORD; \u000A                                 nLength: DWORD; dwReadCoord: COORD; \u000A                                 lpNumberOfAttrsRead: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputAttribute\".}"
  }, 
  {
    "name": "WriteConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputAttribute*(hConsoleOutput: HANDLE; \u000A                                  lpAttribute: var int16; nLength: DWORD; \u000A                                  dwWriteCoord: COORD; \u000A                                  lpNumberOfAttrsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputAttribute\".}"
  }, 
  {
    "name": "FillConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputAttribute*(hConsoleOutput: HANDLE; wAttribute: int16; \u000A                                 nLength: DWORD; dwWriteCoord: COORD; \u000A                                 lpNumberOfAttrsWritten: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputAttribute\".}"
  }, 
  {
    "name": "GetConsoleMode", 
    "type": "skProc", 
    "code": "proc GetConsoleMode*(hConsoleHandle: HANDLE; lpMode: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetConsoleMode\".}"
  }, 
  {
    "name": "GetNumberOfConsoleInputEvents", 
    "type": "skProc", 
    "code": "proc GetNumberOfConsoleInputEvents*(hConsoleInput: HANDLE; \u000A                                    lpNumberOfEvents: PDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNumberOfConsoleInputEvents\".}"
  }, 
  {
    "name": "GetConsoleScreenBufferInfo", 
    "type": "skProc", 
    "code": "proc GetConsoleScreenBufferInfo*(hConsoleOutput: HANDLE; \u000A    lpConsoleScreenBufferInfo: PCONSOLE_SCREEN_BUFFER_INFO): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetConsoleScreenBufferInfo\".}"
  }, 
  {
    "name": "GetLargestConsoleWindowSize", 
    "type": "skProc", 
    "code": "proc GetLargestConsoleWindowSize*(hConsoleOutput: HANDLE): COORD"
  }, 
  {
    "name": "GetConsoleCursorInfo", 
    "type": "skProc", 
    "code": "proc GetConsoleCursorInfo*(hConsoleOutput: HANDLE; \u000A                           lpConsoleCursorInfo: PCONSOLE_CURSOR_INFO): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetConsoleCursorInfo\".}"
  }, 
  {
    "name": "GetNumberOfConsoleMouseButtons", 
    "type": "skProc", 
    "code": "proc GetNumberOfConsoleMouseButtons*(lpNumberOfMouseButtons: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNumberOfConsoleMouseButtons\".}"
  }, 
  {
    "name": "SetConsoleMode", 
    "type": "skProc", 
    "code": "proc SetConsoleMode*(hConsoleHandle: HANDLE; dwMode: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleMode\".}"
  }, 
  {
    "name": "SetConsoleActiveScreenBuffer", 
    "type": "skProc", 
    "code": "proc SetConsoleActiveScreenBuffer*(hConsoleOutput: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleActiveScreenBuffer\".}"
  }, 
  {
    "name": "FlushConsoleInputBuffer", 
    "type": "skProc", 
    "code": "proc FlushConsoleInputBuffer*(hConsoleInput: HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FlushConsoleInputBuffer\".}"
  }, 
  {
    "name": "SetConsoleScreenBufferSize", 
    "type": "skProc", 
    "code": "proc SetConsoleScreenBufferSize*(hConsoleOutput: HANDLE; dwSize: COORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleScreenBufferSize\".}"
  }, 
  {
    "name": "SetConsoleCursorPosition", 
    "type": "skProc", 
    "code": "proc SetConsoleCursorPosition*(hConsoleOutput: HANDLE; dwCursorPosition: COORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleCursorPosition\".}"
  }, 
  {
    "name": "SetConsoleCursorInfo", 
    "type": "skProc", 
    "code": "proc SetConsoleCursorInfo*(hConsoleOutput: HANDLE; \u000A                           lpConsoleCursorInfo: PCONSOLE_CURSOR_INFO): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleCursorInfo\".}"
  }, 
  {
    "name": "SetConsoleWindowInfo", 
    "type": "skProc", 
    "code": "proc SetConsoleWindowInfo*(hConsoleOutput: HANDLE; bAbsolute: WINBOOL; \u000A                           lpConsoleWindow: var SMALL_RECT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleWindowInfo\".}"
  }, 
  {
    "name": "SetConsoleTextAttribute", 
    "type": "skProc", 
    "code": "proc SetConsoleTextAttribute*(hConsoleOutput: HANDLE; wAttributes: int16): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleTextAttribute\".}"
  }, 
  {
    "name": "SetConsoleCtrlHandler", 
    "type": "skProc", 
    "code": "proc SetConsoleCtrlHandler*(HandlerRoutine: PHANDLER_ROUTINE; Add: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleCtrlHandler\".}"
  }, 
  {
    "name": "GenerateConsoleCtrlEvent", 
    "type": "skProc", 
    "code": "proc GenerateConsoleCtrlEvent*(dwCtrlEvent: DWORD; dwProcessGroupId: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GenerateConsoleCtrlEvent\".}"
  }, 
  {
    "name": "AllocConsole", 
    "type": "skProc", 
    "code": "proc AllocConsole*(): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A                                importc: \"AllocConsole\".}"
  }, 
  {
    "name": "FreeConsole", 
    "type": "skProc", 
    "code": "proc FreeConsole*(): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A                               importc: \"FreeConsole\".}"
  }, 
  {
    "name": "CreateConsoleScreenBuffer", 
    "type": "skProc", 
    "code": "proc CreateConsoleScreenBuffer*(dwDesiredAccess: DWORD; dwShareMode: DWORD; \u000A                                lpSecurityAttributes: var SECURITY_ATTRIBUTES; \u000A                                dwFlags: DWORD; lpScreenBufferData: LPVOID): HANDLE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateConsoleScreenBuffer\".}"
  }, 
  {
    "name": "GetConsoleCP", 
    "type": "skProc", 
    "code": "proc GetConsoleCP*(): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A                                importc: \"GetConsoleCP\".}"
  }, 
  {
    "name": "SetConsoleCP", 
    "type": "skProc", 
    "code": "proc SetConsoleCP*(wCodePageID: WINUINT): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"SetConsoleCP\".}"
  }, 
  {
    "name": "GetConsoleOutputCP", 
    "type": "skProc", 
    "code": "proc GetConsoleOutputCP*(): WINUINT {.stdcall, dynlib: \"kernel32\", \u000A                                      importc: \"GetConsoleOutputCP\".}"
  }, 
  {
    "name": "SetConsoleOutputCP", 
    "type": "skProc", 
    "code": "proc SetConsoleOutputCP*(wCodePageID: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetConsoleOutputCP\".}"
  }, 
  {
    "name": "WNetConnectionDialog", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog*(wnd: HWND; dwType: DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetConnectionDialog\".}"
  }, 
  {
    "name": "WNetDisconnectDialog", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog*(wnd: HWND; dwType: DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetDisconnectDialog\".}"
  }, 
  {
    "name": "WNetCloseEnum", 
    "type": "skProc", 
    "code": "proc WNetCloseEnum*(hEnum: HANDLE): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetCloseEnum\".}"
  }, 
  {
    "name": "CloseServiceHandle", 
    "type": "skProc", 
    "code": "proc CloseServiceHandle*(hSCObject: SC_HANDLE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"CloseServiceHandle\".}"
  }, 
  {
    "name": "ControlService", 
    "type": "skProc", 
    "code": "proc ControlService*(hService: SC_HANDLE; dwControl: DWORD; \u000A                     lpServiceStatus: LPSERVICE_STATUS): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ControlService\".}"
  }, 
  {
    "name": "DeleteService", 
    "type": "skProc", 
    "code": "proc DeleteService*(hService: SC_HANDLE): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"DeleteService\".}"
  }, 
  {
    "name": "LockServiceDatabase", 
    "type": "skProc", 
    "code": "proc LockServiceDatabase*(hSCManager: SC_HANDLE): SC_LOCK {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LockServiceDatabase\".}"
  }, 
  {
    "name": "NotifyBootConfigStatus", 
    "type": "skProc", 
    "code": "proc NotifyBootConfigStatus*(BootAcceptable: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"NotifyBootConfigStatus\".}"
  }, 
  {
    "name": "QueryServiceObjectSecurity", 
    "type": "skProc", 
    "code": "proc QueryServiceObjectSecurity*(hService: SC_HANDLE; \u000A                                 dwSecurityInformation: SECURITY_INFORMATION; \u000A                                 lpSecurityDescriptor: PSECURITY_DESCRIPTOR; \u000A                                 cbBufSize: DWORD; pcbBytesNeeded: LPDWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceObjectSecurity\".}"
  }, 
  {
    "name": "QueryServiceStatus", 
    "type": "skProc", 
    "code": "proc QueryServiceStatus*(hService: SC_HANDLE; lpServiceStatus: LPSERVICE_STATUS): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceStatus\".}"
  }, 
  {
    "name": "SetServiceObjectSecurity", 
    "type": "skProc", 
    "code": "proc SetServiceObjectSecurity*(hService: SC_HANDLE; \u000A                               dwSecurityInformation: SECURITY_INFORMATION; \u000A                               lpSecurityDescriptor: PSECURITY_DESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"SetServiceObjectSecurity\".}"
  }, 
  {
    "name": "SetServiceStatus", 
    "type": "skProc", 
    "code": "proc SetServiceStatus*(hServiceStatus: SERVICE_STATUS_HANDLE; \u000A                       lpServiceStatus: LPSERVICE_STATUS): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetServiceStatus\".}"
  }, 
  {
    "name": "UnlockServiceDatabase", 
    "type": "skProc", 
    "code": "proc UnlockServiceDatabase*(ScLock: SC_LOCK): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"UnlockServiceDatabase\".}"
  }, 
  {
    "name": "ChoosePixelFormat", 
    "type": "skProc", 
    "code": "proc ChoosePixelFormat*(para1: HDC; para2: PPIXELFORMATDESCRIPTOR): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ChoosePixelFormat\".}"
  }, 
  {
    "name": "DescribePixelFormat", 
    "type": "skProc", 
    "code": "proc DescribePixelFormat*(para1: HDC; para2: int32; para3: WINUINT; \u000A                          para4: LPPIXELFORMATDESCRIPTOR): int32 {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"DescribePixelFormat\".}"
  }, 
  {
    "name": "SetPixelFormat", 
    "type": "skProc", 
    "code": "proc SetPixelFormat*(para1: HDC; para2: int32; para3: PPIXELFORMATDESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetPixelFormat\".}"
  }, 
  {
    "name": "SwapBuffers", 
    "type": "skProc", 
    "code": "proc SwapBuffers*(para1: HDC): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"SwapBuffers\".}"
  }, 
  {
    "name": "DragQueryPoint", 
    "type": "skProc", 
    "code": "proc DragQueryPoint*(para1: HDROP; para2: LPPOINT): WINBOOL {.stdcall, \u000A    dynlib: \"shell32\", importc: \"DragQueryPoint\".}"
  }, 
  {
    "name": "DragFinish", 
    "type": "skProc", 
    "code": "proc DragFinish*(para1: HDROP) {.stdcall, dynlib: \"shell32\", \u000A                                 importc: \"DragFinish\".}"
  }, 
  {
    "name": "DragAcceptFiles", 
    "type": "skProc", 
    "code": "proc DragAcceptFiles*(para1: HWND; para2: WINBOOL) {.stdcall, dynlib: \"shell32\", \u000A    importc: \"DragAcceptFiles\".}"
  }, 
  {
    "name": "DuplicateIcon", 
    "type": "skProc", 
    "code": "proc DuplicateIcon*(para1: HINST; para2: HICON): HICON {.stdcall, \u000A    dynlib: \"shell32\", importc: \"DuplicateIcon\".}"
  }, 
  {
    "name": "DdeAbandonTransaction", 
    "type": "skProc", 
    "code": "proc DdeAbandonTransaction*(para1: DWORD; para2: HCONV; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeAbandonTransaction\".}"
  }, 
  {
    "name": "DdeAccessData", 
    "type": "skProc", 
    "code": "proc DdeAccessData*(para1: HDDEDATA; para2: PDWORD): PBYTE {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeAccessData\".}"
  }, 
  {
    "name": "DdeAddData", 
    "type": "skProc", 
    "code": "proc DdeAddData*(para1: HDDEDATA; para2: PBYTE; para3: DWORD; para4: DWORD): HDDEDATA {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeAddData\".}"
  }, 
  {
    "name": "DdeClientTransaction", 
    "type": "skProc", 
    "code": "proc DdeClientTransaction*(para1: PBYTE; para2: DWORD; para3: HCONV; para4: HSZ; \u000A                           para5: WINUINT; para6: WINUINT; para7: DWORD; \u000A                           para8: PDWORD): HDDEDATA {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeClientTransaction\".}"
  }, 
  {
    "name": "DdeCmpStringHandles", 
    "type": "skProc", 
    "code": "proc DdeCmpStringHandles*(para1: HSZ; para2: HSZ): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeCmpStringHandles\".}"
  }, 
  {
    "name": "DdeConnect", 
    "type": "skProc", 
    "code": "proc DdeConnect*(para1: DWORD; para2: HSZ; para3: HSZ; para4: var CONVCONTEXT): HCONV {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeConnect\".}"
  }, 
  {
    "name": "DdeConnectList", 
    "type": "skProc", 
    "code": "proc DdeConnectList*(para1: DWORD; para2: HSZ; para3: HSZ; para4: HCONVLIST; \u000A                     para5: PCONVCONTEXT): HCONVLIST {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeConnectList\".}"
  }, 
  {
    "name": "DdeCreateDataHandle", 
    "type": "skProc", 
    "code": "proc DdeCreateDataHandle*(para1: DWORD; para2: LPBYTE; para3: DWORD; \u000A                          para4: DWORD; para5: HSZ; para6: WINUINT; \u000A                          para7: WINUINT): HDDEDATA {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeCreateDataHandle\".}"
  }, 
  {
    "name": "DdeDisconnect", 
    "type": "skProc", 
    "code": "proc DdeDisconnect*(para1: HCONV): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeDisconnect\".}"
  }, 
  {
    "name": "DdeDisconnectList", 
    "type": "skProc", 
    "code": "proc DdeDisconnectList*(para1: HCONVLIST): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeDisconnectList\".}"
  }, 
  {
    "name": "DdeEnableCallback", 
    "type": "skProc", 
    "code": "proc DdeEnableCallback*(para1: DWORD; para2: HCONV; para3: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeEnableCallback\".}"
  }, 
  {
    "name": "DdeFreeDataHandle", 
    "type": "skProc", 
    "code": "proc DdeFreeDataHandle*(para1: HDDEDATA): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeFreeDataHandle\".}"
  }, 
  {
    "name": "DdeFreeStringHandle", 
    "type": "skProc", 
    "code": "proc DdeFreeStringHandle*(para1: DWORD; para2: HSZ): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeFreeStringHandle\".}"
  }, 
  {
    "name": "DdeGetData", 
    "type": "skProc", 
    "code": "proc DdeGetData*(para1: HDDEDATA; para2: LPBYTE; para3: DWORD; para4: DWORD): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeGetData\".}"
  }, 
  {
    "name": "DdeGetLastError", 
    "type": "skProc", 
    "code": "proc DdeGetLastError*(para1: DWORD): WINUINT {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeGetLastError\".}"
  }, 
  {
    "name": "DdeImpersonateClient", 
    "type": "skProc", 
    "code": "proc DdeImpersonateClient*(para1: HCONV): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeImpersonateClient\".}"
  }, 
  {
    "name": "DdeKeepStringHandle", 
    "type": "skProc", 
    "code": "proc DdeKeepStringHandle*(para1: DWORD; para2: HSZ): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeKeepStringHandle\".}"
  }, 
  {
    "name": "DdeNameService", 
    "type": "skProc", 
    "code": "proc DdeNameService*(para1: DWORD; para2: HSZ; para3: HSZ; para4: WINUINT): HDDEDATA {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeNameService\".}"
  }, 
  {
    "name": "DdePostAdvise", 
    "type": "skProc", 
    "code": "proc DdePostAdvise*(para1: DWORD; para2: HSZ; para3: HSZ): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdePostAdvise\".}"
  }, 
  {
    "name": "DdeQueryConvInfo", 
    "type": "skProc", 
    "code": "proc DdeQueryConvInfo*(para1: HCONV; para2: DWORD; para3: PCONVINFO): WINUINT {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeQueryConvInfo\".}"
  }, 
  {
    "name": "DdeQueryNextServer", 
    "type": "skProc", 
    "code": "proc DdeQueryNextServer*(para1: HCONVLIST; para2: HCONV): HCONV {.stdcall, \u000A    dynlib: \"user32\", importc: \"DdeQueryNextServer\".}"
  }, 
  {
    "name": "DdeReconnect", 
    "type": "skProc", 
    "code": "proc DdeReconnect*(para1: HCONV): HCONV {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeReconnect\".}"
  }, 
  {
    "name": "DdeSetUserHandle", 
    "type": "skProc", 
    "code": "proc DdeSetUserHandle*(para1: HCONV; para2: DWORD; para3: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeSetUserHandle\".}"
  }, 
  {
    "name": "DdeUnaccessData", 
    "type": "skProc", 
    "code": "proc DdeUnaccessData*(para1: HDDEDATA): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeUnaccessData\".}"
  }, 
  {
    "name": "DdeUninitialize", 
    "type": "skProc", 
    "code": "proc DdeUninitialize*(para1: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"DdeUninitialize\".}"
  }, 
  {
    "name": "SHAddToRecentDocs", 
    "type": "skProc", 
    "code": "proc SHAddToRecentDocs*(para1: WINUINT; para2: LPCVOID) {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHAddToRecentDocs\".}"
  }, 
  {
    "name": "SHBrowseForFolder", 
    "type": "skProc", 
    "code": "proc SHBrowseForFolder*(para1: LPBROWSEINFO): LPITEMIDLIST {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHBrowseForFolder\".}"
  }, 
  {
    "name": "SHChangeNotify", 
    "type": "skProc", 
    "code": "proc SHChangeNotify*(para1: LONG; para2: WINUINT; para3: LPCVOID; para4: LPCVOID) {.\u000A    stdcall, dynlib: \"shell32\", importc: \"SHChangeNotify\".}"
  }, 
  {
    "name": "SHFileOperation", 
    "type": "skProc", 
    "code": "proc SHFileOperation*(para1: LPSHFILEOPSTRUCT): int32 {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHFileOperation\".}"
  }, 
  {
    "name": "SHFreeNameMappings", 
    "type": "skProc", 
    "code": "proc SHFreeNameMappings*(para1: HANDLE) {.stdcall, dynlib: \"shell32\", \u000A    importc: \"SHFreeNameMappings\".}"
  }, 
  {
    "name": "SHGetFileInfo", 
    "type": "skProc", 
    "code": "proc SHGetFileInfo*(para1: LPCTSTR; para2: DWORD; para3: var SHFILEINFO; \u000A                    para4: WINUINT; para5: WINUINT): DWORD {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHGetFileInfo\".}"
  }, 
  {
    "name": "SHGetPathFromIDList", 
    "type": "skProc", 
    "code": "proc SHGetPathFromIDList*(para1: LPCITEMIDLIST; para2: LPTSTR): WINBOOL {.\u000A    stdcall, dynlib: \"shell32\", importc: \"SHGetPathFromIDList\".}"
  }, 
  {
    "name": "SHGetSpecialFolderLocation", 
    "type": "skProc", 
    "code": "proc SHGetSpecialFolderLocation*(para1: HWND; para2: int32; \u000A                                 para3: var LPITEMIDLIST): HRESULT {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHGetSpecialFolderLocation\".}"
  }, 
  {
    "name": "CommDlgExtendedError", 
    "type": "skProc", 
    "code": "proc CommDlgExtendedError*(): DWORD {.stdcall, dynlib: \"comdlg32\", \u000A                                      importc: \"CommDlgExtendedError\".}"
  }, 
  {
    "name": "wglUseFontBitmaps", 
    "type": "skProc", 
    "code": "proc wglUseFontBitmaps*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglUseFontBitmapsA\".}"
  }, 
  {
    "name": "wglCreateContext", 
    "type": "skProc", 
    "code": "proc wglCreateContext*(para1: HDC): HGLRC {.stdcall, dynlib: \"opengl32\", \u000A    importc: \"wglCreateContext\".}"
  }, 
  {
    "name": "wglCreateLayerContext", 
    "type": "skProc", 
    "code": "proc wglCreateLayerContext*(para1: HDC; para2: int32): HGLRC {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglCreateLayerContext\".}"
  }, 
  {
    "name": "wglCopyContext", 
    "type": "skProc", 
    "code": "proc wglCopyContext*(para1: HGLRC; para2: HGLRC; para3: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglCopyContext\".}"
  }, 
  {
    "name": "wglDeleteContext", 
    "type": "skProc", 
    "code": "proc wglDeleteContext*(para1: HGLRC): WINBOOL {.stdcall, dynlib: \"opengl32\", \u000A    importc: \"wglDeleteContext\".}"
  }, 
  {
    "name": "wglGetCurrentContext", 
    "type": "skProc", 
    "code": "proc wglGetCurrentContext*(): HGLRC {.stdcall, dynlib: \"opengl32\", \u000A                                      importc: \"wglGetCurrentContext\".}"
  }, 
  {
    "name": "wglGetCurrentDC", 
    "type": "skProc", 
    "code": "proc wglGetCurrentDC*(): HDC {.stdcall, dynlib: \"opengl32\", \u000A                               importc: \"wglGetCurrentDC\".}"
  }, 
  {
    "name": "wglMakeCurrent", 
    "type": "skProc", 
    "code": "proc wglMakeCurrent*(para1: HDC; para2: HGLRC): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglMakeCurrent\".}"
  }, 
  {
    "name": "wglShareLists", 
    "type": "skProc", 
    "code": "proc wglShareLists*(para1: HGLRC; para2: HGLRC): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglShareLists\".}"
  }, 
  {
    "name": "wglUseFontBitmapsW", 
    "type": "skProc", 
    "code": "proc wglUseFontBitmapsW*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglUseFontBitmapsW\".}"
  }, 
  {
    "name": "wglUseFontOutlines", 
    "type": "skProc", 
    "code": "proc wglUseFontOutlines*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD; \u000A                         para5: float32; para6: float32; para7: int32; \u000A                         para8: LPGLYPHMETRICSFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglUseFontOutlinesA\".}"
  }, 
  {
    "name": "wglUseFontBitmapsA", 
    "type": "skProc", 
    "code": "proc wglUseFontBitmapsA*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglUseFontBitmapsA\".}"
  }, 
  {
    "name": "wglUseFontOutlinesA", 
    "type": "skProc", 
    "code": "proc wglUseFontOutlinesA*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD; \u000A                          para5: float32; para6: float32; para7: int32; \u000A                          para8: LPGLYPHMETRICSFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglUseFontOutlinesA\".}"
  }, 
  {
    "name": "wglDescribeLayerPlane", 
    "type": "skProc", 
    "code": "proc wglDescribeLayerPlane*(para1: HDC; para2: int32; para3: int32; \u000A                            para4: WINUINT; para5: LPLAYERPLANEDESCRIPTOR): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglDescribeLayerPlane\".}"
  }, 
  {
    "name": "wglGetLayerPaletteEntries", 
    "type": "skProc", 
    "code": "proc wglGetLayerPaletteEntries*(para1: HDC; para2: int32; para3: int32; \u000A                                para4: int32; para5: var COLORREF): int32 {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglGetLayerPaletteEntries\".}"
  }, 
  {
    "name": "wglGetProcAddress", 
    "type": "skProc", 
    "code": "proc wglGetProcAddress*(para1: LPCSTR): TProc {.stdcall, dynlib: \"opengl32\", \u000A    importc: \"wglGetProcAddress\".}"
  }, 
  {
    "name": "wglRealizeLayerPalette", 
    "type": "skProc", 
    "code": "proc wglRealizeLayerPalette*(para1: HDC; para2: int32; para3: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglRealizeLayerPalette\".}"
  }, 
  {
    "name": "wglSetLayerPaletteEntries", 
    "type": "skProc", 
    "code": "proc wglSetLayerPaletteEntries*(para1: HDC; para2: int32; para3: int32; \u000A                                para4: int32; para5: var COLORREF): int32 {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglSetLayerPaletteEntries\".}"
  }, 
  {
    "name": "wglSwapLayerBuffers", 
    "type": "skProc", 
    "code": "proc wglSwapLayerBuffers*(para1: HDC; para2: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglSwapLayerBuffers\".}"
  }, 
  {
    "name": "wglUseFontOutlinesW", 
    "type": "skProc", 
    "code": "proc wglUseFontOutlinesW*(para1: HDC; para2: DWORD; para3: DWORD; para4: DWORD; \u000A                          para5: float32; para6: float32; para7: int32; \u000A                          para8: LPGLYPHMETRICSFLOAT): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglUseFontOutlinesW\".}"
  }, 
  {
    "name": "Animate_Create", 
    "type": "skProc", 
    "code": "proc Animate_Create*(hWndP: HWND; id: HMENU; dwStyle: DWORD; hInstance: HINST): HWND"
  }, 
  {
    "name": "Animate_Open", 
    "type": "skProc", 
    "code": "proc Animate_Open*(wnd: HWND; szName: LPTSTR): LRESULT"
  }, 
  {
    "name": "Animate_Play", 
    "type": "skProc", 
    "code": "proc Animate_Play*(wnd: HWND; `from`, `to`: int32; rep: WINUINT): LRESULT"
  }, 
  {
    "name": "Animate_Stop", 
    "type": "skProc", 
    "code": "proc Animate_Stop*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "Animate_Close", 
    "type": "skProc", 
    "code": "proc Animate_Close*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "Animate_Seek", 
    "type": "skProc", 
    "code": "proc Animate_Seek*(wnd: HWND; frame: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_AddPage", 
    "type": "skProc", 
    "code": "proc PropSheet_AddPage*(hPropSheetDlg: HWND; hpage: HPROPSHEETPAGE): LRESULT"
  }, 
  {
    "name": "PropSheet_Apply", 
    "type": "skProc", 
    "code": "proc PropSheet_Apply*(hPropSheetDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_CancelToClose", 
    "type": "skProc", 
    "code": "proc PropSheet_CancelToClose*(hPropSheetDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_Changed", 
    "type": "skProc", 
    "code": "proc PropSheet_Changed*(hPropSheetDlg, hwndPage: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_GetCurrentPageHwnd", 
    "type": "skProc", 
    "code": "proc PropSheet_GetCurrentPageHwnd*(hDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_GetTabControl", 
    "type": "skProc", 
    "code": "proc PropSheet_GetTabControl*(hPropSheetDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_IsDialogMessage", 
    "type": "skProc", 
    "code": "proc PropSheet_IsDialogMessage*(hDlg: HWND; pMsg: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_PressButton", 
    "type": "skProc", 
    "code": "proc PropSheet_PressButton*(hPropSheetDlg: HWND; iButton: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_QuerySiblings", 
    "type": "skProc", 
    "code": "proc PropSheet_QuerySiblings*(hPropSheetDlg: HWND; param1, param2: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_RebootSystem", 
    "type": "skProc", 
    "code": "proc PropSheet_RebootSystem*(hPropSheetDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_RemovePage", 
    "type": "skProc", 
    "code": "proc PropSheet_RemovePage*(hPropSheetDlg: HWND; hpage: HPROPSHEETPAGE; \u000A                           index: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_RestartWindows", 
    "type": "skProc", 
    "code": "proc PropSheet_RestartWindows*(hPropSheetDlg: HWND): LRESULT"
  }, 
  {
    "name": "PropSheet_SetCurSel", 
    "type": "skProc", 
    "code": "proc PropSheet_SetCurSel*(hPropSheetDlg: HWND; hpage: HPROPSHEETPAGE; \u000A                          index: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_SetCurSelByID", 
    "type": "skProc", 
    "code": "proc PropSheet_SetCurSelByID*(hPropSheetDlg: HWND; id: int32): LRESULT"
  }, 
  {
    "name": "PropSheet_SetFinishText", 
    "type": "skProc", 
    "code": "proc PropSheet_SetFinishText*(hPropSheetDlg: HWND; lpszText: LPTSTR): LRESULT"
  }, 
  {
    "name": "PropSheet_SetTitle", 
    "type": "skProc", 
    "code": "proc PropSheet_SetTitle*(hPropSheetDlg: HWND; dwStyle: DWORD; lpszText: LPCTSTR): LRESULT"
  }, 
  {
    "name": "PropSheet_SetWizButtons", 
    "type": "skProc", 
    "code": "proc PropSheet_SetWizButtons*(hPropSheetDlg: HWND; dwFlags: DWORD): LRESULT"
  }, 
  {
    "name": "PropSheet_UnChanged", 
    "type": "skProc", 
    "code": "proc PropSheet_UnChanged*(hPropSheetDlg: HWND; hwndPage: HWND): LRESULT"
  }, 
  {
    "name": "Header_DeleteItem", 
    "type": "skProc", 
    "code": "proc Header_DeleteItem*(hwndHD: HWND; index: int32): WINBOOL"
  }, 
  {
    "name": "Header_GetItem", 
    "type": "skProc", 
    "code": "proc Header_GetItem*(hwndHD: HWND; index: int32; hdi: var HD_ITEM): WINBOOL"
  }, 
  {
    "name": "Header_GetItemCount", 
    "type": "skProc", 
    "code": "proc Header_GetItemCount*(hwndHD: HWND): int32"
  }, 
  {
    "name": "Header_InsertItem", 
    "type": "skProc", 
    "code": "proc Header_InsertItem*(hwndHD: HWND; index: int32; hdi: var HD_ITEM): int32"
  }, 
  {
    "name": "Header_Layout", 
    "type": "skProc", 
    "code": "proc Header_Layout*(hwndHD: HWND; layout: var HD_LAYOUT): WINBOOL"
  }, 
  {
    "name": "Header_SetItem", 
    "type": "skProc", 
    "code": "proc Header_SetItem*(hwndHD: HWND; index: int32; hdi: var HD_ITEM): WINBOOL"
  }, 
  {
    "name": "ListView_Arrange", 
    "type": "skProc", 
    "code": "proc ListView_Arrange*(hwndLV: HWND; code: WINUINT): LRESULT"
  }, 
  {
    "name": "ListView_CreateDragImage", 
    "type": "skProc", 
    "code": "proc ListView_CreateDragImage*(wnd: HWND; i: int32; lpptUpLeft: LPPOINT): LRESULT"
  }, 
  {
    "name": "ListView_DeleteAllItems", 
    "type": "skProc", 
    "code": "proc ListView_DeleteAllItems*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_DeleteColumn", 
    "type": "skProc", 
    "code": "proc ListView_DeleteColumn*(wnd: HWND; iCol: int32): LRESULT"
  }, 
  {
    "name": "ListView_DeleteItem", 
    "type": "skProc", 
    "code": "proc ListView_DeleteItem*(wnd: HWND; iItem: int32): LRESULT"
  }, 
  {
    "name": "ListView_EditLabel", 
    "type": "skProc", 
    "code": "proc ListView_EditLabel*(hwndLV: HWND; i: int32): LRESULT"
  }, 
  {
    "name": "ListView_EnsureVisible", 
    "type": "skProc", 
    "code": "proc ListView_EnsureVisible*(hwndLV: HWND; i, fPartialOK: int32): LRESULT"
  }, 
  {
    "name": "ListView_FindItem", 
    "type": "skProc", 
    "code": "proc ListView_FindItem*(wnd: HWND; iStart: int32; lvfi: var LV_FINDINFO): int32"
  }, 
  {
    "name": "ListView_GetBkColor", 
    "type": "skProc", 
    "code": "proc ListView_GetBkColor*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetCallbackMask", 
    "type": "skProc", 
    "code": "proc ListView_GetCallbackMask*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetColumn", 
    "type": "skProc", 
    "code": "proc ListView_GetColumn*(wnd: HWND; iCol: int32; col: var LV_COLUMN): LRESULT"
  }, 
  {
    "name": "ListView_GetColumnWidth", 
    "type": "skProc", 
    "code": "proc ListView_GetColumnWidth*(wnd: HWND; iCol: int32): LRESULT"
  }, 
  {
    "name": "ListView_GetCountPerPage", 
    "type": "skProc", 
    "code": "proc ListView_GetCountPerPage*(hwndLV: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetEditControl", 
    "type": "skProc", 
    "code": "proc ListView_GetEditControl*(hwndLV: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetImageList", 
    "type": "skProc", 
    "code": "proc ListView_GetImageList*(wnd: HWND; iImageList: WINT): LRESULT"
  }, 
  {
    "name": "ListView_GetISearchString", 
    "type": "skProc", 
    "code": "proc ListView_GetISearchString*(hwndLV: HWND; lpsz: LPTSTR): LRESULT"
  }, 
  {
    "name": "ListView_GetItem", 
    "type": "skProc", 
    "code": "proc ListView_GetItem*(wnd: HWND; item: var LV_ITEM): LRESULT"
  }, 
  {
    "name": "ListView_GetItemCount", 
    "type": "skProc", 
    "code": "proc ListView_GetItemCount*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetItemPosition", 
    "type": "skProc", 
    "code": "proc ListView_GetItemPosition*(hwndLV: HWND; i: int32; pt: var POINT): int32"
  }, 
  {
    "name": "ListView_GetItemSpacing", 
    "type": "skProc", 
    "code": "proc ListView_GetItemSpacing*(hwndLV: HWND; fSmall: int32): LRESULT"
  }, 
  {
    "name": "ListView_GetItemState", 
    "type": "skProc", 
    "code": "proc ListView_GetItemState*(hwndLV: HWND; i, mask: int32): LRESULT"
  }, 
  {
    "name": "ListView_GetNextItem", 
    "type": "skProc", 
    "code": "proc ListView_GetNextItem*(wnd: HWND; iStart, flags: int32): LRESULT"
  }, 
  {
    "name": "ListView_GetOrigin", 
    "type": "skProc", 
    "code": "proc ListView_GetOrigin*(hwndLV: HWND; pt: var POINT): LRESULT"
  }, 
  {
    "name": "ListView_GetSelectedCount", 
    "type": "skProc", 
    "code": "proc ListView_GetSelectedCount*(hwndLV: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetStringWidth", 
    "type": "skProc", 
    "code": "proc ListView_GetStringWidth*(hwndLV: HWND; psz: LPCTSTR): LRESULT"
  }, 
  {
    "name": "ListView_GetTextBkColor", 
    "type": "skProc", 
    "code": "proc ListView_GetTextBkColor*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetTextColor", 
    "type": "skProc", 
    "code": "proc ListView_GetTextColor*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetTopIndex", 
    "type": "skProc", 
    "code": "proc ListView_GetTopIndex*(hwndLV: HWND): LRESULT"
  }, 
  {
    "name": "ListView_GetViewRect", 
    "type": "skProc", 
    "code": "proc ListView_GetViewRect*(wnd: HWND; rc: var RECT): LRESULT"
  }, 
  {
    "name": "ListView_HitTest", 
    "type": "skProc", 
    "code": "proc ListView_HitTest*(hwndLV: HWND; info: var LV_HITTESTINFO): LRESULT"
  }, 
  {
    "name": "ListView_InsertColumn", 
    "type": "skProc", 
    "code": "proc ListView_InsertColumn*(wnd: HWND; iCol: int32; col: var LV_COLUMN): LRESULT"
  }, 
  {
    "name": "ListView_InsertItem", 
    "type": "skProc", 
    "code": "proc ListView_InsertItem*(wnd: HWND; item: var LV_ITEM): LRESULT"
  }, 
  {
    "name": "ListView_RedrawItems", 
    "type": "skProc", 
    "code": "proc ListView_RedrawItems*(hwndLV: HWND; iFirst, iLast: int32): LRESULT"
  }, 
  {
    "name": "ListView_Scroll", 
    "type": "skProc", 
    "code": "proc ListView_Scroll*(hwndLV: HWND; dx, dy: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetBkColor", 
    "type": "skProc", 
    "code": "proc ListView_SetBkColor*(wnd: HWND; clrBk: COLORREF): LRESULT"
  }, 
  {
    "name": "ListView_SetCallbackMask", 
    "type": "skProc", 
    "code": "proc ListView_SetCallbackMask*(wnd: HWND; mask: WINUINT): LRESULT"
  }, 
  {
    "name": "ListView_SetColumn", 
    "type": "skProc", 
    "code": "proc ListView_SetColumn*(wnd: HWND; iCol: int32; col: var LV_COLUMN): LRESULT"
  }, 
  {
    "name": "ListView_SetColumnWidth", 
    "type": "skProc", 
    "code": "proc ListView_SetColumnWidth*(wnd: HWND; iCol, cx: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetImageList", 
    "type": "skProc", 
    "code": "proc ListView_SetImageList*(wnd: HWND; himl: int32; iImageList: HIMAGELIST): LRESULT"
  }, 
  {
    "name": "ListView_SetItem", 
    "type": "skProc", 
    "code": "proc ListView_SetItem*(wnd: HWND; item: var LV_ITEM): LRESULT"
  }, 
  {
    "name": "ListView_SetItemCount", 
    "type": "skProc", 
    "code": "proc ListView_SetItemCount*(hwndLV: HWND; cItems: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetItemPosition", 
    "type": "skProc", 
    "code": "proc ListView_SetItemPosition*(hwndLV: HWND; i, x, y: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetItemPosition32", 
    "type": "skProc", 
    "code": "proc ListView_SetItemPosition32*(hwndLV: HWND; i, x, y: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetItemState", 
    "type": "skProc", 
    "code": "proc ListView_SetItemState*(hwndLV: HWND; i, data, mask: int32): LRESULT"
  }, 
  {
    "name": "ListView_SetItemText", 
    "type": "skProc", 
    "code": "proc ListView_SetItemText*(hwndLV: HWND; i, iSubItem: int32; pszText: LPTSTR): LRESULT"
  }, 
  {
    "name": "ListView_SetTextBkColor", 
    "type": "skProc", 
    "code": "proc ListView_SetTextBkColor*(wnd: HWND; clrTextBk: COLORREF): LRESULT"
  }, 
  {
    "name": "ListView_SetTextColor", 
    "type": "skProc", 
    "code": "proc ListView_SetTextColor*(wnd: HWND; clrText: COLORREF): LRESULT"
  }, 
  {
    "name": "ListView_SortItems", 
    "type": "skProc", 
    "code": "proc ListView_SortItems*(hwndLV: HWND; pfnCompare: PFNLVCOMPARE; lPrm: LPARAM): LRESULT"
  }, 
  {
    "name": "ListView_Update", 
    "type": "skProc", 
    "code": "proc ListView_Update*(hwndLV: HWND; i: int32): LRESULT"
  }, 
  {
    "name": "TreeView_InsertItem", 
    "type": "skProc", 
    "code": "proc TreeView_InsertItem*(wnd: HWND; lpis: LPTV_INSERTSTRUCT): LRESULT"
  }, 
  {
    "name": "TreeView_DeleteItem", 
    "type": "skProc", 
    "code": "proc TreeView_DeleteItem*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_DeleteAllItems", 
    "type": "skProc", 
    "code": "proc TreeView_DeleteAllItems*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_Expand", 
    "type": "skProc", 
    "code": "proc TreeView_Expand*(wnd: HWND; hitem: HTREEITEM; code: int32): LRESULT"
  }, 
  {
    "name": "TreeView_GetCount", 
    "type": "skProc", 
    "code": "proc TreeView_GetCount*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_GetIndent", 
    "type": "skProc", 
    "code": "proc TreeView_GetIndent*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_SetIndent", 
    "type": "skProc", 
    "code": "proc TreeView_SetIndent*(wnd: HWND; indent: int32): LRESULT"
  }, 
  {
    "name": "TreeView_GetImageList", 
    "type": "skProc", 
    "code": "proc TreeView_GetImageList*(wnd: HWND; iImage: WPARAM): LRESULT"
  }, 
  {
    "name": "TreeView_SetImageList", 
    "type": "skProc", 
    "code": "proc TreeView_SetImageList*(wnd: HWND; himl: HIMAGELIST; iImage: WPARAM): LRESULT"
  }, 
  {
    "name": "TreeView_GetNextItem", 
    "type": "skProc", 
    "code": "proc TreeView_GetNextItem*(wnd: HWND; hitem: HTREEITEM; code: int32): LRESULT"
  }, 
  {
    "name": "TreeView_GetChild", 
    "type": "skProc", 
    "code": "proc TreeView_GetChild*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetNextSibling", 
    "type": "skProc", 
    "code": "proc TreeView_GetNextSibling*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetPrevSibling", 
    "type": "skProc", 
    "code": "proc TreeView_GetPrevSibling*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetParent", 
    "type": "skProc", 
    "code": "proc TreeView_GetParent*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetFirstVisible", 
    "type": "skProc", 
    "code": "proc TreeView_GetFirstVisible*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_GetNextVisible", 
    "type": "skProc", 
    "code": "proc TreeView_GetNextVisible*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetPrevVisible", 
    "type": "skProc", 
    "code": "proc TreeView_GetPrevVisible*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetSelection", 
    "type": "skProc", 
    "code": "proc TreeView_GetSelection*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_GetDropHilight", 
    "type": "skProc", 
    "code": "proc TreeView_GetDropHilight*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_GetRoot", 
    "type": "skProc", 
    "code": "proc TreeView_GetRoot*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_Select", 
    "type": "skProc", 
    "code": "proc TreeView_Select*(wnd: HWND; hitem: HTREEITEM; code: int32): LRESULT"
  }, 
  {
    "name": "TreeView_SelectItem", 
    "type": "skProc", 
    "code": "proc TreeView_SelectItem*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_SelectDropTarget", 
    "type": "skProc", 
    "code": "proc TreeView_SelectDropTarget*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_SelectSetFirstVisible", 
    "type": "skProc", 
    "code": "proc TreeView_SelectSetFirstVisible*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetItem", 
    "type": "skProc", 
    "code": "proc TreeView_GetItem*(wnd: HWND; item: var TV_ITEM): LRESULT"
  }, 
  {
    "name": "TreeView_SetItem", 
    "type": "skProc", 
    "code": "proc TreeView_SetItem*(wnd: HWND; item: var TV_ITEM): LRESULT"
  }, 
  {
    "name": "TreeView_EditLabel", 
    "type": "skProc", 
    "code": "proc TreeView_EditLabel*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_GetEditControl", 
    "type": "skProc", 
    "code": "proc TreeView_GetEditControl*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_GetVisibleCount", 
    "type": "skProc", 
    "code": "proc TreeView_GetVisibleCount*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TreeView_HitTest", 
    "type": "skProc", 
    "code": "proc TreeView_HitTest*(wnd: HWND; lpht: LPTV_HITTESTINFO): LRESULT"
  }, 
  {
    "name": "TreeView_CreateDragImage", 
    "type": "skProc", 
    "code": "proc TreeView_CreateDragImage*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_SortChildren", 
    "type": "skProc", 
    "code": "proc TreeView_SortChildren*(wnd: HWND; hitem: HTREEITEM; recurse: int32): LRESULT"
  }, 
  {
    "name": "TreeView_EnsureVisible", 
    "type": "skProc", 
    "code": "proc TreeView_EnsureVisible*(wnd: HWND; hitem: HTREEITEM): LRESULT"
  }, 
  {
    "name": "TreeView_SortChildrenCB", 
    "type": "skProc", 
    "code": "proc TreeView_SortChildrenCB*(wnd: HWND; psort: LPTV_SORTCB; recurse: int32): LRESULT"
  }, 
  {
    "name": "TreeView_EndEditLabelNow", 
    "type": "skProc", 
    "code": "proc TreeView_EndEditLabelNow*(wnd: HWND; fCancel: int32): LRESULT"
  }, 
  {
    "name": "TreeView_GetISearchString", 
    "type": "skProc", 
    "code": "proc TreeView_GetISearchString*(hwndTV: HWND; lpsz: LPTSTR): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetImageList", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetImageList*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetImageList", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetImageList*(wnd: HWND; himl: HIMAGELIST): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetItemCount", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetItemCount*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetItem", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetItem*(wnd: HWND; iItem: int32; item: var TC_ITEM): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetItem", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetItem*(wnd: HWND; iItem: int32; item: var TC_ITEM): LRESULT"
  }, 
  {
    "name": "TabCtrl_InsertItem", 
    "type": "skProc", 
    "code": "proc TabCtrl_InsertItem*(wnd: HWND; iItem: int32; item: var TC_ITEM): LRESULT"
  }, 
  {
    "name": "TabCtrl_DeleteItem", 
    "type": "skProc", 
    "code": "proc TabCtrl_DeleteItem*(wnd: HWND; i: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_DeleteAllItems", 
    "type": "skProc", 
    "code": "proc TabCtrl_DeleteAllItems*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetItemRect", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetItemRect*(wnd: HWND; i: int32; rc: var RECT): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetCurSel", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetCurSel*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetCurSel", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetCurSel*(wnd: HWND; i: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_HitTest", 
    "type": "skProc", 
    "code": "proc TabCtrl_HitTest*(hwndTC: HWND; info: var TC_HITTESTINFO): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetItemExtra", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetItemExtra*(hwndTC: HWND; cb: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_AdjustRect", 
    "type": "skProc", 
    "code": "proc TabCtrl_AdjustRect*(wnd: HWND; bLarger: WINBOOL; rc: var RECT): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetItemSize", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetItemSize*(wnd: HWND; x, y: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_RemoveImage", 
    "type": "skProc", 
    "code": "proc TabCtrl_RemoveImage*(wnd: HWND; i: WPARAM): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetPadding", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetPadding*(wnd: HWND; cx, cy: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetRowCount", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetRowCount*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetToolTips", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetToolTips*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetToolTips", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetToolTips*(wnd: HWND; hwndTT: int32): LRESULT"
  }, 
  {
    "name": "TabCtrl_GetCurFocus", 
    "type": "skProc", 
    "code": "proc TabCtrl_GetCurFocus*(wnd: HWND): LRESULT"
  }, 
  {
    "name": "TabCtrl_SetCurFocus", 
    "type": "skProc", 
    "code": "proc TabCtrl_SetCurFocus*(wnd: HWND; i: int32): LRESULT"
  }, 
  {
    "name": "SNDMSG", 
    "type": "skProc", 
    "code": "proc SNDMSG*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetSpecA", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetSpecA*(hdlg: HWND; psz: LPSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetSpecW", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetSpecW*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetSpec", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetSpec*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFilePathA", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFilePathA*(hdlg: HWND; psz: LPSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFilePathW", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFilePathW*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFilePath", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFilePath*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFolderPathA", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFolderPathA*(hdlg: HWND; psz: LPSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFolderPathW", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFolderPathW*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFolderPath", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFolderPath*(hdlg: HWND; psz: LPWSTR; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_GetFolderIDList", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_GetFolderIDList*(hdlg: HWND; pidl: LPVOID; cbmax: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_SetControlText", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_SetControlText*(hdlg: HWND; id: int32; text: LPSTR): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_HideControl", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_HideControl*(hdlg: HWND; id: int32): LRESULT"
  }, 
  {
    "name": "CommDlg_OpenSave_SetDefExt", 
    "type": "skProc", 
    "code": "proc CommDlg_OpenSave_SetDefExt*(hdlg: HWND; pszext: LPSTR): LRESULT"
  }, 
  {
    "name": "GetNextWindow", 
    "type": "skProc", 
    "code": "proc GetNextWindow*(wnd: HWND; uCmd: WINUINT): HWND {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetWindow\".}"
  }, 
  {
    "name": "GlobalAllocPtr", 
    "type": "skProc", 
    "code": "proc GlobalAllocPtr*(flags, cb: DWord): pointer"
  }, 
  {
    "name": "GlobalFreePtr", 
    "type": "skProc", 
    "code": "proc GlobalFreePtr*(lp: pointer): pointer"
  }, 
  {
    "name": "GlobalUnlockPtr", 
    "type": "skProc", 
    "code": "proc GlobalUnlockPtr*(lp: pointer): pointer"
  }, 
  {
    "name": "GlobalLockPtr", 
    "type": "skProc", 
    "code": "proc GlobalLockPtr*(lp: pointer): pointer"
  }, 
  {
    "name": "GlobalReAllocPtr", 
    "type": "skProc", 
    "code": "proc GlobalReAllocPtr*(lp: pointer; cbNew, flags: DWord): pointer"
  }, 
  {
    "name": "GlobalPtrHandle", 
    "type": "skProc", 
    "code": "proc GlobalPtrHandle*(lp: pointer): pointer"
  }, 
  {
    "name": "SetLayeredWindowAttributes", 
    "type": "skProc", 
    "code": "proc SetLayeredWindowAttributes*(hwnd: HWND; crKey: COLORREF; bAlpha: int8; \u000A                                 dwFlags: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetLayeredWindowAttributes\".}"
  }, 
  {
    "name": "PBitmapFileHeader", 
    "type": "skType", 
    "code": "PBitmapFileHeader* = ptr TBitmapFileHeader"
  }, 
  {
    "name": "VK_OEM_CLEAR", 
    "type": "skConst", 
    "code": "VK_OEM_CLEAR* = 254"
  }, 
  {
    "name": "FACILITY_NT_BIT", 
    "type": "skConst", 
    "code": "FACILITY_NT_BIT* = 0x10000000"
  }, 
  {
    "name": "MAKELANGID", 
    "type": "skProc", 
    "code": "proc MAKELANGID*(PrimaryLang, SubLang: USHORT): int16"
  }, 
  {
    "name": "PRIMARYLANGID", 
    "type": "skProc", 
    "code": "proc PRIMARYLANGID*(LangId: int16): int16"
  }, 
  {
    "name": "SUBLANGID", 
    "type": "skProc", 
    "code": "proc SUBLANGID*(LangId: int16): int16"
  }, 
  {
    "name": "NLS_VALID_LOCALE_MASK", 
    "type": "skConst", 
    "code": "NLS_VALID_LOCALE_MASK* = 0x000FFFFF"
  }, 
  {
    "name": "MAKELCID", 
    "type": "skProc", 
    "code": "proc MAKELCID*(LangId, SortId: int16): DWORD"
  }, 
  {
    "name": "MAKESORTLCID", 
    "type": "skProc", 
    "code": "proc MAKESORTLCID*(LangId, SortId, SortVersion: int16): DWORD"
  }, 
  {
    "name": "LANGIDFROMLCID", 
    "type": "skProc", 
    "code": "proc LANGIDFROMLCID*(LocaleId: LCID): int16"
  }, 
  {
    "name": "SORTIDFROMLCID", 
    "type": "skProc", 
    "code": "proc SORTIDFROMLCID*(LocaleId: LCID): int16"
  }, 
  {
    "name": "SORTVERSIONFROMLCID", 
    "type": "skProc", 
    "code": "proc SORTVERSIONFROMLCID*(LocaleId: LCID): int16"
  }, 
  {
    "name": "LANG_SYSTEM_DEFAULT", 
    "type": "skProc", 
    "code": "proc LANG_SYSTEM_DEFAULT*(): int16"
  }, 
  {
    "name": "LANG_USER_DEFAULT", 
    "type": "skProc", 
    "code": "proc LANG_USER_DEFAULT*(): int16"
  }, 
  {
    "name": "LOCALE_NEUTRAL", 
    "type": "skProc", 
    "code": "proc LOCALE_NEUTRAL*(): DWORD"
  }, 
  {
    "name": "LOCALE_INVARIANT", 
    "type": "skProc", 
    "code": "proc LOCALE_INVARIANT*(): DWORD"
  }, 
  {
    "name": "Succeeded", 
    "type": "skProc", 
    "code": "proc Succeeded*(Status: HRESULT): WINBOOL"
  }, 
  {
    "name": "Failed", 
    "type": "skProc", 
    "code": "proc Failed*(Status: HRESULT): WINBOOL"
  }, 
  {
    "name": "IsError", 
    "type": "skProc", 
    "code": "proc IsError*(Status: HRESULT): WINBOOL"
  }, 
  {
    "name": "HResultCode", 
    "type": "skProc", 
    "code": "proc HResultCode*(hr: HRESULT): int32"
  }, 
  {
    "name": "HResultFacility", 
    "type": "skProc", 
    "code": "proc HResultFacility*(hr: HRESULT): int32"
  }, 
  {
    "name": "HResultSeverity", 
    "type": "skProc", 
    "code": "proc HResultSeverity*(hr: HRESULT): int32"
  }, 
  {
    "name": "MakeResult", 
    "type": "skProc", 
    "code": "proc MakeResult*(p1, p2, mask: int32): HRESULT"
  }, 
  {
    "name": "HResultFromWin32", 
    "type": "skProc", 
    "code": "proc HResultFromWin32*(x: int32): HRESULT"
  }, 
  {
    "name": "HResultFromNT", 
    "type": "skProc", 
    "code": "proc HResultFromNT*(x: int32): HRESULT"
  }, 
  {
    "name": "InitializeCriticalSection", 
    "type": "skProc", 
    "code": "proc InitializeCriticalSection*(CriticalSection: var TRTLCriticalSection) {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"InitializeCriticalSection\".}"
  }, 
  {
    "name": "EnterCriticalSection", 
    "type": "skProc", 
    "code": "proc EnterCriticalSection*(CriticalSection: var TRTLCriticalSection) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"EnterCriticalSection\".}"
  }, 
  {
    "name": "LeaveCriticalSection", 
    "type": "skProc", 
    "code": "proc LeaveCriticalSection*(CriticalSection: var TRTLCriticalSection) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LeaveCriticalSection\".}"
  }, 
  {
    "name": "DeleteCriticalSection", 
    "type": "skProc", 
    "code": "proc DeleteCriticalSection*(CriticalSection: var TRTLCriticalSection) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"DeleteCriticalSection\".}"
  }, 
  {
    "name": "InitializeCriticalSectionAndSpinCount", 
    "type": "skProc", 
    "code": "proc InitializeCriticalSectionAndSpinCount*(\u000A    CriticalSection: var TRTLCriticalSection; dwSpinCount: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", \u000A    importc: \"InitializeCriticalSectionAndSpinCount\".}"
  }, 
  {
    "name": "SetCriticalSectionSpinCount", 
    "type": "skProc", 
    "code": "proc SetCriticalSectionSpinCount*(CriticalSection: var TRTLCriticalSection; \u000A                                  dwSpinCount: DWORD): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCriticalSectionSpinCount\".}"
  }, 
  {
    "name": "TryEnterCriticalSection", 
    "type": "skProc", 
    "code": "proc TryEnterCriticalSection*(CriticalSection: var TRTLCriticalSection): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"TryEnterCriticalSection\".}"
  }, 
  {
    "name": "ControlService", 
    "type": "skProc", 
    "code": "proc ControlService*(hService: SC_HANDLE; dwControl: DWORD; \u000A                     ServiceStatus: var TSERVICESTATUS): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ControlService\".}"
  }, 
  {
    "name": "QueryServiceStatus", 
    "type": "skProc", 
    "code": "proc QueryServiceStatus*(hService: SC_HANDLE; \u000A                         lpServiceStatus: var TSERVICESTATUS): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"QueryServiceStatus\".}"
  }, 
  {
    "name": "SetServiceStatus", 
    "type": "skProc", 
    "code": "proc SetServiceStatus*(hServiceStatus: SERVICE_STATUS_HANDLE; \u000A                       ServiceStatus: TSERVICESTATUS): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"SetServiceStatus\".}"
  }, 
  {
    "name": "AdjustTokenPrivileges", 
    "type": "skProc", 
    "code": "proc AdjustTokenPrivileges*(TokenHandle: THandle; DisableAllPrivileges: WINBOOL; \u000A                            NewState: TTokenPrivileges; BufferLength: DWORD; \u000A                            PreviousState: var TTokenPrivileges; \u000A                            ReturnLength: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AdjustTokenPrivileges\".}"
  }, 
  {
    "name": "AdjustWindowRect", 
    "type": "skProc", 
    "code": "proc AdjustWindowRect*(lpRect: var TRect; dwStyle: DWORD; bMenu: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"AdjustWindowRect\".}"
  }, 
  {
    "name": "AdjustWindowRectEx", 
    "type": "skProc", 
    "code": "proc AdjustWindowRectEx*(lpRect: var TRect; dwStyle: DWORD; bMenu: WINBOOL; \u000A                         dwExStyle: DWORD): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"AdjustWindowRectEx\".}"
  }, 
  {
    "name": "AllocateAndInitializeSid", 
    "type": "skProc", 
    "code": "proc AllocateAndInitializeSid*(pIdentifierAuthority: TSIDIdentifierAuthority; \u000A                               nSubAuthorityCount: int8; \u000A                               nSubAuthority0, nSubAuthority1: DWORD; \u000A    nSubAuthority2, nSubAuthority3, nSubAuthority4: DWORD; nSubAuthority5, \u000A    nSubAuthority6, nSubAuthority7: DWORD; pSid: var pointer): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"AllocateAndInitializeSid\".}"
  }, 
  {
    "name": "AllocateLocallyUniqueId", 
    "type": "skProc", 
    "code": "proc AllocateLocallyUniqueId*(Luid: var TLargeInteger): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"AllocateLocallyUniqueId\".}"
  }, 
  {
    "name": "BackupRead", 
    "type": "skProc", 
    "code": "proc BackupRead*(hFile: THandle; lpBuffer: PByte; nNumberOfBytesToRead: DWORD; \u000A                 lpNumberOfBytesRead: var DWORD; bAbort: WINBOOL; \u000A                 bProcessSecurity: WINBOOL; lpContext: var pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BackupRead\".}"
  }, 
  {
    "name": "BackupSeek", 
    "type": "skProc", 
    "code": "proc BackupSeek*(hFile: THandle; dwLowBytesToSeek, dwHighBytesToSeek: DWORD; \u000A                 lpdwLowByteSeeked, lpdwHighByteSeeked: var DWORD; \u000A                 lpContext: pointer): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"BackupSeek\".}"
  }, 
  {
    "name": "BackupWrite", 
    "type": "skProc", 
    "code": "proc BackupWrite*(hFile: THandle; lpBuffer: PByte; nNumberOfBytesToWrite: DWORD; \u000A                  lpNumberOfBytesWritten: var DWORD; \u000A                  bAbort, bProcessSecurity: WINBOOL; lpContext: var pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BackupWrite\".}"
  }, 
  {
    "name": "BeginPaint", 
    "type": "skProc", 
    "code": "proc BeginPaint*(wnd: HWND; lpPaint: var TPaintStruct): HDC {.stdcall, \u000A    dynlib: \"user32\", importc: \"BeginPaint\".}"
  }, 
  {
    "name": "BuildCommDCB", 
    "type": "skProc", 
    "code": "proc BuildCommDCB*(lpDef: cstring; lpDCB: var TDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBA\".}"
  }, 
  {
    "name": "BuildCommDCBA", 
    "type": "skProc", 
    "code": "proc BuildCommDCBA*(lpDef: LPCSTR; lpDCB: var TDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBA\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeouts", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeouts*(lpDef: cstring; lpDCB: var TDCB; \u000A                              lpCommTimeouts: var TCommTimeouts): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsA\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeoutsA", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeoutsA*(lpDef: LPCSTR; lpDCB: var TDCB; \u000A                               lpCommTimeouts: var TCommTimeouts): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsA\".}"
  }, 
  {
    "name": "BuildCommDCBAndTimeoutsW", 
    "type": "skProc", 
    "code": "proc BuildCommDCBAndTimeoutsW*(lpDef: LPWSTR; lpDCB: var TDCB; \u000A                               lpCommTimeouts: var TCommTimeouts): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"BuildCommDCBAndTimeoutsW\".}"
  }, 
  {
    "name": "BuildCommDCBW", 
    "type": "skProc", 
    "code": "proc BuildCommDCBW*(lpDef: LPWSTR; lpDCB: var TDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"BuildCommDCBW\".}"
  }, 
  {
    "name": "CallMsgFilter", 
    "type": "skProc", 
    "code": "proc CallMsgFilter*(lpMsg: var TMsg; nCode: int): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterA\".}"
  }, 
  {
    "name": "CallMsgFilterA", 
    "type": "skProc", 
    "code": "proc CallMsgFilterA*(lpMsg: var TMsg; nCode: int): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterA\".}"
  }, 
  {
    "name": "CallMsgFilterW", 
    "type": "skProc", 
    "code": "proc CallMsgFilterW*(lpMsg: var TMsg; nCode: int): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CallMsgFilterW\".}"
  }, 
  {
    "name": "CallNamedPipe", 
    "type": "skProc", 
    "code": "proc CallNamedPipe*(lpNamedPipeName: cstring; lpInBuffer: pointer; \u000A                    nInBufferSize: DWORD; lpOutBuffer: pointer; \u000A                    nOutBufferSize: DWORD; lpBytesRead: var DWORD; \u000A                    nTimeOut: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CallNamedPipeA\".}"
  }, 
  {
    "name": "CallNamedPipeA", 
    "type": "skProc", 
    "code": "proc CallNamedPipeA*(lpNamedPipeName: LPCSTR; lpInBuffer: pointer; \u000A                     nInBufferSize: DWORD; lpOutBuffer: pointer; \u000A                     nOutBufferSize: DWORD; lpBytesRead: var DWORD; \u000A                     nTimeOut: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CallNamedPipeA\".}"
  }, 
  {
    "name": "CallNamedPipeW", 
    "type": "skProc", 
    "code": "proc CallNamedPipeW*(lpNamedPipeName: LPWSTR; lpInBuffer: pointer; \u000A                     nInBufferSize: DWORD; lpOutBuffer: pointer; \u000A                     nOutBufferSize: DWORD; lpBytesRead: var DWORD; \u000A                     nTimeOut: DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"CallNamedPipeW\".}"
  }, 
  {
    "name": "CoRegisterClassObject", 
    "type": "skProc", 
    "code": "proc CoRegisterClassObject*(para1: TCLSID; para2: pointer; para3: DWORD; \u000A                            para4: DWORD; out_para5: DWORD): HRESULT {.stdcall, \u000A    dynlib: \"ole32.dll\", importc: \"CoRegisterClassObject\".}"
  }, 
  {
    "name": "ChangeDisplaySettings", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettings*(lpDevMode: var TDeviceMode; dwFlags: DWORD): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsA\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsA", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsA*(lpDevMode: var TDeviceModeA; dwFlags: DWORD): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsA\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsEx", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsEx*(lpszDeviceName: cstring; \u000A                              lpDevMode: var TDeviceMode; wnd: HWND; \u000A                              dwFlags: DWORD; lParam: pointer): int32 {.stdcall, \u000A    dynlib: \"user32\", importc: \"ChangeDisplaySettingsExA\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsExA", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsExA*(lpszDeviceName: LPCSTR; \u000A                               lpDevMode: var TDeviceModeA; wnd: HWND; \u000A                               dwFlags: DWORD; lParam: pointer): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsExA\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsExW", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsExW*(lpszDeviceName: LPWSTR; \u000A                               lpDevMode: var TDeviceModeW; wnd: HWND; \u000A                               dwFlags: DWORD; lParam: pointer): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsExW\".}"
  }, 
  {
    "name": "ChangeDisplaySettingsW", 
    "type": "skProc", 
    "code": "proc ChangeDisplaySettingsW*(lpDevMode: var TDeviceModeW; dwFlags: DWORD): int32 {.\u000A    stdcall, dynlib: \"user32\", importc: \"ChangeDisplaySettingsW\".}"
  }, 
  {
    "name": "ChoosePixelFormat", 
    "type": "skProc", 
    "code": "proc ChoosePixelFormat*(para1: HDC; para2: var PIXELFORMATDESCRIPTOR): int32 {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"ChoosePixelFormat\".}"
  }, 
  {
    "name": "ClearCommError", 
    "type": "skProc", 
    "code": "proc ClearCommError*(hFile: THandle; lpErrors: var DWORD; lpStat: PComStat): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ClearCommError\".}"
  }, 
  {
    "name": "ClientToScreen", 
    "type": "skProc", 
    "code": "proc ClientToScreen*(wnd: HWND; lpPoint: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ClientToScreen\".}"
  }, 
  {
    "name": "ClipCursor", 
    "type": "skProc", 
    "code": "proc ClipCursor*(lpRect: var RECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ClipCursor\".}"
  }, 
  {
    "name": "CommConfigDialog", 
    "type": "skProc", 
    "code": "proc CommConfigDialog*(lpszName: cstring; wnd: HWND; lpCC: var TCommConfig): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogA\".}"
  }, 
  {
    "name": "CommConfigDialogA", 
    "type": "skProc", 
    "code": "proc CommConfigDialogA*(lpszName: LPCSTR; wnd: HWND; lpCC: var TCommConfig): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogA\".}"
  }, 
  {
    "name": "CommConfigDialogW", 
    "type": "skProc", 
    "code": "proc CommConfigDialogW*(lpszName: LPWSTR; wnd: HWND; lpCC: var TCommConfig): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CommConfigDialogW\".}"
  }, 
  {
    "name": "CopyAcceleratorTable", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTable*(hAccelSrc: HACCEL; lpAccelDst: pointer; \u000A                           cAccelEntries: int): int {.stdcall, dynlib: \"user32\", \u000A    importc: \"CopyAcceleratorTableA\".}"
  }, 
  {
    "name": "CopyAcceleratorTableA", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTableA*(hAccelSrc: HACCEL; lpAccelDst: pointer; \u000A                            cAccelEntries: int): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyAcceleratorTableA\".}"
  }, 
  {
    "name": "CopyAcceleratorTableW", 
    "type": "skProc", 
    "code": "proc CopyAcceleratorTableW*(hAccelSrc: HACCEL; lpAccelDst: pointer; \u000A                            cAccelEntries: int): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyAcceleratorTableW\".}"
  }, 
  {
    "name": "CopyRect", 
    "type": "skProc", 
    "code": "proc CopyRect*(lprcDst: var TRect; lprcSrc: TRect): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CopyRect\".}"
  }, 
  {
    "name": "CreateAcceleratorTable", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTable*(Accel: pointer; Count: int): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableA\".}"
  }, 
  {
    "name": "CreateAcceleratorTableA", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTableA*(Accel: pointer; Count: int): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableA\".}"
  }, 
  {
    "name": "CreateAcceleratorTableW", 
    "type": "skProc", 
    "code": "proc CreateAcceleratorTableW*(Accel: pointer; Count: int): HACCEL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateAcceleratorTableW\".}"
  }, 
  {
    "name": "CreateColorSpace", 
    "type": "skProc", 
    "code": "proc CreateColorSpace*(ColorSpace: var TLogColorSpace): HCOLORSPACE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateColorSpaceA\".}"
  }, 
  {
    "name": "CreateColorSpaceA", 
    "type": "skProc", 
    "code": "proc CreateColorSpaceA*(ColorSpace: var TLogColorSpaceA): HCOLORSPACE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreateColorSpaceA\".}"
  }, 
  {
    "name": "CreateDialogIndirectParam", 
    "type": "skProc", 
    "code": "proc CreateDialogIndirectParam*(hInstance: HINST; lpTemplate: TDlgTemplate; \u000A                                hWndParent: HWND; lpDialogFunc: TFNDlgProc; \u000A                                dwInitParam: LPARAM): HWND {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateDialogIndirectParamA\".}"
  }, 
  {
    "name": "CreateIconIndirect", 
    "type": "skProc", 
    "code": "proc CreateIconIndirect*(piconinfo: var TIconInfo): HICON {.stdcall, \u000A    dynlib: \"user32\", importc: \"CreateIconIndirect\".}"
  }, 
  {
    "name": "CreatePipe", 
    "type": "skProc", 
    "code": "proc CreatePipe*(hReadPipe, hWritePipe: var THandle; \u000A                 lpPipeAttributes: PSecurityAttributes; nSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreatePipe\".}"
  }, 
  {
    "name": "CreatePolygonRgn", 
    "type": "skProc", 
    "code": "proc CreatePolygonRgn*(Points: pointer; Count, FillMode: int): HRGN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"CreatePolygonRgn\".}"
  }, 
  {
    "name": "CreatePolyPolygonRgn", 
    "type": "skProc", 
    "code": "proc CreatePolyPolygonRgn*(pPtStructs: pointer; pIntArray: pointer; p3, p4: int): HRGN {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"CreatePolyPolygonRgn\".}"
  }, 
  {
    "name": "CreateProcess", 
    "type": "skProc", 
    "code": "proc CreateProcess*(lpApplicationName: cstring; lpCommandLine: cstring; \u000A    lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; \u000A                    bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                    lpEnvironment: pointer; lpCurrentDirectory: cstring; \u000A                    lpStartupInfo: TStartupInfo; \u000A                    lpProcessInformation: var TProcessInformation): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessA\".}"
  }, 
  {
    "name": "CreateProcessA", 
    "type": "skProc", 
    "code": "proc CreateProcessA*(lpApplicationName: LPCSTR; lpCommandLine: LPCSTR; \u000A    lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; \u000A                     bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                     lpEnvironment: pointer; lpCurrentDirectory: LPCSTR; \u000A                     lpStartupInfo: TStartupInfo; \u000A                     lpProcessInformation: var TProcessInformation): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessA\".}"
  }, 
  {
    "name": "CreateProcessW", 
    "type": "skProc", 
    "code": "proc CreateProcessW*(lpApplicationName: LPWSTR; lpCommandLine: LPWSTR; \u000A    lpProcessAttributes, lpThreadAttributes: PSecurityAttributes; \u000A                     bInheritHandles: WINBOOL; dwCreationFlags: DWORD; \u000A                     lpEnvironment: pointer; lpCurrentDirectory: LPWSTR; \u000A                     lpStartupInfo: TStartupInfo; \u000A                     lpProcessInformation: var TProcessInformation): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateProcessW\".}"
  }, 
  {
    "name": "CreateRemoteThread", 
    "type": "skProc", 
    "code": "proc CreateRemoteThread*(hProcess: THandle; lpThreadAttributes: pointer; \u000A                         dwStackSize: DWORD; \u000A                         lpStartAddress: TFNThreadStartRoutine; \u000A                         lpParameter: pointer; dwCreationFlags: DWORD; \u000A                         lpThreadId: var DWORD): THandle {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"CreateRemoteThread\".}"
  }, 
  {
    "name": "CreateThread", 
    "type": "skProc", 
    "code": "proc CreateThread*(lpThreadAttributes: pointer; dwStackSize: DWORD; \u000A                   lpStartAddress: TFNThreadStartRoutine; lpParameter: pointer; \u000A                   dwCreationFlags: DWORD; lpThreadId: var DWORD): THandle {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"CreateThread\".}"
  }, 
  {
    "name": "DdeSetQualityOfService", 
    "type": "skProc", 
    "code": "proc DdeSetQualityOfService*(hWndClient: HWnd; \u000A                             pqosNew: TSecurityQualityOfService; \u000A                             pqosPrev: PSecurityQualityOfService): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DdeSetQualityOfService\".}"
  }, 
  {
    "name": "DescribePixelFormat", 
    "type": "skProc", 
    "code": "proc DescribePixelFormat*(DC: HDC; p2: int; p3: WINUINT; \u000A                          p4: var TPixelFormatDescriptor): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"DescribePixelFormat\".}"
  }, 
  {
    "name": "DeviceIoControl", 
    "type": "skProc", 
    "code": "proc DeviceIoControl*(hDevice: THandle; dwIoControlCode: DWORD; \u000A                      lpInBuffer: pointer; nInBufferSize: DWORD; \u000A                      lpOutBuffer: pointer; nOutBufferSize: DWORD; \u000A                      lpBytesReturned: var DWORD; lpOverlapped: POverlapped): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"DeviceIoControl\".}"
  }, 
  {
    "name": "DialogBoxIndirectParam", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParam*(hInstance: HINST; lpDialogTemplate: TDlgTemplate; \u000A                             hWndParent: HWND; lpDialogFunc: TFNDlgProc; \u000A                             dwInitParam: LPARAM): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamA\".}"
  }, 
  {
    "name": "DialogBoxIndirectParamA", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParamA*(hInstance: HINST; lpDialogTemplate: TDlgTemplate; \u000A                              hWndParent: HWND; lpDialogFunc: TFNDlgProc; \u000A                              dwInitParam: LPARAM): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamA\".}"
  }, 
  {
    "name": "DialogBoxIndirectParamW", 
    "type": "skProc", 
    "code": "proc DialogBoxIndirectParamW*(hInstance: HINST; lpDialogTemplate: TDlgTemplate; \u000A                              hWndParent: HWND; lpDialogFunc: TFNDlgProc; \u000A                              dwInitParam: LPARAM): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"DialogBoxIndirectParamW\".}"
  }, 
  {
    "name": "DispatchMessage", 
    "type": "skProc", 
    "code": "proc DispatchMessage*(lpMsg: TMsg): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageA\".}"
  }, 
  {
    "name": "DispatchMessageA", 
    "type": "skProc", 
    "code": "proc DispatchMessageA*(lpMsg: TMsg): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageA\".}"
  }, 
  {
    "name": "DispatchMessageW", 
    "type": "skProc", 
    "code": "proc DispatchMessageW*(lpMsg: TMsg): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"DispatchMessageW\".}"
  }, 
  {
    "name": "DosDateTimeToFileTime", 
    "type": "skProc", 
    "code": "proc DosDateTimeToFileTime*(wFatDate, wFatTime: int16; lpFileTime: var TFileTime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"DosDateTimeToFileTime\".}"
  }, 
  {
    "name": "DPtoLP", 
    "type": "skProc", 
    "code": "proc DPtoLP*(DC: HDC; Points: pointer; Count: int): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"DPtoLP\".}"
  }, 
  {
    "name": "DrawEdge", 
    "type": "skProc", 
    "code": "proc DrawEdge*(hdc: HDC; qrc: var TRect; edge: WINUINT; grfFlags: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawEdge\".}"
  }, 
  {
    "name": "DrawFrameControl", 
    "type": "skProc", 
    "code": "proc DrawFrameControl*(DC: HDC; Rect: TRect; uType, uState: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawFrameControl\".}"
  }, 
  {
    "name": "DrawText", 
    "type": "skProc", 
    "code": "proc DrawText*(hDC: HDC; lpString: cstring; nCount: int; lpRect: var TRect; \u000A               uFormat: WINUINT): int {.stdcall, dynlib: \"user32\", \u000A                                        importc: \"DrawTextA\".}"
  }, 
  {
    "name": "DrawTextA", 
    "type": "skProc", 
    "code": "proc DrawTextA*(hDC: HDC; lpString: LPCSTR; nCount: int; lpRect: var TRect; \u000A                uFormat: WINUINT): int {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawTextA\".}"
  }, 
  {
    "name": "DrawTextEx", 
    "type": "skProc", 
    "code": "proc DrawTextEx*(DC: HDC; lpchText: cstring; cchText: int; p4: var TRect; \u000A                 dwDTFormat: WINUINT; DTParams: PDrawTextParams): int {.stdcall, \u000A    dynlib: \"user32\", importc: \"DrawTextExA\".}"
  }, 
  {
    "name": "DrawTextExA", 
    "type": "skProc", 
    "code": "proc DrawTextExA*(DC: HDC; lpchText: LPCSTR; cchText: int; p4: var TRect; \u000A                  dwDTFormat: WINUINT; DTParams: PDrawTextParams): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawTextExA\".}"
  }, 
  {
    "name": "DrawTextExW", 
    "type": "skProc", 
    "code": "proc DrawTextExW*(DC: HDC; lpchText: LPWSTR; cchText: int; p4: var TRect; \u000A                  dwDTFormat: WINUINT; DTParams: PDrawTextParams): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"DrawTextExW\".}"
  }, 
  {
    "name": "DrawTextW", 
    "type": "skProc", 
    "code": "proc DrawTextW*(hDC: HDC; lpString: LPWSTR; nCount: int; lpRect: var TRect; \u000A                uFormat: WINUINT): int {.stdcall, dynlib: \"user32\", \u000A    importc: \"DrawTextW\".}"
  }, 
  {
    "name": "EndPaint", 
    "type": "skProc", 
    "code": "proc EndPaint*(wnd: HWND; lpPaint: TPaintStruct): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EndPaint\".}"
  }, 
  {
    "name": "EnumDisplaySettings", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettings*(lpszDeviceName: cstring; iModeNum: DWORD; \u000A                          lpDevMode: var TDeviceMode): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsA\".}"
  }, 
  {
    "name": "EnumDisplaySettingsA", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettingsA*(lpszDeviceName: LPCSTR; iModeNum: DWORD; \u000A                           lpDevMode: var TDeviceModeA): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsA\".}"
  }, 
  {
    "name": "EnumDisplaySettingsW", 
    "type": "skProc", 
    "code": "proc EnumDisplaySettingsW*(lpszDeviceName: LPWSTR; iModeNum: DWORD; \u000A                           lpDevMode: var TDeviceModeW): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"EnumDisplaySettingsW\".}"
  }, 
  {
    "name": "ExtCreatePen", 
    "type": "skProc", 
    "code": "proc ExtCreatePen*(PenStyle, Width: DWORD; Brush: TLogBrush; StyleCount: DWORD; \u000A                   Style: pointer): HPEN {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ExtCreatePen\".}"
  }, 
  {
    "name": "ExtCreateRegion", 
    "type": "skProc", 
    "code": "proc ExtCreateRegion*(p1: PXForm; p2: DWORD; p3: TRgnData): HRGN {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"ExtCreateRegion\".}"
  }, 
  {
    "name": "FileTimeToDosDateTime", 
    "type": "skProc", 
    "code": "proc FileTimeToDosDateTime*(lpFileTime: TFileTime; \u000A                            lpFatDate, lpFatTime: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"FileTimeToDosDateTime\".}"
  }, 
  {
    "name": "FileTimeToLocalFileTime", 
    "type": "skProc", 
    "code": "proc FileTimeToLocalFileTime*(lpFileTime: TFileTime; \u000A                              lpLocalFileTime: var TFileTime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FileTimeToLocalFileTime\".}"
  }, 
  {
    "name": "FileTimeToSystemTime", 
    "type": "skProc", 
    "code": "proc FileTimeToSystemTime*(lpFileTime: TFileTime; lpSystemTime: var TSystemTime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FileTimeToSystemTime\".}"
  }, 
  {
    "name": "FillConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputAttribute*(hConsoleOutput: THandle; wAttribute: int16; \u000A                                 nLength: DWORD; dwWriteCoord: TCoord; \u000A                                 lpNumberOfAttrsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputAttribute\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacter*(hConsoleOutput: THandle; cCharacter: char; \u000A                                 nLength: DWORD; dwWriteCoord: TCoord; \u000A                                 lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacterA*(hConsoleOutput: THandle; cCharacter: char; \u000A                                  nLength: DWORD; dwWriteCoord: TCoord; \u000A                                  lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "FillConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc FillConsoleOutputCharacterW*(hConsoleOutput: THandle; cCharacter: WideChar; \u000A                                  nLength: DWORD; dwWriteCoord: TCoord; \u000A                                  lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FillConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "FindFirstFile", 
    "type": "skProc", 
    "code": "proc FindFirstFile*(lpFileName: cstring; lpFindFileData: var TWIN32FindData): THandle {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileA\".}"
  }, 
  {
    "name": "FindFirstFileA", 
    "type": "skProc", 
    "code": "proc FindFirstFileA*(lpFileName: LPCSTR; lpFindFileData: var TWIN32FindDataA): THandle {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileA\".}"
  }, 
  {
    "name": "FindFirstFileW", 
    "type": "skProc", 
    "code": "proc FindFirstFileW*(lpFileName: LPWSTR; lpFindFileData: var TWIN32FindDataW): THandle {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindFirstFileW\".}"
  }, 
  {
    "name": "FindNextFile", 
    "type": "skProc", 
    "code": "proc FindNextFile*(hFindFile: THandle; lpFindFileData: var TWIN32FindData): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileA\".}"
  }, 
  {
    "name": "FindNextFileA", 
    "type": "skProc", 
    "code": "proc FindNextFileA*(hFindFile: THandle; lpFindFileData: var TWIN32FindDataA): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileA\".}"
  }, 
  {
    "name": "FindNextFileW", 
    "type": "skProc", 
    "code": "proc FindNextFileW*(hFindFile: THandle; lpFindFileData: var TWIN32FindDataW): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"FindNextFileW\".}"
  }, 
  {
    "name": "GetAspectRatioFilterEx", 
    "type": "skProc", 
    "code": "proc GetAspectRatioFilterEx*(DC: HDC; p2: var TSize): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetAspectRatioFilterEx\".}"
  }, 
  {
    "name": "GetBinaryType", 
    "type": "skProc", 
    "code": "proc GetBinaryType*(lpApplicationName: cstring; lpBinaryType: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeA\".}"
  }, 
  {
    "name": "GetBinaryTypeA", 
    "type": "skProc", 
    "code": "proc GetBinaryTypeA*(lpApplicationName: LPCSTR; lpBinaryType: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeA\".}"
  }, 
  {
    "name": "GetBinaryTypeW", 
    "type": "skProc", 
    "code": "proc GetBinaryTypeW*(lpApplicationName: LPWSTR; lpBinaryType: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetBinaryTypeW\".}"
  }, 
  {
    "name": "GetBitmapDimensionEx", 
    "type": "skProc", 
    "code": "proc GetBitmapDimensionEx*(p1: HBITMAP; p2: var TSize): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBitmapDimensionEx\".}"
  }, 
  {
    "name": "GetBoundsRect", 
    "type": "skProc", 
    "code": "proc GetBoundsRect*(DC: HDC; p2: var TRect; p3: WINUINT): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBoundsRect\".}"
  }, 
  {
    "name": "GetBrushOrgEx", 
    "type": "skProc", 
    "code": "proc GetBrushOrgEx*(DC: HDC; p2: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetBrushOrgEx\".}"
  }, 
  {
    "name": "GetCaretPos", 
    "type": "skProc", 
    "code": "proc GetCaretPos*(lpPoint: var TPoint): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetCaretPos\".}"
  }, 
  {
    "name": "GetCharABCWidths", 
    "type": "skProc", 
    "code": "proc GetCharABCWidths*(DC: HDC; p2, p3: WINUINT; ABCStructs: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsA\".}"
  }, 
  {
    "name": "GetCharABCWidthsA", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsA*(DC: HDC; p2, p3: WINUINT; ABCStructs: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsA\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloat", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloat*(DC: HDC; p2, p3: WINUINT; ABCFloatSturcts: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatA\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloatA", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloatA*(DC: HDC; p2, p3: WINUINT; ABCFloatSturcts: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatA\".}"
  }, 
  {
    "name": "GetCharABCWidthsFloatW", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsFloatW*(DC: HDC; p2, p3: WINUINT; ABCFloatSturcts: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsFloatW\".}"
  }, 
  {
    "name": "GetCharABCWidthsW", 
    "type": "skProc", 
    "code": "proc GetCharABCWidthsW*(DC: HDC; p2, p3: WINUINT; ABCStructs: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharABCWidthsW\".}"
  }, 
  {
    "name": "GetCharacterPlacement", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacement*(DC: HDC; p2: cstring; p3, p4: WINBOOL; \u000A                            p5: var TGCPResults; p6: DWORD): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharacterPlacementA\".}"
  }, 
  {
    "name": "GetCharacterPlacementA", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacementA*(DC: HDC; p2: LPCSTR; p3, p4: WINBOOL; \u000A                             p5: var TGCPResults; p6: DWORD): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharacterPlacementA\".}"
  }, 
  {
    "name": "GetCharacterPlacementW", 
    "type": "skProc", 
    "code": "proc GetCharacterPlacementW*(DC: HDC; p2: LPWSTR; p3, p4: WINBOOL; \u000A                             p5: var TGCPResults; p6: DWORD): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetCharacterPlacementW\".}"
  }, 
  {
    "name": "GetCharWidth", 
    "type": "skProc", 
    "code": "proc GetCharWidth*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthA\".}"
  }, 
  {
    "name": "GetCharWidth32", 
    "type": "skProc", 
    "code": "proc GetCharWidth32*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32A\".}"
  }, 
  {
    "name": "GetCharWidth32A", 
    "type": "skProc", 
    "code": "proc GetCharWidth32A*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32A\".}"
  }, 
  {
    "name": "GetCharWidth32W", 
    "type": "skProc", 
    "code": "proc GetCharWidth32W*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidth32W\".}"
  }, 
  {
    "name": "GetCharWidthA", 
    "type": "skProc", 
    "code": "proc GetCharWidthA*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthA\".}"
  }, 
  {
    "name": "GetCharWidthFloat", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloat*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthFloatA\".}"
  }, 
  {
    "name": "GetCharWidthFloatA", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloatA*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthFloatA\".}"
  }, 
  {
    "name": "GetCharWidthFloatW", 
    "type": "skProc", 
    "code": "proc GetCharWidthFloatW*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthFloatW\".}"
  }, 
  {
    "name": "GetCharWidthW", 
    "type": "skProc", 
    "code": "proc GetCharWidthW*(DC: HDC; p2, p3: WINUINT; Widths: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetCharWidthW\".}"
  }, 
  {
    "name": "GetClassInfo", 
    "type": "skProc", 
    "code": "proc GetClassInfo*(hInstance: HINST; lpClassName: cstring; \u000A                   lpWndClass: var TWndClass): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassInfoA\".}"
  }, 
  {
    "name": "GetClassInfoA", 
    "type": "skProc", 
    "code": "proc GetClassInfoA*(hInstance: HINST; lpClassName: LPCSTR; \u000A                    lpWndClass: var TWndClassA): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassInfoA\".}"
  }, 
  {
    "name": "GetClassInfoEx", 
    "type": "skProc", 
    "code": "proc GetClassInfoEx*(Instance: HINST; Classname: cstring; \u000A                     WndClass: var TWndClassEx): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClassInfoExA\".}"
  }, 
  {
    "name": "GetClientRect", 
    "type": "skProc", 
    "code": "proc GetClientRect*(wnd: HWND; lpRect: var TRect): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetClientRect\".}"
  }, 
  {
    "name": "GetClipBox", 
    "type": "skProc", 
    "code": "proc GetClipBox*(DC: HDC; Rect: var TRect): int {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetClipBox\".}"
  }, 
  {
    "name": "GetClipCursor", 
    "type": "skProc", 
    "code": "proc GetClipCursor*(lpRect: var TRect): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetClipCursor\".}"
  }, 
  {
    "name": "GetColorAdjustment", 
    "type": "skProc", 
    "code": "proc GetColorAdjustment*(DC: HDC; p2: var TColorAdjustment): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetColorAdjustment\".}"
  }, 
  {
    "name": "GetCommConfig", 
    "type": "skProc", 
    "code": "proc GetCommConfig*(hCommDev: THandle; lpCC: var TCommConfig; \u000A                    lpdwSize: var DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetCommConfig\".}"
  }, 
  {
    "name": "GetCommMask", 
    "type": "skProc", 
    "code": "proc GetCommMask*(hFile: THandle; lpEvtMask: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCommMask\".}"
  }, 
  {
    "name": "GetCommModemStatus", 
    "type": "skProc", 
    "code": "proc GetCommModemStatus*(hFile: THandle; lpModemStat: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommModemStatus\".}"
  }, 
  {
    "name": "GetCommProperties", 
    "type": "skProc", 
    "code": "proc GetCommProperties*(hFile: THandle; lpCommProp: var TCommProp): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommProperties\".}"
  }, 
  {
    "name": "GetCommState", 
    "type": "skProc", 
    "code": "proc GetCommState*(hFile: THandle; lpDCB: var TDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCommState\".}"
  }, 
  {
    "name": "GetCommTimeouts", 
    "type": "skProc", 
    "code": "proc GetCommTimeouts*(hFile: THandle; lpCommTimeouts: var TCommTimeouts): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetCommTimeouts\".}"
  }, 
  {
    "name": "GetComputerName", 
    "type": "skProc", 
    "code": "proc GetComputerName*(lpBuffer: cstring; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameA\".}"
  }, 
  {
    "name": "GetComputerNameA", 
    "type": "skProc", 
    "code": "proc GetComputerNameA*(lpBuffer: LPCSTR; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameA\".}"
  }, 
  {
    "name": "GetComputerNameW", 
    "type": "skProc", 
    "code": "proc GetComputerNameW*(lpBuffer: LPWSTR; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetComputerNameW\".}"
  }, 
  {
    "name": "GetConsoleCursorInfo", 
    "type": "skProc", 
    "code": "proc GetConsoleCursorInfo*(hConsoleOutput: THandle; \u000A                           lpConsoleCursorInfo: var TConsoleCursorInfo): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetConsoleCursorInfo\".}"
  }, 
  {
    "name": "GetConsoleMode", 
    "type": "skProc", 
    "code": "proc GetConsoleMode*(hConsoleHandle: THandle; lpMode: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetConsoleMode\".}"
  }, 
  {
    "name": "GetConsoleScreenBufferInfo", 
    "type": "skProc", 
    "code": "proc GetConsoleScreenBufferInfo*(hConsoleOutput: THandle; \u000A    lpConsoleScreenBufferInfo: var TConsoleScreenBufferInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetConsoleScreenBufferInfo\".}"
  }, 
  {
    "name": "GetCPInfo", 
    "type": "skProc", 
    "code": "proc GetCPInfo*(CodePage: WINUINT; lpCPInfo: var TCPInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetCPInfo\".}"
  }, 
  {
    "name": "GetCursorInfo", 
    "type": "skProc", 
    "code": "proc GetCursorInfo*(pci: var TCursorInfo): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetCursorInfo\".}"
  }, 
  {
    "name": "GetCursorPos", 
    "type": "skProc", 
    "code": "proc GetCursorPos*(lpPoint: var TPoint): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetCursorPos\".}"
  }, 
  {
    "name": "GetDCOrgEx", 
    "type": "skProc", 
    "code": "proc GetDCOrgEx*(DC: HDC; Origin: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetDCOrgEx\".}"
  }, 
  {
    "name": "GetDefaultCommConfig", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfig*(lpszName: cstring; lpCC: var TCommConfig; \u000A                           lpdwSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigA\".}"
  }, 
  {
    "name": "GetDefaultCommConfigA", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfigA*(lpszName: LPCSTR; lpCC: var TCommConfig; \u000A                            lpdwSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigA\".}"
  }, 
  {
    "name": "GetDefaultCommConfigW", 
    "type": "skProc", 
    "code": "proc GetDefaultCommConfigW*(lpszName: LPWSTR; lpCC: var TCommConfig; \u000A                            lpdwSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetDefaultCommConfigW\".}"
  }, 
  {
    "name": "GetDIBColorTable", 
    "type": "skProc", 
    "code": "proc GetDIBColorTable*(DC: HDC; p2, p3: WINUINT; RGBQuadStructs: pointer): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetDIBColorTable\".}"
  }, 
  {
    "name": "GetDIBits", 
    "type": "skProc", 
    "code": "proc GetDIBits*(DC: HDC; Bitmap: HBitmap; StartScan, NumScans: WINUINT; \u000A                Bits: pointer; BitInfo: var TBitmapInfo; Usage: WINUINT): int {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetDIBits\".}"
  }, 
  {
    "name": "GetDiskFreeSpace", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpace*(lpRootPathName: cstring; lpSectorsPerCluster, \u000A    lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceA", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceA*(lpRootPathName: LPCSTR; lpSectorsPerCluster, \u000A    lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceEx", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceEx*(lpDirectoryName: cstring; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: var TLargeInteger; \u000A                         lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceExA", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceExA*(lpDirectoryName: LPCSTR; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: var TLargeInteger; \u000A                          lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceExW", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceExW*(lpDirectoryName: LPWSTR; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: var TLargeInteger; \u000A                          lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExW\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceW", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceW*(lpRootPathName: LPWSTR; lpSectorsPerCluster, \u000A    lpBytesPerSector, lpNumberOfFreeClusters, lpTotalNumberOfClusters: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceW\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceEx", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceEx*(lpDirectoryName: cstring; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: PLargeInteger; lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceExA", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceExA*(lpDirectoryName: LPCSTR; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: PLargeInteger; lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExA\".}"
  }, 
  {
    "name": "GetDiskFreeSpaceExW", 
    "type": "skProc", 
    "code": "proc GetDiskFreeSpaceExW*(lpDirectoryName: LPWSTR; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes: PLargeInteger; lpTotalNumberOfFreeBytes: PLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExW\".}"
  }, 
  {
    "name": "GetExitCodeProcess", 
    "type": "skProc", 
    "code": "proc GetExitCodeProcess*(hProcess: THandle; lpExitCode: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetExitCodeProcess\".}"
  }, 
  {
    "name": "GetExitCodeThread", 
    "type": "skProc", 
    "code": "proc GetExitCodeThread*(hThread: THandle; lpExitCode: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetExitCodeThread\".}"
  }, 
  {
    "name": "GetFileInformationByHandle", 
    "type": "skProc", 
    "code": "proc GetFileInformationByHandle*(hFile: THandle; lpFileInformation: var TByHandleFileInformation): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetFileInformationByHandle\".}"
  }, 
  {
    "name": "GetFileVersionInfoSize", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSize*(lptstrFilename: cstring; lpdwHandle: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeA\".}"
  }, 
  {
    "name": "GetFileVersionInfoSizeA", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSizeA*(lptstrFilename: LPCSTR; lpdwHandle: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeA\".}"
  }, 
  {
    "name": "GetFileVersionInfoSizeW", 
    "type": "skProc", 
    "code": "proc GetFileVersionInfoSizeW*(lptstrFilename: LPWSTR; lpdwHandle: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"version\", importc: \"GetFileVersionInfoSizeW\".}"
  }, 
  {
    "name": "GetGlyphOutline", 
    "type": "skProc", 
    "code": "proc GetGlyphOutline*(DC: HDC; p2, p3: WINUINT; p4: TGlyphMetrics; p5: DWORD; \u000A                      p6: pointer; p7: TMat2): DWORD {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetGlyphOutlineA\".}"
  }, 
  {
    "name": "GetGlyphOutlineA", 
    "type": "skProc", 
    "code": "proc GetGlyphOutlineA*(DC: HDC; p2, p3: WINUINT; p4: TGlyphMetrics; p5: DWORD; \u000A                       p6: pointer; p7: TMat2): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetGlyphOutlineA\".}"
  }, 
  {
    "name": "GetGlyphOutlineW", 
    "type": "skProc", 
    "code": "proc GetGlyphOutlineW*(DC: HDC; p2, p3: WINUINT; p4: TGlyphMetrics; p5: DWORD; \u000A                       p6: pointer; p7: TMat2): DWORD {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetGlyphOutlineW\".}"
  }, 
  {
    "name": "GetHandleInformation", 
    "type": "skProc", 
    "code": "proc GetHandleInformation*(hObject: THandle; lpdwFlags: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetHandleInformation\".}"
  }, 
  {
    "name": "GetIconInfo", 
    "type": "skProc", 
    "code": "proc GetIconInfo*(icon: HICON; piconinfo: var TIconInfo): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetIconInfo\".}"
  }, 
  {
    "name": "GetKerningPairs", 
    "type": "skProc", 
    "code": "proc GetKerningPairs*(DC: HDC; Count: DWORD; KerningPairs: pointer): DWORD {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetKerningPairs\".}"
  }, 
  {
    "name": "GetKeyboardLayoutList", 
    "type": "skProc", 
    "code": "proc GetKeyboardLayoutList*(nBuff: int; List: pointer): WINUINT {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetKeyboardLayoutList\".}"
  }, 
  {
    "name": "GetSystemTime", 
    "type": "skProc", 
    "code": "proc GetSystemTime*(lpSystemTime: var SYSTEMTIME) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemTime\".}"
  }, 
  {
    "name": "GetLocalTime", 
    "type": "skProc", 
    "code": "proc GetLocalTime*(SystemTime: var SYSTEMTIME) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetLocalTime\".}"
  }, 
  {
    "name": "GetSystemInfo", 
    "type": "skProc", 
    "code": "proc GetSystemInfo*(SystemInfo: var SYSTEM_INFO) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemInfo\".}"
  }, 
  {
    "name": "SetSystemTime", 
    "type": "skProc", 
    "code": "proc SetSystemTime*(lpSystemTime: var SYSTEMTIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetSystemTime\".}"
  }, 
  {
    "name": "SetLocalTime", 
    "type": "skProc", 
    "code": "proc SetLocalTime*(lpSystemTime: var SYSTEMTIME): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetLocalTime\".}"
  }, 
  {
    "name": "GetLogColorSpace", 
    "type": "skProc", 
    "code": "proc GetLogColorSpace*(p1: HCOLORSPACE; ColorSpace: var TLogColorSpace; \u000A                       Size: DWORD): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetLogColorSpaceA\".}"
  }, 
  {
    "name": "GetLogColorSpaceA", 
    "type": "skProc", 
    "code": "proc GetLogColorSpaceA*(p1: HCOLORSPACE; ColorSpace: var TLogColorSpaceA; \u000A                        Size: DWORD): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetLogColorSpaceA\".}"
  }, 
  {
    "name": "GetMailslotInfo", 
    "type": "skProc", 
    "code": "proc GetMailslotInfo*(hMailslot: THandle; lpMaxMessageSize: pointer; \u000A                      lpNextSize: var DWORD; \u000A                      lpMessageCount, lpReadTimeout: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetMailslotInfo\".}"
  }, 
  {
    "name": "GetMenuItemInfo", 
    "type": "skProc", 
    "code": "proc GetMenuItemInfo*(p1: HMENU; p2: WINUINT; p3: WINBOOL; p4: var TMenuItemInfo): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetMenuItemInfoA\".}"
  }, 
  {
    "name": "GetMenuItemInfoA", 
    "type": "skProc", 
    "code": "proc GetMenuItemInfoA*(p1: HMENU; p2: WINUINT; p3: WINBOOL; \u000A                       p4: var TMenuItemInfoA): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMenuItemInfoA\".}"
  }, 
  {
    "name": "GetMenuItemRect", 
    "type": "skProc", 
    "code": "proc GetMenuItemRect*(wnd: HWND; menu: HMENU; uItem: WINUINT; \u000A                      lprcItem: var TRect): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetMenuItemRect\".}"
  }, 
  {
    "name": "GetMessage", 
    "type": "skProc", 
    "code": "proc GetMessage*(lpMsg: var TMsg; wnd: HWND; \u000A                 wMsgFilterMin, wMsgFilterMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMessageA\".}"
  }, 
  {
    "name": "GetMessageA", 
    "type": "skProc", 
    "code": "proc GetMessageA*(lpMsg: var TMsg; wnd: HWND; \u000A                  wMsgFilterMin, wMsgFilterMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMessageA\".}"
  }, 
  {
    "name": "GetMessageW", 
    "type": "skProc", 
    "code": "proc GetMessageW*(lpMsg: var TMsg; wnd: HWND; \u000A                  wMsgFilterMin, wMsgFilterMax: WINUINT): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetMessageW\".}"
  }, 
  {
    "name": "GetMiterLimit", 
    "type": "skProc", 
    "code": "proc GetMiterLimit*(DC: HDC; Limit: var float32): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetMiterLimit\".}"
  }, 
  {
    "name": "GetNamedPipeInfo", 
    "type": "skProc", 
    "code": "proc GetNamedPipeInfo*(hNamedPipe: THandle; lpFlags: var DWORD; \u000A                       lpOutBufferSize, lpInBufferSize, lpMaxInstances: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNamedPipeInfo\".}"
  }, 
  {
    "name": "GetNumberOfConsoleInputEvents", 
    "type": "skProc", 
    "code": "proc GetNumberOfConsoleInputEvents*(hConsoleInput: THandle; \u000A                                    lpNumberOfEvents: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNumberOfConsoleInputEvents\".}"
  }, 
  {
    "name": "GetNumberOfConsoleMouseButtons", 
    "type": "skProc", 
    "code": "proc GetNumberOfConsoleMouseButtons*(lpNumberOfMouseButtons: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetNumberOfConsoleMouseButtons\".}"
  }, 
  {
    "name": "GetOverlappedResult", 
    "type": "skProc", 
    "code": "proc GetOverlappedResult*(hFile: THandle; lpOverlapped: TOverlapped; \u000A                          lpNumberOfBytesTransferred: var DWORD; bWait: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetOverlappedResult\".}"
  }, 
  {
    "name": "GetPaletteEntries", 
    "type": "skProc", 
    "code": "proc GetPaletteEntries*(Palette: HPALETTE; StartIndex, NumEntries: WINUINT; \u000A                        PaletteEntries: pointer): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetPaletteEntries\".}"
  }, 
  {
    "name": "GetPath", 
    "type": "skProc", 
    "code": "proc GetPath*(DC: HDC; Points, Types: pointer; nSize: int): int {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetPath\".}"
  }, 
  {
    "name": "GetPriorityClipboardFormat", 
    "type": "skProc", 
    "code": "proc GetPriorityClipboardFormat*(paFormatPriorityList: pointer; cFormats: int): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetPriorityClipboardFormat\".}"
  }, 
  {
    "name": "GetPrivateProfileSectionNamesA", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSectionNamesA*(lpszReturnBuffer: LPSTR; nSize: DWORD; \u000A                                     lpFileName: LPCSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionNamesA\".}"
  }, 
  {
    "name": "GetPrivateProfileSectionNamesW", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSectionNamesW*(lpszReturnBuffer: LPWSTR; nSize: DWORD; \u000A                                     lpFileName: LPCWSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionNamesW\".}"
  }, 
  {
    "name": "GetPrivateProfileSectionNames", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileSectionNames*(lpszReturnBuffer: LPTSTR; nSize: DWORD; \u000A                                    lpFileName: LPCTSTR): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetPrivateProfileSectionNamesA\".}"
  }, 
  {
    "name": "GetPrivateProfileStructA", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileStructA*(lpszSection, lpszKey: LPCSTR; lpStruct: LPVOID; \u000A                               uSizeStruct: WINUINT; szFile: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStructA\".}"
  }, 
  {
    "name": "GetPrivateProfileStructW", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileStructW*(lpszSection, lpszKey: LPCWSTR; lpStruct: LPVOID; \u000A                               uSizeStruct: WINUINT; szFile: LPCWSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStructW\".}"
  }, 
  {
    "name": "GetPrivateProfileStruct", 
    "type": "skProc", 
    "code": "proc GetPrivateProfileStruct*(lpszSection, lpszKey: LPCTSTR; lpStruct: LPVOID; \u000A                              uSizeStruct: WINUINT; szFile: LPCTSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetPrivateProfileStructA\".}"
  }, 
  {
    "name": "GetProcessAffinityMask", 
    "type": "skProc", 
    "code": "proc GetProcessAffinityMask*(hProcess: THandle; lpProcessAffinityMask, \u000A    lpSystemAffinityMask: var DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProcessAffinityMask\".}"
  }, 
  {
    "name": "GetProcessHeaps", 
    "type": "skProc", 
    "code": "proc GetProcessHeaps*(NumberOfHeaps: DWORD; ProcessHeaps: var THandle): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessHeaps\".}"
  }, 
  {
    "name": "GetProcessPriorityBoost", 
    "type": "skProc", 
    "code": "proc GetProcessPriorityBoost*(hThread: THandle; \u000A                              DisablePriorityBoost: var WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessPriorityBoost\".}"
  }, 
  {
    "name": "GetProcessShutdownParameters", 
    "type": "skProc", 
    "code": "proc GetProcessShutdownParameters*(lpdwLevel, lpdwFlags: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetProcessShutdownParameters\".}"
  }, 
  {
    "name": "GetProcessTimes", 
    "type": "skProc", 
    "code": "proc GetProcessTimes*(hProcess: THandle; lpCreationTime, lpExitTime, \u000A    lpKernelTime, lpUserTime: var TFileTime): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProcessTimes\".}"
  }, 
  {
    "name": "GetProcessWorkingSetSize", 
    "type": "skProc", 
    "code": "proc GetProcessWorkingSetSize*(hProcess: THandle; lpMinimumWorkingSetSize, \u000A    lpMaximumWorkingSetSize: var DWORD): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetProcessWorkingSetSize\".}"
  }, 
  {
    "name": "GetQueuedCompletionStatus", 
    "type": "skProc", 
    "code": "proc GetQueuedCompletionStatus*(CompletionPort: THandle; \u000A    lpNumberOfBytesTransferred, lpCompletionKey: var DWORD; \u000A                                lpOverlapped: var POverlapped; \u000A                                dwMilliseconds: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetQueuedCompletionStatus\".}"
  }, 
  {
    "name": "GetRasterizerCaps", 
    "type": "skProc", 
    "code": "proc GetRasterizerCaps*(p1: var TRasterizerStatus; p2: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetRasterizerCaps\".}"
  }, 
  {
    "name": "GetRgnBox", 
    "type": "skProc", 
    "code": "proc GetRgnBox*(RGN: HRGN; p2: var TRect): int {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetRgnBox\".}"
  }, 
  {
    "name": "GetScrollInfo", 
    "type": "skProc", 
    "code": "proc GetScrollInfo*(wnd: HWND; BarFlag: int; ScrollInfo: var TScrollInfo): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetScrollInfo\".}"
  }, 
  {
    "name": "GetScrollRange", 
    "type": "skProc", 
    "code": "proc GetScrollRange*(wnd: HWND; nBar: int; lpMinPos, lpMaxPos: var int): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetScrollRange\".}"
  }, 
  {
    "name": "GetStartupInfo", 
    "type": "skProc", 
    "code": "proc GetStartupInfo*(lpStartupInfo: var TSTARTUPINFO) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStartupInfoA\".}"
  }, 
  {
    "name": "GetStringTypeA", 
    "type": "skProc", 
    "code": "proc GetStringTypeA*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCSTR; \u000A                     cchSrc: WINBOOL; lpCharType: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeA\".}"
  }, 
  {
    "name": "GetStringTypeEx", 
    "type": "skProc", 
    "code": "proc GetStringTypeEx*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: cstring; \u000A                      cchSrc: int; lpCharType: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExA\".}"
  }, 
  {
    "name": "GetStringTypeExA", 
    "type": "skProc", 
    "code": "proc GetStringTypeExA*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPCSTR; \u000A                       cchSrc: int; lpCharType: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExA\".}"
  }, 
  {
    "name": "GetStringTypeExW", 
    "type": "skProc", 
    "code": "proc GetStringTypeExW*(Locale: LCID; dwInfoType: DWORD; lpSrcStr: LPWSTR; \u000A                       cchSrc: int; lpCharType: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeExW\".}"
  }, 
  {
    "name": "GetStringTypeW", 
    "type": "skProc", 
    "code": "proc GetStringTypeW*(dwInfoType: DWORD; lpSrcStr: WCHAR; cchSrc: WINBOOL; \u000A                     lpCharType: var int16): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetStringTypeW\".}"
  }, 
  {
    "name": "GetSystemPaletteEntries", 
    "type": "skProc", 
    "code": "proc GetSystemPaletteEntries*(DC: HDC; StartIndex, NumEntries: WINUINT; \u000A                              PaletteEntries: pointer): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetSystemPaletteEntries\".}"
  }, 
  {
    "name": "GetSystemPowerStatus", 
    "type": "skProc", 
    "code": "proc GetSystemPowerStatus*(lpSystemPowerStatus: var TSystemPowerStatus): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetSystemPowerStatus\".}"
  }, 
  {
    "name": "GetSystemTimeAdjustment", 
    "type": "skProc", 
    "code": "proc GetSystemTimeAdjustment*(lpTimeAdjustment, lpTimeIncrement: var DWORD; \u000A                              lpTimeAdjustmentDisabled: var WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetSystemTimeAdjustment\".}"
  }, 
  {
    "name": "GetSystemTimeAsFileTime", 
    "type": "skProc", 
    "code": "proc GetSystemTimeAsFileTime*(lpSystemTimeAsFileTime: var TFILETIME) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetSystemTimeAsFileTime\".}"
  }, 
  {
    "name": "GetTabbedTextExtent", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtent*(hDC: HDC; lpString: cstring; \u000A                          nCount, nTabPositions: int; \u000A                          lpnTabStopPositions: pointer): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetTabbedTextExtentA\".}"
  }, 
  {
    "name": "GetTabbedTextExtentA", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtentA*(hDC: HDC; lpString: LPCSTR; \u000A                           nCount, nTabPositions: int; \u000A                           lpnTabStopPositions: pointer): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetTabbedTextExtentA\".}"
  }, 
  {
    "name": "GetTabbedTextExtentW", 
    "type": "skProc", 
    "code": "proc GetTabbedTextExtentW*(hDC: HDC; lpString: LPWSTR; \u000A                           nCount, nTabPositions: int; \u000A                           lpnTabStopPositions: pointer): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetTabbedTextExtentW\".}"
  }, 
  {
    "name": "GetTapeParameters", 
    "type": "skProc", 
    "code": "proc GetTapeParameters*(hDevice: THandle; dwOperation: DWORD; \u000A                        lpdwSize: var DWORD; lpTapeInformation: pointer): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTapeParameters\".}"
  }, 
  {
    "name": "GetTapePosition", 
    "type": "skProc", 
    "code": "proc GetTapePosition*(hDevice: THandle; dwPositionType: DWORD; \u000A                      lpdwPartition, lpdwOffsetLow: var DWORD; \u000A                      lpdwOffsetHigh: pointer): DWORD {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetTapePosition\".}"
  }, 
  {
    "name": "GetTextExtentExPoint", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPoint*(DC: HDC; p2: cstring; p3, p4: int; p5, p6: PInteger; \u000A                           p7: var TSize): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointA\".}"
  }, 
  {
    "name": "GetTextExtentExPointA", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPointA*(DC: HDC; p2: LPCSTR; p3, p4: int; p5, p6: PInteger; \u000A                            p7: var TSize): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointA\".}"
  }, 
  {
    "name": "GetTextExtentExPointW", 
    "type": "skProc", 
    "code": "proc GetTextExtentExPointW*(DC: HDC; p2: LPWSTR; p3, p4: int; p5, p6: PInteger; \u000A                            p7: var TSize): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"GetTextExtentExPointW\".}"
  }, 
  {
    "name": "GetTextExtentPoint", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint*(DC: HDC; Str: cstring; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPointA\".}"
  }, 
  {
    "name": "GetTextExtentPoint32", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32*(DC: HDC; Str: cstring; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPoint32A\".}"
  }, 
  {
    "name": "GetTextExtentPoint32A", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32A*(DC: HDC; Str: LPCSTR; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPoint32A\".}"
  }, 
  {
    "name": "GetTextExtentPoint32W", 
    "type": "skProc", 
    "code": "proc GetTextExtentPoint32W*(DC: HDC; Str: LPWSTR; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPoint32W\".}"
  }, 
  {
    "name": "GetTextExtentPointA", 
    "type": "skProc", 
    "code": "proc GetTextExtentPointA*(DC: HDC; Str: LPCSTR; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPointA\".}"
  }, 
  {
    "name": "GetTextExtentPointW", 
    "type": "skProc", 
    "code": "proc GetTextExtentPointW*(DC: HDC; Str: LPWSTR; Count: int; Size: var TSize): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"GetTextExtentPointW\".}"
  }, 
  {
    "name": "GetTextMetrics", 
    "type": "skProc", 
    "code": "proc GetTextMetrics*(DC: HDC; TM: var TTextMetric): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetTextMetricsA\".}"
  }, 
  {
    "name": "GetThreadContext", 
    "type": "skProc", 
    "code": "proc GetThreadContext*(hThread: THandle; lpContext: var TContext): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetThreadContext\".}"
  }, 
  {
    "name": "GetThreadPriorityBoost", 
    "type": "skProc", 
    "code": "proc GetThreadPriorityBoost*(hThread: THandle; DisablePriorityBoost: var WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetThreadPriorityBoost\".}"
  }, 
  {
    "name": "GetThreadSelectorEntry", 
    "type": "skProc", 
    "code": "proc GetThreadSelectorEntry*(hThread: THandle; dwSelector: DWORD; \u000A                             lpSelectorEntry: var TLDTEntry): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetThreadSelectorEntry\".}"
  }, 
  {
    "name": "GetThreadTimes", 
    "type": "skProc", 
    "code": "proc GetThreadTimes*(hThread: THandle; lpCreationTime, lpExitTime, lpKernelTime, \u000A                                       lpUserTime: var TFileTime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetThreadTimes\".}"
  }, 
  {
    "name": "GetTimeZoneInformation", 
    "type": "skProc", 
    "code": "proc GetTimeZoneInformation*(lpTimeZoneInformation: var TTimeZoneInformation): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetTimeZoneInformation\".}"
  }, 
  {
    "name": "GetUpdateRect", 
    "type": "skProc", 
    "code": "proc GetUpdateRect*(wnd: HWND; lpRect: var TRect; bErase: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUpdateRect\".}"
  }, 
  {
    "name": "GetUserName", 
    "type": "skProc", 
    "code": "proc GetUserName*(lpBuffer: cstring; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameA\".}"
  }, 
  {
    "name": "GetUserNameA", 
    "type": "skProc", 
    "code": "proc GetUserNameA*(lpBuffer: LPCSTR; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameA\".}"
  }, 
  {
    "name": "GetUserNameW", 
    "type": "skProc", 
    "code": "proc GetUserNameW*(lpBuffer: LPWSTR; nSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"GetUserNameW\".}"
  }, 
  {
    "name": "GetUserObjectInformation", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformation*(hObj: THandle; nIndex: int; pvInfo: pointer; \u000A                               nLength: DWORD; lpnLengthNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationA\".}"
  }, 
  {
    "name": "GetUserObjectInformationA", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformationA*(hObj: THandle; nIndex: int; pvInfo: pointer; \u000A                                nLength: DWORD; lpnLengthNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationA\".}"
  }, 
  {
    "name": "GetUserObjectInformationW", 
    "type": "skProc", 
    "code": "proc GetUserObjectInformationW*(hObj: THandle; nIndex: int; pvInfo: pointer; \u000A                                nLength: DWORD; lpnLengthNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"GetUserObjectInformationW\".}"
  }, 
  {
    "name": "GetUserObjectSecurity", 
    "type": "skProc", 
    "code": "proc GetUserObjectSecurity*(hObj: THandle; pSIRequested: var DWORD; \u000A                            pSID: PSecurityDescriptor; nLength: DWORD; \u000A                            lpnLengthNeeded: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetUserObjectSecurity\".}"
  }, 
  {
    "name": "GetVersionEx", 
    "type": "skProc", 
    "code": "proc GetVersionEx*(lpVersionInformation: var TOSVersionInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVersionExA\".}"
  }, 
  {
    "name": "GetVersionExA", 
    "type": "skProc", 
    "code": "proc GetVersionExA*(lpVersionInformation: var TOSVersionInfo): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetVersionExA\".}"
  }, 
  {
    "name": "GetVersionExW", 
    "type": "skProc", 
    "code": "proc GetVersionExW*(lpVersionInformation: var TOSVersionInfoW): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetVersionExW\".}"
  }, 
  {
    "name": "GetViewportExtEx", 
    "type": "skProc", 
    "code": "proc GetViewportExtEx*(DC: HDC; Size: var TSize): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetViewportExtEx\".}"
  }, 
  {
    "name": "GetViewportOrgEx", 
    "type": "skProc", 
    "code": "proc GetViewportOrgEx*(DC: HDC; Point: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetViewportOrgEx\".}"
  }, 
  {
    "name": "GetVolumeInformation", 
    "type": "skProc", 
    "code": "proc GetVolumeInformation*(lpRootPathName: cstring; lpVolumeNameBuffer: cstring; \u000A                           nVolumeNameSize: DWORD; lpVolumeSerialNumber: PDWORD; \u000A    lpMaximumComponentLength, lpFileSystemFlags: var DWORD; \u000A                           lpFileSystemNameBuffer: cstring; \u000A                           nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationA\".}"
  }, 
  {
    "name": "GetVolumeInformationA", 
    "type": "skProc", 
    "code": "proc GetVolumeInformationA*(lpRootPathName: LPCSTR; lpVolumeNameBuffer: LPCSTR; \u000A                            nVolumeNameSize: DWORD; \u000A                            lpVolumeSerialNumber: PDWORD; \u000A    lpMaximumComponentLength, lpFileSystemFlags: var DWORD; \u000A                            lpFileSystemNameBuffer: LPCSTR; \u000A                            nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationA\".}"
  }, 
  {
    "name": "GetVolumeInformationW", 
    "type": "skProc", 
    "code": "proc GetVolumeInformationW*(lpRootPathName: LPWSTR; lpVolumeNameBuffer: LPWSTR; \u000A                            nVolumeNameSize: DWORD; \u000A                            lpVolumeSerialNumber: PDWORD; \u000A    lpMaximumComponentLength, lpFileSystemFlags: var DWORD; \u000A                            lpFileSystemNameBuffer: LPWSTR; \u000A                            nFileSystemNameSize: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetVolumeInformationW\".}"
  }, 
  {
    "name": "GetWindowExtEx", 
    "type": "skProc", 
    "code": "proc GetWindowExtEx*(DC: HDC; Size: var TSize): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWindowExtEx\".}"
  }, 
  {
    "name": "GetWindowOrgEx", 
    "type": "skProc", 
    "code": "proc GetWindowOrgEx*(DC: HDC; Point: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWindowOrgEx\".}"
  }, 
  {
    "name": "GetWindowRect", 
    "type": "skProc", 
    "code": "proc GetWindowRect*(wnd: HWND; lpRect: var TRect): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"GetWindowRect\".}"
  }, 
  {
    "name": "GetWorldTransform", 
    "type": "skProc", 
    "code": "proc GetWorldTransform*(DC: HDC; p2: var TXForm): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"GetWorldTransform\".}"
  }, 
  {
    "name": "GlobalMemoryStatus", 
    "type": "skProc", 
    "code": "proc GlobalMemoryStatus*(Buffer: var MEMORYSTATUS) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GlobalMemoryStatus\".}"
  }, 
  {
    "name": "HeapWalk", 
    "type": "skProc", 
    "code": "proc HeapWalk*(hHeap: THandle; lpEntry: var TProcessHeapEntry): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"HeapWalk\".}"
  }, 
  {
    "name": "ImageList_GetDragImage", 
    "type": "skProc", 
    "code": "proc ImageList_GetDragImage*(ppt: var POINT; pptHotspot: var POINT): HIMAGELIST {.\u000A    stdcall, dynlib: \"comctl32\", importc: \"ImageList_GetDragImage\".}"
  }, 
  {
    "name": "InflateRect", 
    "type": "skProc", 
    "code": "proc InflateRect*(lprc: var TRect; dx, dy: int): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"InflateRect\".}"
  }, 
  {
    "name": "InitializeAcl", 
    "type": "skProc", 
    "code": "proc InitializeAcl*(pAcl: var TACL; nAclLength, dwAclRevision: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"InitializeAcl\".}"
  }, 
  {
    "name": "InitializeSid", 
    "type": "skProc", 
    "code": "proc InitializeSid*(Sid: pointer; pIdentifierAuthority: TSIDIdentifierAuthority; \u000A                    nSubAuthorityCount: int8): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"InitializeSid\".}"
  }, 
  {
    "name": "InsertMenuItemA", 
    "type": "skProc", 
    "code": "proc InsertMenuItemA*(p1: HMENU; p2: WINUINT; p3: WINBOOL; p4: TMenuItemInfoA): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"InsertMenuItemA\".}"
  }, 
  {
    "name": "IntersectRect", 
    "type": "skProc", 
    "code": "proc IntersectRect*(lprcDst: var TRect; lprcSrc1, lprcSrc2: TRect): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"IntersectRect\".}"
  }, 
  {
    "name": "IsDialogMessage", 
    "type": "skProc", 
    "code": "proc IsDialogMessage*(hDlg: HWND; lpMsg: var TMsg): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageA\".}"
  }, 
  {
    "name": "IsDialogMessageA", 
    "type": "skProc", 
    "code": "proc IsDialogMessageA*(hDlg: HWND; lpMsg: var TMsg): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageA\".}"
  }, 
  {
    "name": "IsDialogMessageW", 
    "type": "skProc", 
    "code": "proc IsDialogMessageW*(hDlg: HWND; lpMsg: var TMsg): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"IsDialogMessageW\".}"
  }, 
  {
    "name": "IsValidAcl", 
    "type": "skProc", 
    "code": "proc IsValidAcl*(pAcl: TACL): WINBOOL {.stdcall, dynlib: \"advapi32\", \u000A                                        importc: \"IsValidAcl\".}"
  }, 
  {
    "name": "LocalFileTimeToFileTime", 
    "type": "skProc", 
    "code": "proc LocalFileTimeToFileTime*(lpLocalFileTime: TFileTime; \u000A                              lpFileTime: var TFileTime): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LocalFileTimeToFileTime\".}"
  }, 
  {
    "name": "LockFileEx", 
    "type": "skProc", 
    "code": "proc LockFileEx*(hFile: THandle; dwFlags, dwReserved: DWORD; \u000A                 nNumberOfBytesToLockLow, nNumberOfBytesToLockHigh: DWORD; \u000A                 lpOverlapped: TOverlapped): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"LockFileEx\".}"
  }, 
  {
    "name": "LogonUser", 
    "type": "skProc", 
    "code": "proc LogonUser*(lpszUsername, lpszDomain, lpszPassword: cstring; \u000A                dwLogonType, dwLogonProvider: DWORD; phToken: var THandle): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LogonUserA\".}"
  }, 
  {
    "name": "LogonUserA", 
    "type": "skProc", 
    "code": "proc LogonUserA*(lpszUsername, lpszDomain, lpszPassword: LPCSTR; \u000A                 dwLogonType, dwLogonProvider: DWORD; phToken: var THandle): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LogonUserA\".}"
  }, 
  {
    "name": "LogonUserW", 
    "type": "skProc", 
    "code": "proc LogonUserW*(lpszUsername, lpszDomain, lpszPassword: LPWSTR; \u000A                 dwLogonType, dwLogonProvider: DWORD; phToken: var THandle): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LogonUserW\".}"
  }, 
  {
    "name": "LookupAccountName", 
    "type": "skProc", 
    "code": "proc LookupAccountName*(lpSystemName, lpAccountName: cstring; Sid: PSID; \u000A                        cbSid: var DWORD; ReferencedDomainName: cstring; \u000A                        cbReferencedDomainName: var DWORD; \u000A                        peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountNameA\".}"
  }, 
  {
    "name": "LookupAccountNameA", 
    "type": "skProc", 
    "code": "proc LookupAccountNameA*(lpSystemName, lpAccountName: LPCSTR; Sid: PSID; \u000A                         cbSid: var DWORD; ReferencedDomainName: LPCSTR; \u000A                         cbReferencedDomainName: var DWORD; \u000A                         peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountNameA\".}"
  }, 
  {
    "name": "LookupAccountNameW", 
    "type": "skProc", 
    "code": "proc LookupAccountNameW*(lpSystemName, lpAccountName: LPWSTR; Sid: PSID; \u000A                         cbSid: var DWORD; ReferencedDomainName: LPWSTR; \u000A                         cbReferencedDomainName: var DWORD; \u000A                         peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountNameW\".}"
  }, 
  {
    "name": "LookupAccountSid", 
    "type": "skProc", 
    "code": "proc LookupAccountSid*(lpSystemName: cstring; Sid: PSID; Name: cstring; \u000A                       cbName: var DWORD; ReferencedDomainName: cstring; \u000A                       cbReferencedDomainName: var DWORD; \u000A                       peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountSidA\".}"
  }, 
  {
    "name": "LookupAccountSidA", 
    "type": "skProc", 
    "code": "proc LookupAccountSidA*(lpSystemName: LPCSTR; Sid: PSID; Name: LPCSTR; \u000A                        cbName: var DWORD; ReferencedDomainName: LPCSTR; \u000A                        cbReferencedDomainName: var DWORD; \u000A                        peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountSidA\".}"
  }, 
  {
    "name": "LookupAccountSidW", 
    "type": "skProc", 
    "code": "proc LookupAccountSidW*(lpSystemName: LPWSTR; Sid: PSID; Name: LPWSTR; \u000A                        cbName: var DWORD; ReferencedDomainName: LPWSTR; \u000A                        cbReferencedDomainName: var DWORD; \u000A                        peUse: var SID_NAME_USE): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupAccountSidW\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayName", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayName*(lpSystemName, lpName: LPCSTR; \u000A                                 lpDisplayName: cstring; \u000A                                 cbDisplayName, lpLanguageId: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayNameA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayNameA*(lpSystemName, lpName: LPCSTR; \u000A                                  lpDisplayName: LPCSTR; \u000A                                  cbDisplayName, lpLanguageId: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeDisplayNameW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeDisplayNameW*(lpSystemName, lpName: LPCSTR; \u000A                                  lpDisplayName: LPWSTR; \u000A                                  cbDisplayName, lpLanguageId: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeDisplayNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeName", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeName*(lpSystemName: cstring; lpLuid: var TLargeInteger; \u000A                          lpName: cstring; cbName: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeNameA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeNameA*(lpSystemName: LPCSTR; lpLuid: var TLargeInteger; \u000A                           lpName: LPCSTR; cbName: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeNameA\".}"
  }, 
  {
    "name": "LookupPrivilegeNameW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeNameW*(lpSystemName: LPWSTR; lpLuid: var TLargeInteger; \u000A                           lpName: LPWSTR; cbName: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"LookupPrivilegeNameW\".}"
  }, 
  {
    "name": "LookupPrivilegeValue", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValue*(lpSystemName, lpName: cstring; \u000A                           lpLuid: var TLargeInteger): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeValueA\".}"
  }, 
  {
    "name": "LookupPrivilegeValueA", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValueA*(lpSystemName, lpName: LPCSTR; \u000A                            lpLuid: var TLargeInteger): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeValueA\".}"
  }, 
  {
    "name": "LookupPrivilegeValueW", 
    "type": "skProc", 
    "code": "proc LookupPrivilegeValueW*(lpSystemName, lpName: LPWSTR; \u000A                            lpLuid: var TLargeInteger): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"LookupPrivilegeValueW\".}"
  }, 
  {
    "name": "LPtoDP", 
    "type": "skProc", 
    "code": "proc LPtoDP*(DC: HDC; Points: pointer; Count: int): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"LPtoDP\".}"
  }, 
  {
    "name": "MakeAbsoluteSD", 
    "type": "skProc", 
    "code": "proc MakeAbsoluteSD*(pSelfRelativeSecurityDescriptor: PSecurityDescriptor; \u000A                     pAbsoluteSecurityDescriptor: PSecurityDescriptor; \u000A                     lpdwAbsoluteSecurityDescriptorSi: var DWORD; \u000A                     pDacl: var TACL; lpdwDaclSize: var DWORD; pSacl: var TACL; \u000A                     lpdwSaclSize: var DWORD; pOwner: PSID; \u000A                     lpdwOwnerSize: var DWORD; pPrimaryGroup: pointer; \u000A                     lpdwPrimaryGroupSize: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"MakeAbsoluteSD\".}"
  }, 
  {
    "name": "MakeSelfRelativeSD", 
    "type": "skProc", 
    "code": "proc MakeSelfRelativeSD*(pAbsoluteSecurityDescriptor: PSecurityDescriptor; \u000A                         pSelfRelativeSecurityDescriptor: PSecurityDescriptor; \u000A                         lpdwBufferLength: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"MakeSelfRelativeSD\".}"
  }, 
  {
    "name": "MapDialogRect", 
    "type": "skProc", 
    "code": "proc MapDialogRect*(hDlg: HWND; lpRect: var TRect): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"MapDialogRect\".}"
  }, 
  {
    "name": "MapWindowPoints", 
    "type": "skProc", 
    "code": "proc MapWindowPoints*(hWndFrom, hWndTo: HWND; lpPoints: pointer; \u000A                      cPoints: WINUINT): int {.stdcall, dynlib: \"user32\", \u000A    importc: \"MapWindowPoints\".}"
  }, 
  {
    "name": "MessageBoxIndirect", 
    "type": "skProc", 
    "code": "proc MessageBoxIndirect*(MsgBoxParams: TMsgBoxParams): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxIndirectA\".}"
  }, 
  {
    "name": "MessageBoxIndirectA", 
    "type": "skProc", 
    "code": "proc MessageBoxIndirectA*(MsgBoxParams: TMsgBoxParamsA): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"MessageBoxIndirectA\".}"
  }, 
  {
    "name": "MsgWaitForMultipleObjects", 
    "type": "skProc", 
    "code": "proc MsgWaitForMultipleObjects*(nCount: DWORD; pHandles: pointer; \u000A                                fWaitAll: WINBOOL; \u000A                                dwMilliseconds, dwWakeMask: DWORD): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"MsgWaitForMultipleObjects\".}"
  }, 
  {
    "name": "MsgWaitForMultipleObjectsEx", 
    "type": "skProc", 
    "code": "proc MsgWaitForMultipleObjectsEx*(nCount: DWORD; pHandles: pointer; \u000A                                  dwMilliseconds, dwWakeMask, dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"user32\", importc: \"MsgWaitForMultipleObjectsEx\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarm", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarm*(SubsystemName: cstring; HandleId: pointer; \u000A                           ObjectTypeName: cstring; ObjectName: cstring; \u000A                           pSecurityDescriptor: PSecurityDescriptor; \u000A                           ClientToken: THandle; \u000A                           DesiredAccess, GrantedAccess: DWORD; \u000A                           Privileges: var TPrivilegeSet; \u000A                           ObjectCreation, AccessGranted: WINBOOL; \u000A                           GenerateOnClose: var WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarmA", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarmA*(SubsystemName: LPCSTR; HandleId: pointer; \u000A                            ObjectTypeName: LPCSTR; ObjectName: LPCSTR; \u000A                            pSecurityDescriptor: PSecurityDescriptor; \u000A                            ClientToken: THandle; \u000A                            DesiredAccess, GrantedAccess: DWORD; \u000A                            Privileges: var TPrivilegeSet; \u000A                            ObjectCreation, AccessGranted: WINBOOL; \u000A                            GenerateOnClose: var WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectOpenAuditAlarmW", 
    "type": "skProc", 
    "code": "proc ObjectOpenAuditAlarmW*(SubsystemName: LPWSTR; HandleId: pointer; \u000A                            ObjectTypeName: LPWSTR; ObjectName: LPWSTR; \u000A                            pSecurityDescriptor: PSecurityDescriptor; \u000A                            ClientToken: THandle; \u000A                            DesiredAccess, GrantedAccess: DWORD; \u000A                            Privileges: var TPrivilegeSet; \u000A                            ObjectCreation, AccessGranted: WINBOOL; \u000A                            GenerateOnClose: var WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectOpenAuditAlarmW\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarm", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarm*(SubsystemName: cstring; HandleId: pointer; \u000A                                ClientToken: THandle; DesiredAccess: DWORD; \u000A                                Privileges: var TPrivilegeSet; \u000A                                AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarmA", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarmA*(SubsystemName: LPCSTR; HandleId: pointer; \u000A                                 ClientToken: THandle; DesiredAccess: DWORD; \u000A                                 Privileges: var TPrivilegeSet; \u000A                                 AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmA\".}"
  }, 
  {
    "name": "ObjectPrivilegeAuditAlarmW", 
    "type": "skProc", 
    "code": "proc ObjectPrivilegeAuditAlarmW*(SubsystemName: LPWSTR; HandleId: pointer; \u000A                                 ClientToken: THandle; DesiredAccess: DWORD; \u000A                                 Privileges: var TPrivilegeSet; \u000A                                 AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"ObjectPrivilegeAuditAlarmW\".}"
  }, 
  {
    "name": "OffsetRect", 
    "type": "skProc", 
    "code": "proc OffsetRect*(lprc: var TRect; dx, dy: int): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OffsetRect\".}"
  }, 
  {
    "name": "OffsetViewportOrgEx", 
    "type": "skProc", 
    "code": "proc OffsetViewportOrgEx*(DC: HDC; X, Y: int; Points: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"OffsetViewportOrgEx\".}"
  }, 
  {
    "name": "OffsetWindowOrgEx", 
    "type": "skProc", 
    "code": "proc OffsetWindowOrgEx*(DC: HDC; X, Y: int; Points: pointer): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"OffsetWindowOrgEx\".}"
  }, 
  {
    "name": "OpenFile", 
    "type": "skProc", 
    "code": "proc OpenFile*(lpFileName: LPCSTR; lpReOpenBuff: var TOFStruct; uStyle: WINUINT): HFILE {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"OpenFile\".}"
  }, 
  {
    "name": "OpenProcessToken", 
    "type": "skProc", 
    "code": "proc OpenProcessToken*(ProcessHandle: THandle; DesiredAccess: DWORD; \u000A                       TokenHandle: var THandle): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"OpenProcessToken\".}"
  }, 
  {
    "name": "OpenThreadToken", 
    "type": "skProc", 
    "code": "proc OpenThreadToken*(ThreadHandle: THandle; DesiredAccess: DWORD; \u000A                      OpenAsSelf: WINBOOL; TokenHandle: var THandle): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"OpenThreadToken\".}"
  }, 
  {
    "name": "PeekConsoleInput", 
    "type": "skProc", 
    "code": "proc PeekConsoleInput*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                       nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputA\".}"
  }, 
  {
    "name": "PeekConsoleInputA", 
    "type": "skProc", 
    "code": "proc PeekConsoleInputA*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                        nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputA\".}"
  }, 
  {
    "name": "PeekConsoleInputW", 
    "type": "skProc", 
    "code": "proc PeekConsoleInputW*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                        nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"PeekConsoleInputW\".}"
  }, 
  {
    "name": "PeekMessage", 
    "type": "skProc", 
    "code": "proc PeekMessage*(lpMsg: var TMsg; wnd: HWND; \u000A                  wMsgFilterMin, wMsgFilterMax, wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageA\".}"
  }, 
  {
    "name": "PeekMessageA", 
    "type": "skProc", 
    "code": "proc PeekMessageA*(lpMsg: var TMsg; wnd: HWND; \u000A                   wMsgFilterMin, wMsgFilterMax, wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageA\".}"
  }, 
  {
    "name": "PeekMessageW", 
    "type": "skProc", 
    "code": "proc PeekMessageW*(lpMsg: var TMsg; wnd: HWND; \u000A                   wMsgFilterMin, wMsgFilterMax, wRemoveMsg: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"PeekMessageW\".}"
  }, 
  {
    "name": "PlayEnhMetaFileRecord", 
    "type": "skProc", 
    "code": "proc PlayEnhMetaFileRecord*(DC: HDC; p2: var THandleTable; p3: TEnhMetaRecord; \u000A                            p4: WINUINT): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"PlayEnhMetaFileRecord\".}"
  }, 
  {
    "name": "PlayMetaFileRecord", 
    "type": "skProc", 
    "code": "proc PlayMetaFileRecord*(DC: HDC; p2: THandleTable; p3: TMetaRecord; p4: WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PlayMetaFileRecord\".}"
  }, 
  {
    "name": "PlgBlt", 
    "type": "skProc", 
    "code": "proc PlgBlt*(DC: HDC; PointsArray: pointer; p3: HDC; p4, p5, p6, p7: int; \u000A             p8: HBITMAP; p9, p10: int): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"PlgBlt\".}"
  }, 
  {
    "name": "PolyBezier", 
    "type": "skProc", 
    "code": "proc PolyBezier*(DC: HDC; Points: pointer; Count: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolyBezier\".}"
  }, 
  {
    "name": "PolyBezierTo", 
    "type": "skProc", 
    "code": "proc PolyBezierTo*(DC: HDC; Points: pointer; Count: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolyBezierTo\".}"
  }, 
  {
    "name": "PolyDraw", 
    "type": "skProc", 
    "code": "proc PolyDraw*(DC: HDC; Points, Types: pointer; cCount: int): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolyDraw\".}"
  }, 
  {
    "name": "Polygon", 
    "type": "skProc", 
    "code": "proc Polygon*(DC: HDC; Points: pointer; Count: int): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"Polygon\".}"
  }, 
  {
    "name": "Polyline", 
    "type": "skProc", 
    "code": "proc Polyline*(DC: HDC; Points: pointer; Count: int): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"Polyline\".}"
  }, 
  {
    "name": "PolyLineTo", 
    "type": "skProc", 
    "code": "proc PolyLineTo*(DC: HDC; Points: pointer; Count: DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"PolylineTo\".}"
  }, 
  {
    "name": "PolyPolygon", 
    "type": "skProc", 
    "code": "proc PolyPolygon*(DC: HDC; Points: pointer; nPoints: pointer; p4: int): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyPolygon\".}"
  }, 
  {
    "name": "PolyPolyline", 
    "type": "skProc", 
    "code": "proc PolyPolyline*(DC: HDC; PointStructs: pointer; Points: pointer; p4: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyPolyline\".}"
  }, 
  {
    "name": "PolyTextOut", 
    "type": "skProc", 
    "code": "proc PolyTextOut*(DC: HDC; PolyTextArray: pointer; Strings: int): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutA\".}"
  }, 
  {
    "name": "PolyTextOutA", 
    "type": "skProc", 
    "code": "proc PolyTextOutA*(DC: HDC; PolyTextArray: pointer; Strings: int): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutA\".}"
  }, 
  {
    "name": "PolyTextOutW", 
    "type": "skProc", 
    "code": "proc PolyTextOutW*(DC: HDC; PolyTextArray: pointer; Strings: int): WINBOOL {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"PolyTextOutW\".}"
  }, 
  {
    "name": "PrivilegeCheck", 
    "type": "skProc", 
    "code": "proc PrivilegeCheck*(ClientToken: THandle; RequiredPrivileges: TPrivilegeSet; \u000A                     pfResult: var WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegeCheck\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarm", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarm*(SubsystemName, ServiceName: cstring; \u000A                                  ClientToken: THandle; \u000A                                  Privileges: var TPrivilegeSet; \u000A                                  AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmA\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarmA", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarmA*(SubsystemName, ServiceName: LPCSTR; \u000A                                   ClientToken: THandle; \u000A                                   Privileges: var TPrivilegeSet; \u000A                                   AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmA\".}"
  }, 
  {
    "name": "PrivilegedServiceAuditAlarmW", 
    "type": "skProc", 
    "code": "proc PrivilegedServiceAuditAlarmW*(SubsystemName, ServiceName: LPWSTR; \u000A                                   ClientToken: THandle; \u000A                                   Privileges: var TPrivilegeSet; \u000A                                   AccessGranted: WINBOOL): WINBOOL {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"PrivilegedServiceAuditAlarmW\".}"
  }, 
  {
    "name": "QueryPerformanceCounter", 
    "type": "skProc", 
    "code": "proc QueryPerformanceCounter*(lpPerformanceCount: var TLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"QueryPerformanceCounter\".}"
  }, 
  {
    "name": "QueryPerformanceFrequency", 
    "type": "skProc", 
    "code": "proc QueryPerformanceFrequency*(lpFrequency: var TLargeInteger): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"QueryPerformanceFrequency\".}"
  }, 
  {
    "name": "RaiseException", 
    "type": "skProc", 
    "code": "proc RaiseException*(dwExceptionCode: DWORD; dwExceptionFlags: DWORD; \u000A                     nNumberOfArguments: DWORD; lpArguments: var DWORD) {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"RaiseException\".}"
  }, 
  {
    "name": "UnhandledExceptionFilter", 
    "type": "skProc", 
    "code": "proc UnhandledExceptionFilter*(ExceptionInfo: var emptyrecord): LONG {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"UnhandledExceptionFilter\".}"
  }, 
  {
    "name": "ReadConsole", 
    "type": "skProc", 
    "code": "proc ReadConsole*(hConsoleInput: THandle; lpBuffer: pointer; \u000A                  nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: var DWORD; \u000A                  lpReserved: pointer): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleA\".}"
  }, 
  {
    "name": "ReadConsoleA", 
    "type": "skProc", 
    "code": "proc ReadConsoleA*(hConsoleInput: THandle; lpBuffer: pointer; \u000A                   nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: var DWORD; \u000A                   lpReserved: pointer): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleA\".}"
  }, 
  {
    "name": "ReadConsoleInput", 
    "type": "skProc", 
    "code": "proc ReadConsoleInput*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                       nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputA\".}"
  }, 
  {
    "name": "ReadConsoleInputA", 
    "type": "skProc", 
    "code": "proc ReadConsoleInputA*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                        nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputA\".}"
  }, 
  {
    "name": "ReadConsoleInputW", 
    "type": "skProc", 
    "code": "proc ReadConsoleInputW*(hConsoleInput: THandle; lpBuffer: var TInputRecord; \u000A                        nLength: DWORD; lpNumberOfEventsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleInputW\".}"
  }, 
  {
    "name": "ReadConsoleOutput", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutput*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                        dwBufferSize, dwBufferCoord: TCoord; \u000A                        lpReadRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputA\".}"
  }, 
  {
    "name": "ReadConsoleOutputA", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputA*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                         dwBufferSize, dwBufferCoord: TCoord; \u000A                         lpReadRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputA\".}"
  }, 
  {
    "name": "ReadConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputAttribute*(hConsoleOutput: THandle; lpAttribute: pointer; \u000A                                 nLength: DWORD; dwReadCoord: TCoord; \u000A                                 lpNumberOfAttrsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputAttribute\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacter*(hConsoleOutput: THandle; lpCharacter: LPCSTR; \u000A                                 nLength: DWORD; dwReadCoord: TCoord; \u000A                                 lpNumberOfCharsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacterA*(hConsoleOutput: THandle; lpCharacter: LPCSTR; \u000A                                  nLength: DWORD; dwReadCoord: TCoord; \u000A                                  lpNumberOfCharsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "ReadConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputCharacterW*(hConsoleOutput: THandle; lpCharacter: LPCSTR; \u000A                                  nLength: DWORD; dwReadCoord: TCoord; \u000A                                  lpNumberOfCharsRead: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "ReadConsoleOutputW", 
    "type": "skProc", 
    "code": "proc ReadConsoleOutputW*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                         dwBufferSize, dwBufferCoord: TCoord; \u000A                         lpReadRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadConsoleOutputW\".}"
  }, 
  {
    "name": "ReadConsoleW", 
    "type": "skProc", 
    "code": "proc ReadConsoleW*(hConsoleInput: THandle; lpBuffer: pointer; \u000A                   nNumberOfCharsToRead: DWORD; lpNumberOfCharsRead: var DWORD; \u000A                   lpReserved: pointer): WINBOOL {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"ReadConsoleW\".}"
  }, 
  {
    "name": "ReadEventLog", 
    "type": "skProc", 
    "code": "proc ReadEventLog*(hEventLog: THandle; dwReadFlags, dwRecordOffset: DWORD; \u000A                   lpBuffer: pointer; nNumberOfBytesToRead: DWORD; \u000A                   pnBytesRead, pnMinNumberOfBytesNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReadEventLogA\".}"
  }, 
  {
    "name": "ReadEventLogA", 
    "type": "skProc", 
    "code": "proc ReadEventLogA*(hEventLog: THandle; dwReadFlags, dwRecordOffset: DWORD; \u000A                    lpBuffer: pointer; nNumberOfBytesToRead: DWORD; \u000A                    pnBytesRead, pnMinNumberOfBytesNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReadEventLogA\".}"
  }, 
  {
    "name": "ReadEventLogW", 
    "type": "skProc", 
    "code": "proc ReadEventLogW*(hEventLog: THandle; dwReadFlags, dwRecordOffset: DWORD; \u000A                    lpBuffer: pointer; nNumberOfBytesToRead: DWORD; \u000A                    pnBytesRead, pnMinNumberOfBytesNeeded: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"ReadEventLogW\".}"
  }, 
  {
    "name": "ReadFile", 
    "type": "skProc", 
    "code": "proc ReadFile*(hFile: THandle; Buffer: pointer; nNumberOfBytesToRead: DWORD; \u000A               lpNumberOfBytesRead: var DWORD; lpOverlapped: POverlapped): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"ReadFile\".}"
  }, 
  {
    "name": "ReadProcessMemory", 
    "type": "skProc", 
    "code": "proc ReadProcessMemory*(hProcess: THandle; lpBaseAddress: pointer; \u000A                        lpBuffer: pointer; nSize: DWORD; \u000A                        lpNumberOfBytesRead: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ReadProcessMemory\".}"
  }, 
  {
    "name": "RegConnectRegistry", 
    "type": "skProc", 
    "code": "proc RegConnectRegistry*(lpMachineName: cstring; key: HKEY; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryA\".}"
  }, 
  {
    "name": "RegConnectRegistryA", 
    "type": "skProc", 
    "code": "proc RegConnectRegistryA*(lpMachineName: LPCSTR; key: HKEY; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryA\".}"
  }, 
  {
    "name": "RegConnectRegistryW", 
    "type": "skProc", 
    "code": "proc RegConnectRegistryW*(lpMachineName: LPWSTR; key: HKEY; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegConnectRegistryW\".}"
  }, 
  {
    "name": "RegCreateKey", 
    "type": "skProc", 
    "code": "proc RegCreateKey*(key: HKEY; lpSubKey: cstring; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyA\".}"
  }, 
  {
    "name": "RegCreateKeyA", 
    "type": "skProc", 
    "code": "proc RegCreateKeyA*(key: HKEY; lpSubKey: LPCSTR; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyA\".}"
  }, 
  {
    "name": "RegCreateKeyEx", 
    "type": "skProc", 
    "code": "proc RegCreateKeyEx*(key: HKEY; lpSubKey: cstring; Reserved: DWORD; \u000A                     lpClass: cstring; dwOptions: DWORD; samDesired: REGSAM; \u000A                     lpSecurityAttributes: PSecurityAttributes; \u000A                     phkResult: var HKEY; lpdwDisposition: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExA\".}"
  }, 
  {
    "name": "RegCreateKeyExA", 
    "type": "skProc", 
    "code": "proc RegCreateKeyExA*(key: HKEY; lpSubKey: LPCSTR; Reserved: DWORD; \u000A                      lpClass: LPCSTR; dwOptions: DWORD; samDesired: REGSAM; \u000A                      lpSecurityAttributes: PSecurityAttributes; \u000A                      phkResult: var HKEY; lpdwDisposition: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExA\".}"
  }, 
  {
    "name": "RegCreateKeyExW", 
    "type": "skProc", 
    "code": "proc RegCreateKeyExW*(key: HKEY; lpSubKey: LPWSTR; Reserved: DWORD; \u000A                      lpClass: LPWSTR; dwOptions: DWORD; samDesired: REGSAM; \u000A                      lpSecurityAttributes: PSecurityAttributes; \u000A                      phkResult: var HKEY; lpdwDisposition: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyExW\".}"
  }, 
  {
    "name": "RegCreateKeyW", 
    "type": "skProc", 
    "code": "proc RegCreateKeyW*(key: HKEY; lpSubKey: LPWSTR; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegCreateKeyW\".}"
  }, 
  {
    "name": "RegEnumKeyEx", 
    "type": "skProc", 
    "code": "proc RegEnumKeyEx*(key: HKEY; dwIndex: DWORD; lpName: cstring; \u000A                   lpcbName: var DWORD; lpReserved: pointer; lpClass: cstring; \u000A                   lpcbClass: PDWORD; lpftLastWriteTime: PFileTime): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyExA\".}"
  }, 
  {
    "name": "RegEnumKeyExA", 
    "type": "skProc", 
    "code": "proc RegEnumKeyExA*(key: HKEY; dwIndex: DWORD; lpName: LPCSTR; \u000A                    lpcbName: var DWORD; lpReserved: pointer; lpClass: LPCSTR; \u000A                    lpcbClass: PDWORD; lpftLastWriteTime: PFileTime): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyExA\".}"
  }, 
  {
    "name": "RegEnumKeyExW", 
    "type": "skProc", 
    "code": "proc RegEnumKeyExW*(key: HKEY; dwIndex: DWORD; lpName: LPWSTR; \u000A                    lpcbName: var DWORD; lpReserved: pointer; lpClass: LPWSTR; \u000A                    lpcbClass: PDWORD; lpftLastWriteTime: PFileTime): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumKeyExW\".}"
  }, 
  {
    "name": "RegEnumValue", 
    "type": "skProc", 
    "code": "proc RegEnumValue*(key: HKEY; dwIndex: DWORD; lpValueName: cstring; \u000A                   lpcbValueName: var DWORD; lpReserved: pointer; \u000A                   lpType: PDWORD; lpData: PByte; lpcbData: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumValueA\".}"
  }, 
  {
    "name": "RegEnumValueA", 
    "type": "skProc", 
    "code": "proc RegEnumValueA*(key: HKEY; dwIndex: DWORD; lpValueName: cstring; \u000A                    lpcbValueName: var DWORD; lpReserved: pointer; \u000A                    lpType: PDWORD; lpData: PByte; lpcbData: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumValueA\".}"
  }, 
  {
    "name": "RegEnumValueW", 
    "type": "skProc", 
    "code": "proc RegEnumValueW*(key: HKEY; dwIndex: DWORD; lpValueName: cstring; \u000A                    lpcbValueName: var DWORD; lpReserved: pointer; \u000A                    lpType: PDWORD; lpData: PByte; lpcbData: PDWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegEnumValueW\".}"
  }, 
  {
    "name": "RegGetKeySecurity", 
    "type": "skProc", 
    "code": "proc RegGetKeySecurity*(key: HKEY; SecurityInformation: SECURITY_INFORMATION; \u000A                        pSecurityDescriptor: PSecurityDescriptor; \u000A                        lpcbSecurityDescriptor: var DWORD): int32 {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegGetKeySecurity\".}"
  }, 
  {
    "name": "RegSetValueEx", 
    "type": "skProc", 
    "code": "proc RegSetValueEx*(key: HKEY; lpValueName: LPCSTR; Reserved: DWORD; \u000A                    dwType: DWORD; lpData: pointer; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExA\".}"
  }, 
  {
    "name": "RegSetValueExA", 
    "type": "skProc", 
    "code": "proc RegSetValueExA*(key: HKEY; lpValueName: LPCSTR; Reserved: DWORD; \u000A                     dwType: DWORD; lpData: pointer; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExA\".}"
  }, 
  {
    "name": "RegSetValueExW", 
    "type": "skProc", 
    "code": "proc RegSetValueExW*(key: HKEY; lpValueName: LPCWSTR; Reserved: DWORD; \u000A                     dwType: DWORD; lpData: pointer; cbData: DWORD): LONG {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegSetValueExW\".}"
  }, 
  {
    "name": "RegisterClass", 
    "type": "skProc", 
    "code": "proc RegisterClass*(lpWndClass: TWndClass): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassA\".}"
  }, 
  {
    "name": "RegisterClassA", 
    "type": "skProc", 
    "code": "proc RegisterClassA*(lpWndClass: TWndClassA): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassA\".}"
  }, 
  {
    "name": "RegisterClassEx", 
    "type": "skProc", 
    "code": "proc RegisterClassEx*(WndClass: TWndClassEx): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassExA\".}"
  }, 
  {
    "name": "RegisterClassExA", 
    "type": "skProc", 
    "code": "proc RegisterClassExA*(WndClass: TWndClassExA): ATOM {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterClassExA\".}"
  }, 
  {
    "name": "RegisterClassExW", 
    "type": "skProc", 
    "code": "proc RegisterClassExW*(WndClass: TWndClassExW): ATOM {.stdcall, \u000A    dynlib: \"user32\", importc: \"RegisterClassExW\".}"
  }, 
  {
    "name": "RegisterClassW", 
    "type": "skProc", 
    "code": "proc RegisterClassW*(lpWndClass: TWndClassW): ATOM {.stdcall, dynlib: \"user32\", \u000A    importc: \"RegisterClassW\".}"
  }, 
  {
    "name": "RegOpenKey", 
    "type": "skProc", 
    "code": "proc RegOpenKey*(key: HKEY; lpSubKey: cstring; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyA\".}"
  }, 
  {
    "name": "RegOpenKeyA", 
    "type": "skProc", 
    "code": "proc RegOpenKeyA*(key: HKEY; lpSubKey: LPCSTR; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyA\".}"
  }, 
  {
    "name": "RegOpenKeyEx", 
    "type": "skProc", 
    "code": "proc RegOpenKeyEx*(key: HKEY; lpSubKey: cstring; ulOptions: DWORD; \u000A                   samDesired: REGSAM; phkResult: var HKEY): int32 {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExA\".}"
  }, 
  {
    "name": "RegOpenKeyExA", 
    "type": "skProc", 
    "code": "proc RegOpenKeyExA*(key: HKEY; lpSubKey: LPCSTR; ulOptions: DWORD; \u000A                    samDesired: REGSAM; phkResult: var HKEY): int32 {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExA\".}"
  }, 
  {
    "name": "RegOpenKeyExW", 
    "type": "skProc", 
    "code": "proc RegOpenKeyExW*(key: HKEY; lpSubKey: LPWSTR; ulOptions: DWORD; \u000A                    samDesired: REGSAM; phkResult: var HKEY): int32 {.stdcall, \u000A    dynlib: \"advapi32\", importc: \"RegOpenKeyExW\".}"
  }, 
  {
    "name": "RegOpenKeyW", 
    "type": "skProc", 
    "code": "proc RegOpenKeyW*(key: HKEY; lpSubKey: LPWSTR; phkResult: var HKEY): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegOpenKeyW\".}"
  }, 
  {
    "name": "RegQueryMultipleValues", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValues*(key: HKEY; ValList: pointer; NumVals: DWORD; \u000A                             lpValueBuf: cstring; ldwTotsize: var DWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesA\".}"
  }, 
  {
    "name": "RegQueryMultipleValuesA", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValuesA*(key: HKEY; ValList: pointer; NumVals: DWORD; \u000A                              lpValueBuf: LPCSTR; ldwTotsize: var DWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesA\".}"
  }, 
  {
    "name": "RegQueryMultipleValuesW", 
    "type": "skProc", 
    "code": "proc RegQueryMultipleValuesW*(key: HKEY; ValList: pointer; NumVals: DWORD; \u000A                              lpValueBuf: LPWSTR; ldwTotsize: var DWORD): int32 {.\u000A    stdcall, dynlib: \"advapi32\", importc: \"RegQueryMultipleValuesW\".}"
  }, 
  {
    "name": "RegQueryValue", 
    "type": "skProc", 
    "code": "proc RegQueryValue*(key: HKEY; lpSubKey: cstring; lpValue: cstring; \u000A                    lpcbValue: var int32): int32 {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueA\".}"
  }, 
  {
    "name": "RegQueryValueA", 
    "type": "skProc", 
    "code": "proc RegQueryValueA*(key: HKEY; lpSubKey: LPCSTR; lpValue: LPCSTR; \u000A                     lpcbValue: var int32): int32 {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueA\".}"
  }, 
  {
    "name": "RegQueryValueW", 
    "type": "skProc", 
    "code": "proc RegQueryValueW*(key: HKEY; lpSubKey: LPWSTR; lpValue: LPWSTR; \u000A                     lpcbValue: var int32): int32 {.stdcall, dynlib: \"advapi32\", \u000A    importc: \"RegQueryValueW\".}"
  }, 
  {
    "name": "ResetDC", 
    "type": "skProc", 
    "code": "proc ResetDC*(DC: HDC; p2: TDeviceMode): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ResetDCA\".}"
  }, 
  {
    "name": "ResetDCA", 
    "type": "skProc", 
    "code": "proc ResetDCA*(DC: HDC; p2: TDeviceModeA): HDC {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"ResetDCA\".}"
  }, 
  {
    "name": "ScreenToClient", 
    "type": "skProc", 
    "code": "proc ScreenToClient*(wnd: HWND; lpPoint: var TPoint): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"ScreenToClient\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBuffer", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBuffer*(hConsoleOutput: THandle; \u000A                                lpScrollRectangle: TSmallRect; \u000A                                lpClipRectangle: TSmallRect; \u000A                                dwDestinationOrigin: TCoord; \u000A                                lpFill: var TCharInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferA\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBufferA", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBufferA*(hConsoleOutput: THandle; \u000A                                 lpScrollRectangle: TSmallRect; \u000A                                 lpClipRectangle: TSmallRect; \u000A                                 dwDestinationOrigin: TCoord; \u000A                                 lpFill: var TCharInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferA\".}"
  }, 
  {
    "name": "ScrollConsoleScreenBufferW", 
    "type": "skProc", 
    "code": "proc ScrollConsoleScreenBufferW*(hConsoleOutput: THandle; \u000A                                 lpScrollRectangle: TSmallRect; \u000A                                 lpClipRectangle: TSmallRect; \u000A                                 dwDestinationOrigin: TCoord; \u000A                                 lpFill: var TCharInfo): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"ScrollConsoleScreenBufferW\".}"
  }, 
  {
    "name": "ScrollWindow", 
    "type": "skProc", 
    "code": "proc ScrollWindow*(wnd: HWND; XAmount: int32; YAmount: int32; rect: LPRECT; \u000A                   lpClipRect: LPRECT): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"ScrollWindow\".}"
  }, 
  {
    "name": "ScrollWindowEx", 
    "type": "skProc", 
    "code": "proc ScrollWindowEx*(wnd: HWND; dx: int32; dy: int32; prcScroll: LPRECT; \u000A                     prcClip: LPRECT; hrgnUpdate: HRGN; prcUpdate: LPRECT; \u000A                     flags: WINUINT): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"ScrollWindowEx\".}"
  }, 
  {
    "name": "SendMessageTimeout", 
    "type": "skProc", 
    "code": "proc SendMessageTimeout*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                         fuFlags, uTimeout: WINUINT; lpdwResult: var DWORD): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageTimeoutA\".}"
  }, 
  {
    "name": "SendMessageTimeoutA", 
    "type": "skProc", 
    "code": "proc SendMessageTimeoutA*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                          fuFlags, uTimeout: WINUINT; lpdwResult: var DWORD): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageTimeoutA\".}"
  }, 
  {
    "name": "SendMessageTimeoutW", 
    "type": "skProc", 
    "code": "proc SendMessageTimeoutW*(wnd: HWND; Msg: WINUINT; wp: WPARAM; lp: LPARAM; \u000A                          fuFlags, uTimeout: WINUINT; lpdwResult: var DWORD): LRESULT {.\u000A    stdcall, dynlib: \"user32\", importc: \"SendMessageTimeoutW\".}"
  }, 
  {
    "name": "SetCommConfig", 
    "type": "skProc", 
    "code": "proc SetCommConfig*(hCommDev: THandle; lpCC: TCommConfig; dwSize: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetCommConfig\".}"
  }, 
  {
    "name": "SetCommState", 
    "type": "skProc", 
    "code": "proc SetCommState*(hFile: THandle; lpDCB: TDCB): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetCommState\".}"
  }, 
  {
    "name": "SetCommTimeouts", 
    "type": "skProc", 
    "code": "proc SetCommTimeouts*(hFile: THandle; lpCommTimeouts: TCommTimeouts): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetCommTimeouts\".}"
  }, 
  {
    "name": "SetConsoleCursorInfo", 
    "type": "skProc", 
    "code": "proc SetConsoleCursorInfo*(hConsoleOutput: THandle; \u000A                           lpConsoleCursorInfo: TConsoleCursorInfo): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetConsoleCursorInfo\".}"
  }, 
  {
    "name": "SetDIBColorTable", 
    "type": "skProc", 
    "code": "proc SetDIBColorTable*(DC: HDC; p2, p3: WINUINT; RGBQuadSTructs: pointer): WINUINT {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetDIBColorTable\".}"
  }, 
  {
    "name": "SetDIBits", 
    "type": "skProc", 
    "code": "proc SetDIBits*(DC: HDC; Bitmap: HBITMAP; StartScan, NumScans: WINUINT; \u000A                Bits: pointer; BitsInfo: var TBitmapInfo; Usage: WINUINT): int {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetDIBits\".}"
  }, 
  {
    "name": "SetEnhMetaFileBits", 
    "type": "skProc", 
    "code": "proc SetEnhMetaFileBits*(para1: WINUINT; para2: pointer): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetEnhMetaFileBits\".}"
  }, 
  {
    "name": "SetFileTime", 
    "type": "skProc", 
    "code": "proc SetFileTime*(hFile: HANDLE; lpCreationTime: var FILETIME; \u000A                  lpLastAccessTime: var FILETIME; lpLastWriteTime: var FILETIME): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetFileTime\".}"
  }, 
  {
    "name": "SetMenuItemInfo", 
    "type": "skProc", 
    "code": "proc SetMenuItemInfo*(p1: HMENU; p2: WINUINT; p3: WINBOOL; p4: TMenuItemInfo): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetMenuItemInfoA\".}"
  }, 
  {
    "name": "SetMenuItemInfoA", 
    "type": "skProc", 
    "code": "proc SetMenuItemInfoA*(p1: HMENU; p2: WINUINT; p3: WINBOOL; p4: TMenuItemInfoA): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetMenuItemInfoA\".}"
  }, 
  {
    "name": "SetMetaFileBitsEx", 
    "type": "skProc", 
    "code": "proc SetMetaFileBitsEx*(p1: WINUINT; p2: cstring): HMETAFILE {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetMetaFileBitsEx\".}"
  }, 
  {
    "name": "SetNamedPipeHandleState", 
    "type": "skProc", 
    "code": "proc SetNamedPipeHandleState*(hNamedPipe: THandle; lpMode: var DWORD; \u000A    lpMaxCollectionCount, lpCollectDataTimeout: pointer): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SetNamedPipeHandleState\".}"
  }, 
  {
    "name": "SetPaletteEntries", 
    "type": "skProc", 
    "code": "proc SetPaletteEntries*(Palette: HPALETTE; StartIndex, NumEntries: WINUINT; \u000A                        PaletteEntries: pointer): WINUINT {.stdcall, \u000A    dynlib: \"gdi32\", importc: \"SetPaletteEntries\".}"
  }, 
  {
    "name": "SetRect", 
    "type": "skProc", 
    "code": "proc SetRect*(lprc: var TRect; xLeft, yTop, xRight, yBottom: int): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetRect\".}"
  }, 
  {
    "name": "SetRectEmpty", 
    "type": "skProc", 
    "code": "proc SetRectEmpty*(lprc: var TRect): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetRectEmpty\".}"
  }, 
  {
    "name": "SetScrollInfo", 
    "type": "skProc", 
    "code": "proc SetScrollInfo*(wnd: HWND; BarFlag: int; ScrollInfo: TScrollInfo; \u000A                    Redraw: WINBOOL): int {.stdcall, dynlib: \"user32\", \u000A    importc: \"SetScrollInfo\".}"
  }, 
  {
    "name": "SetSysColors", 
    "type": "skProc", 
    "code": "proc SetSysColors*(cElements: int; lpaElements: pointer; lpaRgbValues: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SetSysColors\".}"
  }, 
  {
    "name": "SetThreadContext", 
    "type": "skProc", 
    "code": "proc SetThreadContext*(hThread: THandle; lpContext: TContext): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetThreadContext\".}"
  }, 
  {
    "name": "SetUserObjectSecurity", 
    "type": "skProc", 
    "code": "proc SetUserObjectSecurity*(hObj: THandle; pSIRequested: var DWORD; \u000A                            pSID: PSecurityDescriptor): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"SetUserObjectSecurity\".}"
  }, 
  {
    "name": "SetWaitableTimer", 
    "type": "skProc", 
    "code": "proc SetWaitableTimer*(hTimer: THandle; lpDueTime: var TLargeInteger; \u000A                       lPeriod: int32; pfnCompletionRoutine: TFNTimerAPCRoutine; \u000A                       lpArgToCompletionRoutine: pointer; fResume: WINBOOL): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SetWaitableTimer\".}"
  }, 
  {
    "name": "SetWinMetaFileBits", 
    "type": "skProc", 
    "code": "proc SetWinMetaFileBits*(p1: WINUINT; p2: cstring; p3: HDC; p4: TMetaFilePict): HENHMETAFILE {.\u000A    stdcall, dynlib: \"gdi32\", importc: \"SetWinMetaFileBits\".}"
  }, 
  {
    "name": "StartDoc", 
    "type": "skProc", 
    "code": "proc StartDoc*(DC: HDC; p2: TDocInfo): int {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StartDocA\".}"
  }, 
  {
    "name": "StartDocA", 
    "type": "skProc", 
    "code": "proc StartDocA*(DC: HDC; p2: TDocInfoA): int {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"StartDocA\".}"
  }, 
  {
    "name": "SubtractRect", 
    "type": "skProc", 
    "code": "proc SubtractRect*(lprcDst: var TRect; lprcSrc1, lprcSrc2: TRect): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"SubtractRect\".}"
  }, 
  {
    "name": "SystemTimeToFileTime", 
    "type": "skProc", 
    "code": "proc SystemTimeToFileTime*(lpSystemTime: TSystemTime; lpFileTime: var TFileTime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"SystemTimeToFileTime\".}"
  }, 
  {
    "name": "SystemTimeToTzSpecificLocalTime", 
    "type": "skProc", 
    "code": "proc SystemTimeToTzSpecificLocalTime*(lpTimeZoneInformation: PTimeZoneInformation; \u000A    lpUniversalTime, lpLocalTime: var TSystemTime): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"SystemTimeToTzSpecificLocalTime\".}"
  }, 
  {
    "name": "TabbedTextOut", 
    "type": "skProc", 
    "code": "proc TabbedTextOut*(hDC: HDC; X, Y: int; lpString: cstring; \u000A                    nCount, nTabPositions: int; lpnTabStopPositions: pointer; \u000A                    nTabOrigin: int): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"TabbedTextOutA\".}"
  }, 
  {
    "name": "TabbedTextOutA", 
    "type": "skProc", 
    "code": "proc TabbedTextOutA*(hDC: HDC; X, Y: int; lpString: LPCSTR; \u000A                     nCount, nTabPositions: int; lpnTabStopPositions: pointer; \u000A                     nTabOrigin: int): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"TabbedTextOutA\".}"
  }, 
  {
    "name": "TabbedTextOutW", 
    "type": "skProc", 
    "code": "proc TabbedTextOutW*(hDC: HDC; X, Y: int; lpString: LPWSTR; \u000A                     nCount, nTabPositions: int; lpnTabStopPositions: pointer; \u000A                     nTabOrigin: int): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"TabbedTextOutW\".}"
  }, 
  {
    "name": "TrackMouseEvent", 
    "type": "skProc", 
    "code": "proc TrackMouseEvent*(EventTrack: var TTrackMouseEvent): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"TrackMouseEvent\".}"
  }, 
  {
    "name": "TrackMouseEvent", 
    "type": "skProc", 
    "code": "proc TrackMouseEvent*(lpEventTrack: PTrackMouseEvent): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"TrackMouseEvent\".}"
  }, 
  {
    "name": "TrackPopupMenu", 
    "type": "skProc", 
    "code": "proc TrackPopupMenu*(menu: HMENU; uFlags: WINUINT; x: int32; y: int32; \u000A                     nReserved: int32; wnd: HWND; prcRect: PRect): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"TrackPopupMenu\".}"
  }, 
  {
    "name": "TransactNamedPipe", 
    "type": "skProc", 
    "code": "proc TransactNamedPipe*(hNamedPipe: THandle; lpInBuffer: pointer; \u000A                        nInBufferSize: DWORD; lpOutBuffer: pointer; \u000A                        nOutBufferSize: DWORD; lpBytesRead: var DWORD; \u000A                        lpOverlapped: POverlapped): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"TransactNamedPipe\".}"
  }, 
  {
    "name": "TranslateAccelerator", 
    "type": "skProc", 
    "code": "proc TranslateAccelerator*(wnd: HWND; hAccTable: HACCEL; lpMsg: var TMsg): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorA\".}"
  }, 
  {
    "name": "TranslateAcceleratorA", 
    "type": "skProc", 
    "code": "proc TranslateAcceleratorA*(wnd: HWND; hAccTable: HACCEL; lpMsg: var TMsg): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorA\".}"
  }, 
  {
    "name": "TranslateAcceleratorW", 
    "type": "skProc", 
    "code": "proc TranslateAcceleratorW*(wnd: HWND; hAccTable: HACCEL; lpMsg: var TMsg): int {.\u000A    stdcall, dynlib: \"user32\", importc: \"TranslateAcceleratorW\".}"
  }, 
  {
    "name": "TranslateCharsetInfo", 
    "type": "skProc", 
    "code": "proc TranslateCharsetInfo*(lpSrc: var DWORD; lpCs: var TCharsetInfo; \u000A                           dwFlags: DWORD): WINBOOL {.stdcall, dynlib: \"gdi32\", \u000A    importc: \"TranslateCharsetInfo\".}"
  }, 
  {
    "name": "TranslateMDISysAccel", 
    "type": "skProc", 
    "code": "proc TranslateMDISysAccel*(hWndClient: HWND; lpMsg: TMsg): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"TranslateMDISysAccel\".}"
  }, 
  {
    "name": "TranslateMessage", 
    "type": "skProc", 
    "code": "proc TranslateMessage*(lpMsg: TMsg): WINBOOL {.stdcall, dynlib: \"user32\", \u000A    importc: \"TranslateMessage\".}"
  }, 
  {
    "name": "UnhandledExceptionFilter", 
    "type": "skProc", 
    "code": "proc UnhandledExceptionFilter*(ExceptionInfo: TExceptionpointers): int32 {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UnhandledExceptionFilter\".}"
  }, 
  {
    "name": "UnionRect", 
    "type": "skProc", 
    "code": "proc UnionRect*(lprcDst: var TRect; lprcSrc1, lprcSrc2: TRect): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"UnionRect\".}"
  }, 
  {
    "name": "UnlockFileEx", 
    "type": "skProc", 
    "code": "proc UnlockFileEx*(hFile: THandle; dwReserved, nNumberOfBytesToUnlockLow: DWORD; \u000A                   nNumberOfBytesToUnlockHigh: DWORD; lpOverlapped: TOverlapped): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"UnlockFileEx\".}"
  }, 
  {
    "name": "VerFindFile", 
    "type": "skProc", 
    "code": "proc VerFindFile*(uFlags: DWORD; \u000A                  szFileName, szWinDir, szAppDir, szCurDir: cstring; \u000A                  lpuCurDirLen: var WINUINT; szDestDir: cstring; \u000A                  lpuDestDirLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileA\".}"
  }, 
  {
    "name": "VerFindFileA", 
    "type": "skProc", 
    "code": "proc VerFindFileA*(uFlags: DWORD; \u000A                   szFileName, szWinDir, szAppDir, szCurDir: LPCSTR; \u000A                   lpuCurDirLen: var WINUINT; szDestDir: LPCSTR; \u000A                   lpuDestDirLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileA\".}"
  }, 
  {
    "name": "VerFindFileW", 
    "type": "skProc", 
    "code": "proc VerFindFileW*(uFlags: DWORD; \u000A                   szFileName, szWinDir, szAppDir, szCurDir: LPWSTR; \u000A                   lpuCurDirLen: var WINUINT; szDestDir: LPWSTR; \u000A                   lpuDestDirLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerFindFileW\".}"
  }, 
  {
    "name": "VerInstallFile", 
    "type": "skProc", 
    "code": "proc VerInstallFile*(uFlags: DWORD; szSrcFileName, szDestFileName, szSrcDir, \u000A                                    szDestDir, szCurDir, szTmpFile: cstring; \u000A                     lpuTmpFileLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerInstallFileA\".}"
  }, 
  {
    "name": "VerInstallFileA", 
    "type": "skProc", 
    "code": "proc VerInstallFileA*(uFlags: DWORD; szSrcFileName, szDestFileName, szSrcDir, \u000A                                     szDestDir, szCurDir, szTmpFile: LPCSTR; \u000A                      lpuTmpFileLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerInstallFileA\".}"
  }, 
  {
    "name": "VerInstallFileW", 
    "type": "skProc", 
    "code": "proc VerInstallFileW*(uFlags: DWORD; szSrcFileName, szDestFileName, szSrcDir, \u000A                                     szDestDir, szCurDir, szTmpFile: LPWSTR; \u000A                      lpuTmpFileLen: var WINUINT): DWORD {.stdcall, \u000A    dynlib: \"version\", importc: \"VerInstallFileW\".}"
  }, 
  {
    "name": "VerQueryValue", 
    "type": "skProc", 
    "code": "proc VerQueryValue*(pBlock: pointer; lpSubBlock: cstring; \u000A                    lplpBuffer: var pointer; puLen: var WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"version\", importc: \"VerQueryValueA\".}"
  }, 
  {
    "name": "VerQueryValueA", 
    "type": "skProc", 
    "code": "proc VerQueryValueA*(pBlock: pointer; lpSubBlock: LPCSTR; \u000A                     lplpBuffer: var pointer; puLen: var WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"version\", importc: \"VerQueryValueA\".}"
  }, 
  {
    "name": "VerQueryValueW", 
    "type": "skProc", 
    "code": "proc VerQueryValueW*(pBlock: pointer; lpSubBlock: LPWSTR; \u000A                     lplpBuffer: var pointer; puLen: var WINUINT): WINBOOL {.\u000A    stdcall, dynlib: \"version\", importc: \"VerQueryValueW\".}"
  }, 
  {
    "name": "VirtualQuery", 
    "type": "skProc", 
    "code": "proc VirtualQuery*(lpAddress: pointer; lpBuffer: var TMemoryBasicInformation; \u000A                   dwLength: DWORD): DWORD {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"VirtualQuery\".}"
  }, 
  {
    "name": "VirtualQueryEx", 
    "type": "skProc", 
    "code": "proc VirtualQueryEx*(hProcess: THandle; lpAddress: pointer; \u000A                     lpBuffer: var TMemoryBasicInformation; dwLength: DWORD): DWORD {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"VirtualQueryEx\".}"
  }, 
  {
    "name": "WaitCommEvent", 
    "type": "skProc", 
    "code": "proc WaitCommEvent*(hFile: THandle; lpEvtMask: var DWORD; \u000A                    lpOverlapped: POverlapped): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WaitCommEvent\".}"
  }, 
  {
    "name": "WaitForDebugEvent", 
    "type": "skProc", 
    "code": "proc WaitForDebugEvent*(lpDebugEvent: var TDebugEvent; dwMilliseconds: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WaitForDebugEvent\".}"
  }, 
  {
    "name": "wglDescribeLayerPlane", 
    "type": "skProc", 
    "code": "proc wglDescribeLayerPlane*(p1: HDC; p2, p3: int; p4: int; \u000A                            p5: var TLayerPlaneDescriptor): WINBOOL {.stdcall, \u000A    dynlib: \"opengl32\", importc: \"wglDescribeLayerPlane\".}"
  }, 
  {
    "name": "wglGetLayerPaletteEntries", 
    "type": "skProc", 
    "code": "proc wglGetLayerPaletteEntries*(p1: HDC; p2, p3, p4: int; pcr: pointer): int {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglGetLayerPaletteEntries\".}"
  }, 
  {
    "name": "wglSetLayerPaletteEntries", 
    "type": "skProc", 
    "code": "proc wglSetLayerPaletteEntries*(p1: HDC; p2, p3, p4: int; pcr: pointer): int {.\u000A    stdcall, dynlib: \"opengl32\", importc: \"wglSetLayerPaletteEntries\".}"
  }, 
  {
    "name": "WNetAddConnection2", 
    "type": "skProc", 
    "code": "proc WNetAddConnection2*(lpNetResource: var TNetResource; \u000A                         lpPassword, lpUserName: cstring; dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetAddConnection2A\".}"
  }, 
  {
    "name": "WNetAddConnection2A", 
    "type": "skProc", 
    "code": "proc WNetAddConnection2A*(lpNetResource: var TNetResourceA; \u000A                          lpPassword, lpUserName: LPCSTR; dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetAddConnection2A\".}"
  }, 
  {
    "name": "WNetAddConnection3", 
    "type": "skProc", 
    "code": "proc WNetAddConnection3*(hwndOwner: HWND; lpNetResource: var TNetResource; \u000A                         lpPassword, lpUserName: cstring; dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetAddConnection3A\".}"
  }, 
  {
    "name": "WNetAddConnection3A", 
    "type": "skProc", 
    "code": "proc WNetAddConnection3A*(hwndOwner: HWND; lpNetResource: var TNetResourceA; \u000A                          lpPassword, lpUserName: LPCSTR; dwFlags: DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetAddConnection3A\".}"
  }, 
  {
    "name": "WNetConnectionDialog1", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog1*(lpConnDlgStruct: var TConnectDlgStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetConnectionDialog1A\".}"
  }, 
  {
    "name": "WNetConnectionDialog1A", 
    "type": "skProc", 
    "code": "proc WNetConnectionDialog1A*(lpConnDlgStruct: var TConnectDlgStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetConnectionDialog1A\".}"
  }, 
  {
    "name": "WNetDisconnectDialog1", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog1*(lpConnDlgStruct: var TDiscDlgStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetDisconnectDialog1A\".}"
  }, 
  {
    "name": "WNetDisconnectDialog1A", 
    "type": "skProc", 
    "code": "proc WNetDisconnectDialog1A*(lpConnDlgStruct: var TDiscDlgStructA): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetDisconnectDialog1A\".}"
  }, 
  {
    "name": "WNetEnumResource", 
    "type": "skProc", 
    "code": "proc WNetEnumResource*(hEnum: THandle; lpcCount: var DWORD; lpBuffer: pointer; \u000A                       lpBufferSize: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetEnumResourceA\".}"
  }, 
  {
    "name": "WNetEnumResourceA", 
    "type": "skProc", 
    "code": "proc WNetEnumResourceA*(hEnum: THandle; lpcCount: var DWORD; lpBuffer: pointer; \u000A                        lpBufferSize: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetEnumResourceA\".}"
  }, 
  {
    "name": "WNetEnumResourceW", 
    "type": "skProc", 
    "code": "proc WNetEnumResourceW*(hEnum: THandle; lpcCount: var DWORD; lpBuffer: pointer; \u000A                        lpBufferSize: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetEnumResourceW\".}"
  }, 
  {
    "name": "WNetGetConnection", 
    "type": "skProc", 
    "code": "proc WNetGetConnection*(lpLocalName: cstring; lpRemoteName: cstring; \u000A                        lpnLength: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionA\".}"
  }, 
  {
    "name": "WNetGetConnectionA", 
    "type": "skProc", 
    "code": "proc WNetGetConnectionA*(lpLocalName: LPCSTR; lpRemoteName: LPCSTR; \u000A                         lpnLength: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionA\".}"
  }, 
  {
    "name": "WNetGetConnectionW", 
    "type": "skProc", 
    "code": "proc WNetGetConnectionW*(lpLocalName: LPWSTR; lpRemoteName: LPWSTR; \u000A                         lpnLength: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetConnectionW\".}"
  }, 
  {
    "name": "WNetGetLastError", 
    "type": "skProc", 
    "code": "proc WNetGetLastError*(lpError: var DWORD; lpErrorBuf: cstring; \u000A                       nErrorBufSize: DWORD; lpNameBuf: cstring; \u000A                       nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorA\".}"
  }, 
  {
    "name": "WNetGetLastErrorA", 
    "type": "skProc", 
    "code": "proc WNetGetLastErrorA*(lpError: var DWORD; lpErrorBuf: LPCSTR; \u000A                        nErrorBufSize: DWORD; lpNameBuf: LPCSTR; \u000A                        nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorA\".}"
  }, 
  {
    "name": "WNetGetLastErrorW", 
    "type": "skProc", 
    "code": "proc WNetGetLastErrorW*(lpError: var DWORD; lpErrorBuf: LPWSTR; \u000A                        nErrorBufSize: DWORD; lpNameBuf: LPWSTR; \u000A                        nNameBufSize: DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetGetLastErrorW\".}"
  }, 
  {
    "name": "WNetGetNetworkInformation", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformation*(lpProvider: cstring; \u000A                                lpNetInfoStruct: var TNetInfoStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationA\".}"
  }, 
  {
    "name": "WNetGetNetworkInformationA", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformationA*(lpProvider: LPCSTR; \u000A                                 lpNetInfoStruct: var TNetInfoStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationA\".}"
  }, 
  {
    "name": "WNetGetNetworkInformationW", 
    "type": "skProc", 
    "code": "proc WNetGetNetworkInformationW*(lpProvider: LPWSTR; \u000A                                 lpNetInfoStruct: var TNetInfoStruct): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetNetworkInformationW\".}"
  }, 
  {
    "name": "WNetGetProviderName", 
    "type": "skProc", 
    "code": "proc WNetGetProviderName*(dwNetType: DWORD; lpProviderName: cstring; \u000A                          lpBufferSize: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameA\".}"
  }, 
  {
    "name": "WNetGetProviderNameA", 
    "type": "skProc", 
    "code": "proc WNetGetProviderNameA*(dwNetType: DWORD; lpProviderName: LPCSTR; \u000A                           lpBufferSize: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameA\".}"
  }, 
  {
    "name": "WNetGetProviderNameW", 
    "type": "skProc", 
    "code": "proc WNetGetProviderNameW*(dwNetType: DWORD; lpProviderName: LPWSTR; \u000A                           lpBufferSize: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetProviderNameW\".}"
  }, 
  {
    "name": "WNetGetResourceParent", 
    "type": "skProc", 
    "code": "proc WNetGetResourceParent*(lpNetResource: PNetResource; lpBuffer: pointer; \u000A                            cbBuffer: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetResourceParentA\".}"
  }, 
  {
    "name": "WNetGetResourceParentA", 
    "type": "skProc", 
    "code": "proc WNetGetResourceParentA*(lpNetResource: PNetResourceA; lpBuffer: pointer; \u000A                             cbBuffer: var DWORD): DWORD {.stdcall, \u000A    dynlib: \"mpr\", importc: \"WNetGetResourceParentA\".}"
  }, 
  {
    "name": "WNetGetUniversalName", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalName*(lpLocalPath: cstring; dwInfoLevel: DWORD; \u000A                           lpBuffer: pointer; lpBufferSize: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameA\".}"
  }, 
  {
    "name": "WNetGetUniversalNameA", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalNameA*(lpLocalPath: LPCSTR; dwInfoLevel: DWORD; \u000A                            lpBuffer: pointer; lpBufferSize: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameA\".}"
  }, 
  {
    "name": "WNetGetUniversalNameW", 
    "type": "skProc", 
    "code": "proc WNetGetUniversalNameW*(lpLocalPath: LPWSTR; dwInfoLevel: DWORD; \u000A                            lpBuffer: pointer; lpBufferSize: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUniversalNameW\".}"
  }, 
  {
    "name": "WNetGetUser", 
    "type": "skProc", 
    "code": "proc WNetGetUser*(lpName: cstring; lpUserName: cstring; lpnLength: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserA\".}"
  }, 
  {
    "name": "WNetGetUserA", 
    "type": "skProc", 
    "code": "proc WNetGetUserA*(lpName: LPCSTR; lpUserName: LPCSTR; lpnLength: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserA\".}"
  }, 
  {
    "name": "WNetGetUserW", 
    "type": "skProc", 
    "code": "proc WNetGetUserW*(lpName: LPWSTR; lpUserName: LPWSTR; lpnLength: var DWORD): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetGetUserW\".}"
  }, 
  {
    "name": "WNetOpenEnum", 
    "type": "skProc", 
    "code": "proc WNetOpenEnum*(dwScope, dwType, dwUsage: DWORD; lpNetResource: PNetResource; \u000A                   lphEnum: var THandle): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetOpenEnumA\".}"
  }, 
  {
    "name": "WNetOpenEnumA", 
    "type": "skProc", 
    "code": "proc WNetOpenEnumA*(dwScope, dwType, dwUsage: DWORD; \u000A                    lpNetResource: PNetResourceA; lphEnum: var THandle): DWORD {.\u000A    stdcall, dynlib: \"mpr\", importc: \"WNetOpenEnumA\".}"
  }, 
  {
    "name": "WNetUseConnection", 
    "type": "skProc", 
    "code": "proc WNetUseConnection*(hwndOwner: HWND; lpNetResource: var TNetResource; \u000A                        lpUserID: cstring; lpPassword: cstring; dwFlags: DWORD; \u000A                        lpAccessName: cstring; lpBufferSize: var DWORD; \u000A                        lpResult: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetUseConnectionA\".}"
  }, 
  {
    "name": "WNetUseConnectionA", 
    "type": "skProc", 
    "code": "proc WNetUseConnectionA*(hwndOwner: HWND; lpNetResource: var TNetResourceA; \u000A                         lpUserID: LPCSTR; lpPassword: LPCSTR; dwFlags: DWORD; \u000A                         lpAccessName: LPCSTR; lpBufferSize: var DWORD; \u000A                         lpResult: var DWORD): DWORD {.stdcall, dynlib: \"mpr\", \u000A    importc: \"WNetUseConnectionA\".}"
  }, 
  {
    "name": "WriteConsole", 
    "type": "skProc", 
    "code": "proc WriteConsole*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                   nNumberOfCharsToWrite: DWORD; \u000A                   lpNumberOfCharsWritten: var DWORD; lpReserved: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleA\".}"
  }, 
  {
    "name": "WriteConsoleA", 
    "type": "skProc", 
    "code": "proc WriteConsoleA*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                    nNumberOfCharsToWrite: DWORD; \u000A                    lpNumberOfCharsWritten: var DWORD; lpReserved: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleA\".}"
  }, 
  {
    "name": "WriteConsoleInput", 
    "type": "skProc", 
    "code": "proc WriteConsoleInput*(hConsoleInput: THandle; lpBuffer: TInputRecord; \u000A                        nLength: DWORD; lpNumberOfEventsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputA\".}"
  }, 
  {
    "name": "WriteConsoleInputA", 
    "type": "skProc", 
    "code": "proc WriteConsoleInputA*(hConsoleInput: THandle; lpBuffer: TInputRecord; \u000A                         nLength: DWORD; lpNumberOfEventsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputA\".}"
  }, 
  {
    "name": "WriteConsoleInputW", 
    "type": "skProc", 
    "code": "proc WriteConsoleInputW*(hConsoleInput: THandle; lpBuffer: TInputRecord; \u000A                         nLength: DWORD; lpNumberOfEventsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleInputW\".}"
  }, 
  {
    "name": "WriteConsoleOutput", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutput*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                         dwBufferSize, dwBufferCoord: TCoord; \u000A                         lpWriteRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputA\".}"
  }, 
  {
    "name": "WriteConsoleOutputA", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputA*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                          dwBufferSize, dwBufferCoord: TCoord; \u000A                          lpWriteRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputA\".}"
  }, 
  {
    "name": "WriteConsoleOutputAttribute", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputAttribute*(hConsoleOutput: THandle; lpAttribute: pointer; \u000A                                  nLength: DWORD; dwWriteCoord: TCoord; \u000A                                  lpNumberOfAttrsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputAttribute\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacter", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacter*(hConsoleOutput: THandle; lpCharacter: cstring; \u000A                                  nLength: DWORD; dwWriteCoord: TCoord; \u000A                                  lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacterA", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacterA*(hConsoleOutput: THandle; lpCharacter: LPCSTR; \u000A                                   nLength: DWORD; dwWriteCoord: TCoord; \u000A                                   lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterA\".}"
  }, 
  {
    "name": "WriteConsoleOutputCharacterW", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputCharacterW*(hConsoleOutput: THandle; lpCharacter: LPWSTR; \u000A                                   nLength: DWORD; dwWriteCoord: TCoord; \u000A                                   lpNumberOfCharsWritten: var DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleOutputCharacterW\".}"
  }, 
  {
    "name": "WriteConsoleOutputW", 
    "type": "skProc", 
    "code": "proc WriteConsoleOutputW*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                          dwBufferSize, dwBufferCoord: TCoord; \u000A                          lpWriteRegion: var TSmallRect): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteConsoleOutputW\".}"
  }, 
  {
    "name": "WriteConsoleW", 
    "type": "skProc", 
    "code": "proc WriteConsoleW*(hConsoleOutput: THandle; lpBuffer: pointer; \u000A                    nNumberOfCharsToWrite: DWORD; \u000A                    lpNumberOfCharsWritten: var DWORD; lpReserved: pointer): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteConsoleW\".}"
  }, 
  {
    "name": "WriteFile", 
    "type": "skProc", 
    "code": "proc WriteFile*(hFile: THandle; Buffer: pointer; nNumberOfBytesToWrite: DWORD; \u000A                lpNumberOfBytesWritten: var DWORD; lpOverlapped: POverlapped): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WriteFile\".}"
  }, 
  {
    "name": "WriteFileEx", 
    "type": "skProc", 
    "code": "proc WriteFileEx*(hFile: THandle; lpBuffer: pointer; \u000A                  nNumberOfBytesToWrite: DWORD; lpOverlapped: TOverlapped; \u000A                  lpCompletionRoutine: FARPROC): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteFileEx\".}"
  }, 
  {
    "name": "WritePrivateProfileStructA", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileStructA*(lpszSection, lpszKey: LPCSTR; lpStruct: LPVOID; \u000A                                 uSizeStruct: WINUINT; szFile: LPCSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WritePrivateProfileStructA\".}"
  }, 
  {
    "name": "WritePrivateProfileStructW", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileStructW*(lpszSection, lpszKey: LPCWSTR; \u000A                                 lpStruct: LPVOID; uSizeStruct: WINUINT; \u000A                                 szFile: LPCWSTR): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WritePrivateProfileStructW\".}"
  }, 
  {
    "name": "WritePrivateProfileStruct", 
    "type": "skProc", 
    "code": "proc WritePrivateProfileStruct*(lpszSection, lpszKey: LPCTSTR; lpStruct: LPVOID; \u000A                                uSizeStruct: WINUINT; szFile: LPCTSTR): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"WritePrivateProfileStructA\".}"
  }, 
  {
    "name": "WriteProcessMemory", 
    "type": "skProc", 
    "code": "proc WriteProcessMemory*(hProcess: THandle; lpBaseAddress: pointer; \u000A                         lpBuffer: pointer; nSize: DWORD; \u000A                         lpNumberOfBytesWritten: var DWORD): WINBOOL {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"WriteProcessMemory\".}"
  }, 
  {
    "name": "SHFileOperation", 
    "type": "skProc", 
    "code": "proc SHFileOperation*(para1: var SHFILEOPSTRUCT): int32 {.stdcall, \u000A    dynlib: \"shell32\", importc: \"SHFileOperation\".}"
  }, 
  {
    "name": "AnsiNext", 
    "type": "skProc", 
    "code": "proc AnsiNext*(lpsz: LPCSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"CharNextA\".}"
  }, 
  {
    "name": "AnsiPrev", 
    "type": "skProc", 
    "code": "proc AnsiPrev*(lpszStart: LPCSTR; lpszCurrent: LPCSTR): LPSTR {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharPrevA\".}"
  }, 
  {
    "name": "AnsiToOem", 
    "type": "skProc", 
    "code": "proc AnsiToOem*(lpszSrc: LPCSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharToOemA\".}"
  }, 
  {
    "name": "OemToAnsi", 
    "type": "skProc", 
    "code": "proc OemToAnsi*(lpszSrc: LPCSTR; lpszDst: LPSTR): WINBOOL {.stdcall, \u000A    dynlib: \"user32\", importc: \"OemToCharA\".}"
  }, 
  {
    "name": "AnsiToOemBuff", 
    "type": "skProc", 
    "code": "proc AnsiToOemBuff*(lpszSrc: LPCSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"CharToOemBuffA\".}"
  }, 
  {
    "name": "OemToAnsiBuff", 
    "type": "skProc", 
    "code": "proc OemToAnsiBuff*(lpszSrc: LPCSTR; lpszDst: LPSTR; cchDstLength: DWORD): WINBOOL {.\u000A    stdcall, dynlib: \"user32\", importc: \"OemToCharBuffA\".}"
  }, 
  {
    "name": "AnsiUpper", 
    "type": "skProc", 
    "code": "proc AnsiUpper*(lpsz: LPSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"CharUpperA\".}"
  }, 
  {
    "name": "AnsiUpperBuff", 
    "type": "skProc", 
    "code": "proc AnsiUpperBuff*(lpsz: LPSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharUpperBuffA\".}"
  }, 
  {
    "name": "AnsiLower", 
    "type": "skProc", 
    "code": "proc AnsiLower*(lpsz: LPSTR): LPSTR {.stdcall, dynlib: \"user32\", \u000A                                      importc: \"CharLowerA\".}"
  }, 
  {
    "name": "AnsiLowerBuff", 
    "type": "skProc", 
    "code": "proc AnsiLowerBuff*(lpsz: LPSTR; cchLength: DWORD): DWORD {.stdcall, \u000A    dynlib: \"user32\", importc: \"CharLowerBuffA\".}"
  }, 
  {
    "name": "FreeModule", 
    "type": "skProc", 
    "code": "proc FreeModule*(h: HINST): WINBOOL"
  }, 
  {
    "name": "MakeProcInstance", 
    "type": "skProc", 
    "code": "proc MakeProcInstance*(p, i: pointer): pointer"
  }, 
  {
    "name": "FreeProcInstance", 
    "type": "skProc", 
    "code": "proc FreeProcInstance*(p: pointer): pointer"
  }, 
  {
    "name": "GlobalDiscard", 
    "type": "skProc", 
    "code": "proc GlobalDiscard*(hglbMem: HGLOBAL): HGLOBAL"
  }, 
  {
    "name": "LocalDiscard", 
    "type": "skProc", 
    "code": "proc LocalDiscard*(hlocMem: HLOCAL): HLOCAL"
  }, 
  {
    "name": "RGB", 
    "type": "skProc", 
    "code": "proc RGB*(r, g, b: int): COLORREF"
  }, 
  {
    "name": "RGB", 
    "type": "skProc", 
    "code": "proc RGB*(r, g, b: range[0 .. 255]): COLORREF"
  }, 
  {
    "name": "PALETTERGB", 
    "type": "skProc", 
    "code": "proc PALETTERGB*(r, g, b: range[0 .. 255]): COLORREF"
  }, 
  {
    "name": "PALETTEINDEX", 
    "type": "skProc", 
    "code": "proc PALETTEINDEX*(i: DWORD): COLORREF"
  }, 
  {
    "name": "GetRValue", 
    "type": "skProc", 
    "code": "proc GetRValue*(rgb: COLORREF): int8"
  }, 
  {
    "name": "GetGValue", 
    "type": "skProc", 
    "code": "proc GetGValue*(rgb: COLORREF): int8"
  }, 
  {
    "name": "GetBValue", 
    "type": "skProc", 
    "code": "proc GetBValue*(rgb: COLORREF): int8"
  }, 
  {
    "name": "HIBYTE", 
    "type": "skProc", 
    "code": "proc HIBYTE*(w: int32): int8"
  }, 
  {
    "name": "HIWORD", 
    "type": "skProc", 
    "code": "proc HIWORD*(L: int32): int16"
  }, 
  {
    "name": "LOBYTE", 
    "type": "skProc", 
    "code": "proc LOBYTE*(w: int32): int8"
  }, 
  {
    "name": "LOWORD", 
    "type": "skProc", 
    "code": "proc LOWORD*(L: int32): int16"
  }, 
  {
    "name": "MAKELONG", 
    "type": "skProc", 
    "code": "proc MAKELONG*(a, b: int32): LONG"
  }, 
  {
    "name": "MAKEWORD", 
    "type": "skProc", 
    "code": "proc MAKEWORD*(a, b: int32): int16"
  }, 
  {
    "name": "SEXT_HIWORD", 
    "type": "skProc", 
    "code": "proc SEXT_HIWORD*(L: int32): int32"
  }, 
  {
    "name": "ZEXT_HIWORD", 
    "type": "skProc", 
    "code": "proc ZEXT_HIWORD*(L: int32): int32"
  }, 
  {
    "name": "SEXT_LOWORD", 
    "type": "skProc", 
    "code": "proc SEXT_LOWORD*(L: int32): int32"
  }, 
  {
    "name": "INDEXTOOVERLAYMASK", 
    "type": "skProc", 
    "code": "proc INDEXTOOVERLAYMASK*(i: int32): int32"
  }, 
  {
    "name": "INDEXTOSTATEIMAGEMASK", 
    "type": "skProc", 
    "code": "proc INDEXTOSTATEIMAGEMASK*(i: int32): int32"
  }, 
  {
    "name": "MAKEINTATOM", 
    "type": "skProc", 
    "code": "proc MAKEINTATOM*(i: int32): LPTSTR"
  }, 
  {
    "name": "MAKELANGID", 
    "type": "skProc", 
    "code": "proc MAKELANGID*(p, s: int32): int32"
  }, 
  {
    "name": "PRIMARYLANGID", 
    "type": "skProc", 
    "code": "proc PRIMARYLANGID*(lgid: int32): int16"
  }, 
  {
    "name": "SUBLANGID", 
    "type": "skProc", 
    "code": "proc SUBLANGID*(lgid: int32): int32"
  }, 
  {
    "name": "MAKELCID", 
    "type": "skProc", 
    "code": "proc MAKELCID*(lgid, srtid: int32): DWORD"
  }, 
  {
    "name": "MAKELPARAM", 
    "type": "skProc", 
    "code": "proc MAKELPARAM*(L, h: int32): LPARAM"
  }, 
  {
    "name": "MAKELRESULT", 
    "type": "skProc", 
    "code": "proc MAKELRESULT*(L, h: int32): LRESULT"
  }, 
  {
    "name": "MAKEROP4", 
    "type": "skProc", 
    "code": "proc MAKEROP4*(fore, back: int32): DWORD"
  }, 
  {
    "name": "MAKEWPARAM", 
    "type": "skProc", 
    "code": "proc MAKEWPARAM*(L, h: int32): WPARAM"
  }, 
  {
    "name": "GET_X_LPARAM", 
    "type": "skProc", 
    "code": "proc GET_X_LPARAM*(lp: windows.LParam): int32"
  }, 
  {
    "name": "GET_Y_LPARAM", 
    "type": "skProc", 
    "code": "proc GET_Y_LPARAM*(lp: windows.LParam): int32"
  }, 
  {
    "name": "UNICODE_NULL", 
    "type": "skProc", 
    "code": "proc UNICODE_NULL*(): WCHAR"
  }, 
  {
    "name": "GetFirstChild", 
    "type": "skProc", 
    "code": "proc GetFirstChild*(h: HWND): HWND"
  }, 
  {
    "name": "GetNextSibling", 
    "type": "skProc", 
    "code": "proc GetNextSibling*(h: HWND): HWND"
  }, 
  {
    "name": "GetWindowID", 
    "type": "skProc", 
    "code": "proc GetWindowID*(h: HWND): int32"
  }, 
  {
    "name": "SubclassWindow", 
    "type": "skProc", 
    "code": "proc SubclassWindow*(h: HWND; p: LONG): LONG"
  }, 
  {
    "name": "GET_WM_COMMAND_CMD", 
    "type": "skProc", 
    "code": "proc GET_WM_COMMAND_CMD*(w, L: int32): int32"
  }
]