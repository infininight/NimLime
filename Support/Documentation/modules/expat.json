[
  {
    "name": "PParser", 
    "type": "skType", 
    "code": "PParser* = ptr TParserStruct"
  }, 
  {
    "name": "TContent_Quant", 
    "type": "skType", 
    "code": "TContent_Quant* {.size: sizeof(cint).} = enum \u000A  CQUANT_NONE, CQUANT_OPT, CQUANT_REP, CQUANT_PLUS"
  }, 
  {
    "name": "TContent", 
    "type": "skType", 
    "code": "TContent* {.pure, final.} = object \u000A  typ*: TContentType\u000A  quant*: TContentQuant\u000A  name*: cstring\u000A  numchildren*: cint\u000A  children*: ptr TContent\u000A"
  }, 
  {
    "name": "TElementDeclHandler", 
    "type": "skType", 
    "code": "TElementDeclHandler* = proc (userData: pointer; name: cstring; \u000A                             model: ptr TContent) {.cdecl.}"
  }, 
  {
    "name": "setElementDeclHandler", 
    "type": "skProc", 
    "code": "proc setElementDeclHandler*(parser: PParser; eldecl: TElementDeclHandler) {.\u000A    cdecl, importc: \"XML_SetElementDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TAttlistDeclHandler", 
    "type": "skType", 
    "code": "TAttlistDeclHandler* = proc (userData: pointer; elname: cstring; \u000A                             attname: cstring; attType: cstring; dflt: cstring; \u000A                             isrequired: cint) {.cdecl.}"
  }, 
  {
    "name": "setAttlistDeclHandler", 
    "type": "skProc", 
    "code": "proc setAttlistDeclHandler*(parser: PParser; attdecl: TAttlistDeclHandler) {.\u000A    cdecl, importc: \"XML_SetAttlistDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TXmlDeclHandler", 
    "type": "skType", 
    "code": "TXmlDeclHandler* = proc (userData: pointer; version: cstring; encoding: cstring; \u000A                         standalone: cint) {.cdecl.}"
  }, 
  {
    "name": "setXmlDeclHandler", 
    "type": "skProc", 
    "code": "proc setXmlDeclHandler*(parser: PParser; xmldecl: TXmlDeclHandler) {.cdecl, \u000A    importc: \"XML_SetXmlDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TMemory_Handling_Suite", 
    "type": "skType", 
    "code": "TMemory_Handling_Suite* {.pure, final.} = object \u000A  mallocFcn*: proc (size: int): pointer {.cdecl.}\u000A  reallocFcn*: proc (p: pointer; size: int): pointer {.cdecl.}\u000A  freeFcn*: proc (p: pointer) {.cdecl.}\u000A"
  }, 
  {
    "name": "parserCreate", 
    "type": "skProc", 
    "code": "proc parserCreate*(encoding: cstring): PParser {.cdecl, \u000A    importc: \"XML_ParserCreate\", dynlib: expatDll.}"
  }, 
  {
    "name": "parserCreateNS", 
    "type": "skProc", 
    "code": "proc parserCreateNS*(encoding: cstring; namespaceSeparator: char): PParser {.\u000A    cdecl, importc: \"XML_ParserCreateNS\", dynlib: expatDll.}"
  }, 
  {
    "name": "parserCreateMM", 
    "type": "skProc", 
    "code": "proc parserCreateMM*(encoding: cstring; memsuite: ptr TMemoryHandlingSuite; \u000A                     namespaceSeparator: cstring): PParser {.cdecl, \u000A    importc: \"XML_ParserCreate_MM\", dynlib: expatDll.}"
  }, 
  {
    "name": "parserReset", 
    "type": "skProc", 
    "code": "proc parserReset*(parser: PParser; encoding: cstring): bool {.cdecl, \u000A    importc: \"XML_ParserReset\", dynlib: expatDll.}"
  }, 
  {
    "name": "TEndElementHandler", 
    "type": "skType", 
    "code": "TEndElementHandler* = proc (userData: pointer; name: cstring) {.cdecl.}"
  }, 
  {
    "name": "TCharacterDataHandler", 
    "type": "skType", 
    "code": "TCharacterDataHandler* = proc (userData: pointer; s: cstring; len: cint) {.cdecl.}"
  }, 
  {
    "name": "TProcessingInstructionHandler", 
    "type": "skType", 
    "code": "TProcessingInstructionHandler* = proc (userData: pointer; target: cstring; \u000A                                       data: cstring) {.cdecl.}"
  }, 
  {
    "name": "TEndCdataSectionHandler", 
    "type": "skType", 
    "code": "TEndCdataSectionHandler* = proc (userData: pointer) {.cdecl.}"
  }, 
  {
    "name": "TDefaultHandler", 
    "type": "skType", 
    "code": "TDefaultHandler* = proc (userData: pointer; s: cstring; len: cint) {.cdecl.}"
  }, 
  {
    "name": "TStartDoctypeDeclHandler", 
    "type": "skType", 
    "code": "TStartDoctypeDeclHandler* = proc (userData: pointer; doctypeName: cstring; \u000A                                  sysid: cstring; pubid: cstring; \u000A                                  hasInternalSubset: cint) {.cdecl.}"
  }, 
  {
    "name": "TEndDoctypeDeclHandler", 
    "type": "skType", 
    "code": "TEndDoctypeDeclHandler* = proc (userData: pointer) {.cdecl.}"
  }, 
  {
    "name": "TEntityDeclHandler", 
    "type": "skType", 
    "code": "TEntityDeclHandler* = proc (userData: pointer; entityName: cstring; \u000A                            isParameterEntity: cint; value: cstring; \u000A                            valueLength: cint; base: cstring; systemId: cstring; \u000A                            publicId: cstring; notationName: cstring) {.cdecl.}"
  }, 
  {
    "name": "setEntityDeclHandler", 
    "type": "skProc", 
    "code": "proc setEntityDeclHandler*(parser: PParser; handler: TEntityDeclHandler) {.\u000A    cdecl, importc: \"XML_SetEntityDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "TUnparsedEntityDeclHandler", 
    "type": "skType", 
    "code": "TUnparsedEntityDeclHandler* = proc (userData: pointer; entityName: cstring; \u000A                                    base: cstring; systemId: cstring; \u000A                                    publicId, notationName: cstring) {.cdecl.}"
  }, 
  {
    "name": "TNotationDeclHandler", 
    "type": "skType", 
    "code": "TNotationDeclHandler* = proc (userData: pointer; notationName: cstring; \u000A                              base: cstring; systemId: cstring; \u000A                              publicId: cstring) {.cdecl.}"
  }, 
  {
    "name": "TEndNamespaceDeclHandler", 
    "type": "skType", 
    "code": "TEndNamespaceDeclHandler* = proc (userData: pointer; prefix: cstring) {.cdecl.}"
  }, 
  {
    "name": "TNotStandaloneHandler", 
    "type": "skType", 
    "code": "TNotStandaloneHandler* = proc (userData: pointer): cint {.cdecl.}"
  }, 
  {
    "name": "TExternalEntityRefHandler", 
    "type": "skType", 
    "code": "TExternalEntityRefHandler* = proc (parser: PParser; context: cstring; \u000A                                   base: cstring; systemId: cstring; \u000A                                   publicId: cstring): cint {.cdecl.}"
  }, 
  {
    "name": "TSkippedEntityHandler", 
    "type": "skType", 
    "code": "TSkippedEntityHandler* = proc (userData: pointer; entityName: cstring; \u000A                               isParameterEntity: cint) {.cdecl.}"
  }, 
  {
    "name": "TEncoding", 
    "type": "skType", 
    "code": "TEncoding* {.pure, final.} = object \u000A  map*: array[0 .. 256 - 1, cint]\u000A  data*: pointer\u000A  convert*: proc (data: pointer; s: cstring): cint {.cdecl.}\u000A  release*: proc (data: pointer) {.cdecl.}\u000A"
  }, 
  {
    "name": "TUnknownEncodingHandler", 
    "type": "skType", 
    "code": "TUnknownEncodingHandler* = proc (encodingHandlerData: pointer; name: cstring; \u000A                                 info: ptr TEncoding): cint {.cdecl.}"
  }, 
  {
    "name": "setElementHandler", 
    "type": "skProc", 
    "code": "proc setElementHandler*(parser: PParser; start: TStartElementHandler; \u000A                        endHandler: TEndElementHandler) {.cdecl, \u000A    importc: \"XML_SetElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setStartElementHandler", 
    "type": "skProc", 
    "code": "proc setStartElementHandler*(parser: PParser; handler: TStartElementHandler) {.\u000A    cdecl, importc: \"XML_SetStartElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setEndElementHandler", 
    "type": "skProc", 
    "code": "proc setEndElementHandler*(parser: PParser; handler: TEndElementHandler) {.\u000A    cdecl, importc: \"XML_SetEndElementHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setCharacterDataHandler", 
    "type": "skProc", 
    "code": "proc setCharacterDataHandler*(parser: PParser; handler: TCharacterDataHandler) {.\u000A    cdecl, importc: \"XML_SetCharacterDataHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setProcessingInstructionHandler", 
    "type": "skProc", 
    "code": "proc setProcessingInstructionHandler*(parser: PParser; \u000A                                      handler: TProcessingInstructionHandler) {.\u000A    cdecl, importc: \"XML_SetProcessingInstructionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setCommentHandler", 
    "type": "skProc", 
    "code": "proc setCommentHandler*(parser: PParser; handler: TCommentHandler) {.cdecl, \u000A    importc: \"XML_SetCommentHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc setCdataSectionHandler*(parser: PParser; start: TStartCdataSectionHandler; \u000A                             endHandler: TEndCdataSectionHandler) {.cdecl, \u000A    importc: \"XML_SetCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setStartCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc setStartCdataSectionHandler*(parser: PParser; \u000A                                  start: TStartCdataSectionHandler) {.cdecl, \u000A    importc: \"XML_SetStartCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setEndCdataSectionHandler", 
    "type": "skProc", 
    "code": "proc setEndCdataSectionHandler*(parser: PParser; \u000A                                endHandler: TEndCdataSectionHandler) {.cdecl, \u000A    importc: \"XML_SetEndCdataSectionHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setDefaultHandler", 
    "type": "skProc", 
    "code": "proc setDefaultHandler*(parser: PParser; handler: TDefaultHandler) {.cdecl, \u000A    importc: \"XML_SetDefaultHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setDefaultHandlerExpand", 
    "type": "skProc", 
    "code": "proc setDefaultHandlerExpand*(parser: PParser; handler: TDefaultHandler) {.\u000A    cdecl, importc: \"XML_SetDefaultHandlerExpand\", dynlib: expatDll.}"
  }, 
  {
    "name": "setDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc setDoctypeDeclHandler*(parser: PParser; start: TStartDoctypeDeclHandler; \u000A                            endHandler: TEndDoctypeDeclHandler) {.cdecl, \u000A    importc: \"XML_SetDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setStartDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc setStartDoctypeDeclHandler*(parser: PParser; \u000A                                 start: TStartDoctypeDeclHandler) {.cdecl, \u000A    importc: \"XML_SetStartDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setEndDoctypeDeclHandler", 
    "type": "skProc", 
    "code": "proc setEndDoctypeDeclHandler*(parser: PParser; \u000A                               endHandler: TEndDoctypeDeclHandler) {.cdecl, \u000A    importc: \"XML_SetEndDoctypeDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setUnparsedEntityDeclHandler", 
    "type": "skProc", 
    "code": "proc setUnparsedEntityDeclHandler*(parser: PParser; \u000A                                   handler: TUnparsedEntityDeclHandler) {.cdecl, \u000A    importc: \"XML_SetUnparsedEntityDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setNotationDeclHandler", 
    "type": "skProc", 
    "code": "proc setNotationDeclHandler*(parser: PParser; handler: TNotationDeclHandler) {.\u000A    cdecl, importc: \"XML_SetNotationDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc setNamespaceDeclHandler*(parser: PParser; \u000A                              start: TStartNamespaceDeclHandler; \u000A                              endHandler: TEndNamespaceDeclHandler) {.cdecl, \u000A    importc: \"XML_SetNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setStartNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc setStartNamespaceDeclHandler*(parser: PParser; \u000A                                   start: TStartNamespaceDeclHandler) {.cdecl, \u000A    importc: \"XML_SetStartNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setEndNamespaceDeclHandler", 
    "type": "skProc", 
    "code": "proc setEndNamespaceDeclHandler*(parser: PParser; \u000A                                 endHandler: TEndNamespaceDeclHandler) {.cdecl, \u000A    importc: \"XML_SetEndNamespaceDeclHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setNotStandaloneHandler", 
    "type": "skProc", 
    "code": "proc setNotStandaloneHandler*(parser: PParser; handler: TNotStandaloneHandler) {.\u000A    cdecl, importc: \"XML_SetNotStandaloneHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setExternalEntityRefHandler", 
    "type": "skProc", 
    "code": "proc setExternalEntityRefHandler*(parser: PParser; \u000A                                  handler: TExternalEntityRefHandler) {.cdecl, \u000A    importc: \"XML_SetExternalEntityRefHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setExternalEntityRefHandlerArg", 
    "type": "skProc", 
    "code": "proc setExternalEntityRefHandlerArg*(parser: PParser; arg: pointer) {.cdecl, \u000A    importc: \"XML_SetExternalEntityRefHandlerArg\", dynlib: expatDll.}"
  }, 
  {
    "name": "setSkippedEntityHandler", 
    "type": "skProc", 
    "code": "proc setSkippedEntityHandler*(parser: PParser; handler: TSkippedEntityHandler) {.\u000A    cdecl, importc: \"XML_SetSkippedEntityHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "setUnknownEncodingHandler", 
    "type": "skProc", 
    "code": "proc setUnknownEncodingHandler*(parser: PParser; \u000A                                handler: TUnknownEncodingHandler; \u000A                                encodingHandlerData: pointer) {.cdecl, \u000A    importc: \"XML_SetUnknownEncodingHandler\", dynlib: expatDll.}"
  }, 
  {
    "name": "defaultCurrent", 
    "type": "skProc", 
    "code": "proc defaultCurrent*(parser: PParser) {.cdecl, importc: \"XML_DefaultCurrent\", \u000A                                        dynlib: expatDll.}"
  }, 
  {
    "name": "setReturnNSTriplet", 
    "type": "skProc", 
    "code": "proc setReturnNSTriplet*(parser: PParser; doNst: cint) {.cdecl, \u000A    importc: \"XML_SetReturnNSTriplet\", dynlib: expatDll.}"
  }, 
  {
    "name": "setUserData", 
    "type": "skProc", 
    "code": "proc setUserData*(parser: PParser; userData: pointer) {.cdecl, \u000A    importc: \"XML_SetUserData\", dynlib: expatDll.}"
  }, 
  {
    "name": "getUserData", 
    "type": "skTemplate", 
    "code": "template getUserData*(parser: expr): expr"
  }, 
  {
    "name": "setEncoding", 
    "type": "skProc", 
    "code": "proc setEncoding*(parser: PParser; encoding: cstring): TStatus {.cdecl, \u000A    importc: \"XML_SetEncoding\", dynlib: expatDll.}"
  }, 
  {
    "name": "useParserAsHandlerArg", 
    "type": "skProc", 
    "code": "proc useParserAsHandlerArg*(parser: PParser) {.cdecl, \u000A    importc: \"XML_UseParserAsHandlerArg\", dynlib: expatDll.}"
  }, 
  {
    "name": "useForeignDTD", 
    "type": "skProc", 
    "code": "proc useForeignDTD*(parser: PParser; useDTD: bool): TError {.cdecl, \u000A    importc: \"XML_UseForeignDTD\", dynlib: expatDll.}"
  }, 
  {
    "name": "setBase", 
    "type": "skProc", 
    "code": "proc setBase*(parser: PParser; base: cstring): TStatus {.cdecl, \u000A    importc: \"XML_SetBase\", dynlib: expatDll.}"
  }, 
  {
    "name": "getBase", 
    "type": "skProc", 
    "code": "proc getBase*(parser: PParser): cstring {.cdecl, importc: \"XML_GetBase\", \u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "getSpecifiedAttributeCount", 
    "type": "skProc", 
    "code": "proc getSpecifiedAttributeCount*(parser: PParser): cint {.cdecl, \u000A    importc: \"XML_GetSpecifiedAttributeCount\", dynlib: expatDll.}"
  }, 
  {
    "name": "getIdAttributeIndex", 
    "type": "skProc", 
    "code": "proc getIdAttributeIndex*(parser: PParser): cint {.cdecl, \u000A    importc: \"XML_GetIdAttributeIndex\", dynlib: expatDll.}"
  }, 
  {
    "name": "parse", 
    "type": "skProc", 
    "code": "proc parse*(parser: PParser; s: cstring; len: cint; isFinal: cint): TStatus {.\u000A    cdecl, importc: \"XML_Parse\", dynlib: expatDll.}"
  }, 
  {
    "name": "getBuffer", 
    "type": "skProc", 
    "code": "proc getBuffer*(parser: PParser; len: cint): pointer {.cdecl, \u000A    importc: \"XML_GetBuffer\", dynlib: expatDll.}"
  }, 
  {
    "name": "parseBuffer", 
    "type": "skProc", 
    "code": "proc parseBuffer*(parser: PParser; len: cint; isFinal: cint): TStatus {.cdecl, \u000A    importc: \"XML_ParseBuffer\", dynlib: expatDll.}"
  }, 
  {
    "name": "stopParser", 
    "type": "skProc", 
    "code": "proc stopParser*(parser: PParser; resumable: bool): TStatus {.cdecl, \u000A    importc: \"XML_StopParser\", dynlib: expatDll.}"
  }, 
  {
    "name": "resumeParser", 
    "type": "skProc", 
    "code": "proc resumeParser*(parser: PParser): TStatus {.cdecl, \u000A    importc: \"XML_ResumeParser\", dynlib: expatDll.}"
  }, 
  {
    "name": "TParsingStatus", 
    "type": "skType", 
    "code": "TParsingStatus* {.pure, final.} = object \u000A  parsing*: TParsing\u000A  finalBuffer*: bool\u000A"
  }, 
  {
    "name": "getParsingStatus", 
    "type": "skProc", 
    "code": "proc getParsingStatus*(parser: PParser; status: ptr TParsingStatus) {.cdecl, \u000A    importc: \"XML_GetParsingStatus\", dynlib: expatDll.}"
  }, 
  {
    "name": "externalEntityParserCreate", 
    "type": "skProc", 
    "code": "proc externalEntityParserCreate*(parser: PParser; context: cstring; \u000A                                 encoding: cstring): PParser {.cdecl, \u000A    importc: \"XML_ExternalEntityParserCreate\", dynlib: expatDll.}"
  }, 
  {
    "name": "TParamEntityParsing", 
    "type": "skType", 
    "code": "TParamEntityParsing* = enum \u000A  PARAM_ENTITY_PARSING_NEVER, PARAM_ENTITY_PARSING_UNLESS_STANDALONE, \u000A  PARAM_ENTITY_PARSING_ALWAYS"
  }, 
  {
    "name": "setParamEntityParsing", 
    "type": "skProc", 
    "code": "proc setParamEntityParsing*(parser: PParser; parsing: TParamEntityParsing): cint {.\u000A    cdecl, importc: \"XML_SetParamEntityParsing\", dynlib: expatDll.}"
  }, 
  {
    "name": "getErrorCode", 
    "type": "skProc", 
    "code": "proc getErrorCode*(parser: PParser): TError {.cdecl, \u000A    importc: \"XML_GetErrorCode\", dynlib: expatDll.}"
  }, 
  {
    "name": "getCurrentLineNumber", 
    "type": "skProc", 
    "code": "proc getCurrentLineNumber*(parser: PParser): int {.cdecl, \u000A    importc: \"XML_GetCurrentLineNumber\", dynlib: expatDll.}"
  }, 
  {
    "name": "getCurrentColumnNumber", 
    "type": "skProc", 
    "code": "proc getCurrentColumnNumber*(parser: PParser): int {.cdecl, \u000A    importc: \"XML_GetCurrentColumnNumber\", dynlib: expatDll.}"
  }, 
  {
    "name": "getCurrentByteIndex", 
    "type": "skProc", 
    "code": "proc getCurrentByteIndex*(parser: PParser): int {.cdecl, \u000A    importc: \"XML_GetCurrentByteIndex\", dynlib: expatDll.}"
  }, 
  {
    "name": "getCurrentByteCount", 
    "type": "skProc", 
    "code": "proc getCurrentByteCount*(parser: PParser): cint {.cdecl, \u000A    importc: \"XML_GetCurrentByteCount\", dynlib: expatDll.}"
  }, 
  {
    "name": "getInputContext", 
    "type": "skProc", 
    "code": "proc getInputContext*(parser: PParser; offset: ptr cint; size: ptr cint): cstring {.\u000A    cdecl, importc: \"XML_GetInputContext\", dynlib: expatDll.}"
  }, 
  {
    "name": "freeContentModel", 
    "type": "skProc", 
    "code": "proc freeContentModel*(parser: PParser; model: ptr TContent) {.cdecl, \u000A    importc: \"XML_FreeContentModel\", dynlib: expatDll.}"
  }, 
  {
    "name": "memMalloc", 
    "type": "skProc", 
    "code": "proc memMalloc*(parser: PParser; size: int): pointer {.cdecl, \u000A    importc: \"XML_MemMalloc\", dynlib: expatDll.}"
  }, 
  {
    "name": "memRealloc", 
    "type": "skProc", 
    "code": "proc memRealloc*(parser: PParser; p: pointer; size: int): pointer {.cdecl, \u000A    importc: \"XML_MemRealloc\", dynlib: expatDll.}"
  }, 
  {
    "name": "memFree", 
    "type": "skProc", 
    "code": "proc memFree*(parser: PParser; p: pointer) {.cdecl, importc: \"XML_MemFree\", \u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "parserFree", 
    "type": "skProc", 
    "code": "proc parserFree*(parser: PParser) {.cdecl, importc: \"XML_ParserFree\", \u000A                                    dynlib: expatDll.}"
  }, 
  {
    "name": "errorString", 
    "type": "skProc", 
    "code": "proc errorString*(code: TError): cstring {.cdecl, importc: \"XML_ErrorString\", \u000A    dynlib: expatDll.}"
  }, 
  {
    "name": "expatVersion", 
    "type": "skProc", 
    "code": "proc expatVersion*(): cstring {.cdecl, importc: \"XML_ExpatVersion\", \u000A                                dynlib: expatDll.}"
  }, 
  {
    "name": "TExpat_Version", 
    "type": "skType", 
    "code": "TExpat_Version* {.pure, final.} = object \u000A  major*: cint\u000A  minor*: cint\u000A  micro*: cint\u000A"
  }, 
  {
    "name": "expatVersionInfo", 
    "type": "skProc", 
    "code": "proc expatVersionInfo*(): TExpatVersion {.cdecl, \u000A    importc: \"XML_ExpatVersionInfo\", dynlib: expatDll.}"
  }, 
  {
    "name": "TFeature", 
    "type": "skType", 
    "code": "TFeature* {.pure, final.} = object \u000A  feature*: TFeatureEnum\u000A  name*: cstring\u000A  value*: int\u000A"
  }, 
  {
    "name": "getFeatureList", 
    "type": "skProc", 
    "code": "proc getFeatureList*(): ptr TFeature {.cdecl, importc: \"XML_GetFeatureList\", \u000A                                       dynlib: expatDll.}"
  }, 
  {
    "name": "MICRO_VERSION", 
    "type": "skConst", 
    "code": "MICRO_VERSION* = 1"
  }
]