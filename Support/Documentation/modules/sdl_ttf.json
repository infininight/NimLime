[
  {
    "name": "UNICODE_BOM_SWAPPED", 
    "type": "skConst", 
    "code": "UNICODE_BOM_SWAPPED* = 0x0000FFFE"
  }, 
  {
    "name": "linkedVersion", 
    "type": "skProc", 
    "code": "proc linkedVersion*(): sdl.Pversion {.cdecl, importc: \"TTF_Linked_Version\", \u000A                                      dynlib: ttfLibName.}"
  }, 
  {
    "name": "byteSwappedUNICODE", 
    "type": "skProc", 
    "code": "proc byteSwappedUNICODE*(swapped: cint) {.cdecl, \u000A    importc: \"TTF_ByteSwappedUNICODE\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "init", 
    "type": "skProc", 
    "code": "proc init*(): cint {.cdecl, importc: \"TTF_Init\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "openFont", 
    "type": "skProc", 
    "code": "proc openFont*(filename: cstring; ptsize: cint): PFont {.cdecl, \u000A    importc: \"TTF_OpenFont\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "openFontIndex", 
    "type": "skProc", 
    "code": "proc openFontIndex*(filename: cstring; ptsize: cint; index: int32): PFont {.\u000A    cdecl, importc: \"TTF_OpenFontIndex\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "openFontRW", 
    "type": "skProc", 
    "code": "proc openFontRW*(src: PRWops; freesrc: cint; ptsize: cint): PFont {.cdecl, \u000A    importc: \"TTF_OpenFontRW\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "openFontIndexRW", 
    "type": "skProc", 
    "code": "proc openFontIndexRW*(src: PRWops; freesrc: cint; ptsize: cint; index: int32): PFont {.\u000A    cdecl, importc: \"TTF_OpenFontIndexRW\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "getFontStyle", 
    "type": "skProc", 
    "code": "proc getFontStyle*(font: PFont): cint {.cdecl, importc: \"TTF_GetFontStyle\", \u000A                                        dynlib: ttfLibName.}"
  }, 
  {
    "name": "setFontStyle", 
    "type": "skProc", 
    "code": "proc setFontStyle*(font: PFont; style: cint) {.cdecl, \u000A    importc: \"TTF_SetFontStyle\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontHeight", 
    "type": "skProc", 
    "code": "proc fontHeight*(font: PFont): cint {.cdecl, importc: \"TTF_FontHeight\", \u000A                                      dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontAscent", 
    "type": "skProc", 
    "code": "proc fontAscent*(font: PFont): cint {.cdecl, importc: \"TTF_FontAscent\", \u000A                                      dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontDescent", 
    "type": "skProc", 
    "code": "proc fontDescent*(font: PFont): cint {.cdecl, importc: \"TTF_FontDescent\", \u000A                                       dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontLineSkip", 
    "type": "skProc", 
    "code": "proc fontLineSkip*(font: PFont): cint {.cdecl, importc: \"TTF_FontLineSkip\", \u000A                                        dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontFaces", 
    "type": "skProc", 
    "code": "proc fontFaces*(font: PFont): int32 {.cdecl, importc: \"TTF_FontFaces\", \u000A                                      dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontFaceIsFixedWidth", 
    "type": "skProc", 
    "code": "proc fontFaceIsFixedWidth*(font: PFont): cint {.cdecl, \u000A    importc: \"TTF_FontFaceIsFixedWidth\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontFaceFamilyName", 
    "type": "skProc", 
    "code": "proc fontFaceFamilyName*(font: PFont): cstring {.cdecl, \u000A    importc: \"TTF_FontFaceFamilyName\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "fontFaceStyleName", 
    "type": "skProc", 
    "code": "proc fontFaceStyleName*(font: PFont): cstring {.cdecl, \u000A    importc: \"TTF_FontFaceStyleName\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "glyphMetrics", 
    "type": "skProc", 
    "code": "proc glyphMetrics*(font: PFont; ch: uint16; minx: var cint; maxx: var cint; \u000A                   miny: var cint; maxy: var cint; advance: var cint): cint {.\u000A    cdecl, importc: \"TTF_GlyphMetrics\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "sizeText", 
    "type": "skProc", 
    "code": "proc sizeText*(font: PFont; text: cstring; w: var cint; y: var cint): cint {.\u000A    cdecl, importc: \"TTF_SizeText\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "sizeUTF8", 
    "type": "skProc", 
    "code": "proc sizeUTF8*(font: PFont; text: cstring; w: var cint; y: var cint): cint {.\u000A    cdecl, importc: \"TTF_SizeUTF8\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "sizeUNICODE", 
    "type": "skProc", 
    "code": "proc sizeUNICODE*(font: PFont; text: PUInt16; w: var cint; y: var cint): cint {.\u000A    cdecl, importc: \"TTF_SizeUNICODE\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderUTF8Solid", 
    "type": "skProc", 
    "code": "proc renderUTF8Solid*(font: PFont; text: cstring; fg: TColor): PSurface {.cdecl, \u000A    importc: \"TTF_RenderUTF8_Solid\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderUNICODE_Solid", 
    "type": "skProc", 
    "code": "proc renderUNICODE_Solid*(font: PFont; text: PUInt16; fg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderUNICODE_Solid\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderGlyphSolid", 
    "type": "skProc", 
    "code": "proc renderGlyphSolid*(font: PFont; ch: uint16; fg: TColor): PSurface {.cdecl, \u000A    importc: \"TTF_RenderGlyph_Solid\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderTextShaded", 
    "type": "skProc", 
    "code": "proc renderTextShaded*(font: PFont; text: cstring; fg: TColor; bg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderText_Shaded\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderUTF8Shaded", 
    "type": "skProc", 
    "code": "proc renderUTF8Shaded*(font: PFont; text: cstring; fg: TColor; bg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderUTF8_Shaded\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderUNICODE_Shaded", 
    "type": "skProc", 
    "code": "proc renderUNICODE_Shaded*(font: PFont; text: PUInt16; fg: TColor; bg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderUNICODE_Shaded\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderGlyphShaded", 
    "type": "skProc", 
    "code": "proc renderGlyphShaded*(font: PFont; ch: uint16; fg: TColor; bg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderGlyph_Shaded\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderTextBlended", 
    "type": "skProc", 
    "code": "proc renderTextBlended*(font: PFont; text: cstring; fg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderText_Blended\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderUTF8Blended", 
    "type": "skProc", 
    "code": "proc renderUTF8Blended*(font: PFont; text: cstring; fg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderUTF8_Blended\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "RenderUNICODE_Blended", 
    "type": "skProc", 
    "code": "proc RenderUNICODE_Blended*(font: PFont; text: PUInt16; fg: TColor): PSurface {.\u000A    cdecl, importc: \"TTF_RenderUNICODE_Blended\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "renderGlyphBlended", 
    "type": "skProc", 
    "code": "proc renderGlyphBlended*(font: PFont; ch: uint16; fg: TColor): PSurface {.cdecl, \u000A    importc: \"TTF_RenderGlyph_Blended\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "closeFont", 
    "type": "skProc", 
    "code": "proc closeFont*(font: PFont) {.cdecl, importc: \"TTF_CloseFont\", \u000A                               dynlib: ttfLibName.}"
  }, 
  {
    "name": "quit", 
    "type": "skProc", 
    "code": "proc quit*() {.cdecl, importc: \"TTF_Quit\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "wasInit", 
    "type": "skProc", 
    "code": "proc wasInit*(): cint {.cdecl, importc: \"TTF_WasInit\", dynlib: ttfLibName.}"
  }, 
  {
    "name": "version", 
    "type": "skProc", 
    "code": "proc version*(x: var sdl.Tversion)"
  }, 
  {
    "name": "renderTextSolid", 
    "type": "skProc", 
    "code": "proc renderTextSolid*(font: PFont; text: cstring; fg: TColor): PSurface {.cdecl, \u000A    importc: \"TTF_RenderText_Solid\", dynlib: ttfLibName.}"
  }
]