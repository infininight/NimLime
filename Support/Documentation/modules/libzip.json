[
  {
    "comment": "Interface to the `libzip <http://www.nih.at/libzip/index.html>`_ library by\u000A## Dieter Baron and Thomas Klausner. This version links\u000A## against ``libzip2.so.2`` unless you define the symbol ``useLibzipSrc``; then\u000A## it is compiled against some old ``libizp_all.c`` file."
  }, 
  {
    "name": "PZipSource", 
    "type": "skType", 
    "description": "represents a source for an archive", 
    "code": "PZipSource* = ptr TZipSource"
  }, 
  {
    "name": "ZIP_FL_RECOMPRESS", 
    "type": "skConst", 
    "description": "force recompression of data  ", 
    "code": "ZIP_FL_RECOMPRESS* = 16'i32"
  }, 
  {
    "name": "ZIP_AFL_TORRENT", 
    "type": "skConst", 
    "description": "torrent zipped  ", 
    "code": "ZIP_AFL_TORRENT* = 1'i32"
  }, 
  {
    "name": "ZIP_ER_DELETED", 
    "type": "skConst", 
    "description": "N Entry has been deleted  ", 
    "code": "ZIP_ER_DELETED* = 23'i32"
  }, 
  {
    "name": "ZIP_ET_ZLIB", 
    "type": "skConst", 
    "description": "sys_err is zlib error code  ", 
    "code": "ZIP_ET_ZLIB* = 2'i32"
  }, 
  {
    "name": "ZIP_CM_PPMD", 
    "type": "skConst", 
    "description": "PPMd version I, Rev 1  ", 
    "code": "ZIP_CM_PPMD* = 98'i32"
  }, 
  {
    "name": "ZIP_EM_TRAD_PKWARE", 
    "type": "skConst", 
    "description": "traditional PKWARE encryption ", 
    "code": "ZIP_EM_TRAD_PKWARE* = 1'i32"
  }, 
  {
    "name": "ZIP_EM_UNKNOWN", 
    "type": "skConst", 
    "description": "unknown algorithm  ", 
    "code": "ZIP_EM_UNKNOWN* = 0x0000FFFF'i32"
  }, 
  {
    "name": "constZIP_SOURCE_FREE", 
    "type": "skConst", 
    "description": "cleanup and free resources  ", 
    "code": "constZIP_SOURCE_FREE* = 5'i32"
  }, 
  {
    "name": "zip_add", 
    "type": "skProc", 
    "code": "proc zip_add*(para1: PZip; para2: cstring; para3: PZipSource): int32 {.cdecl, \u000A    importc: \"zip_add\", mydll.}"
  }, 
  {
    "name": "zip_add_dir", 
    "type": "skProc", 
    "code": "proc zip_add_dir*(para1: PZip; para2: cstring): int32 {.cdecl, \u000A    importc: \"zip_add_dir\", mydll.}"
  }, 
  {
    "name": "zip_close", 
    "type": "skProc", 
    "code": "proc zip_close*(para1: PZip) {.cdecl, importc: \"zip_close\", mydll.}"
  }, 
  {
    "name": "zip_delete", 
    "type": "skProc", 
    "code": "proc zip_delete*(para1: PZip; para2: int32): int32 {.cdecl, mydll, \u000A    importc: \"zip_delete\".}"
  }, 
  {
    "name": "zip_error_clear", 
    "type": "skProc", 
    "code": "proc zip_error_clear*(para1: PZip) {.cdecl, importc: \"zip_error_clear\", mydll.}"
  }, 
  {
    "name": "zip_error_get", 
    "type": "skProc", 
    "code": "proc zip_error_get*(para1: PZip; para2: ptr int32; para3: ptr int32) {.cdecl, \u000A    importc: \"zip_error_get\", mydll.}"
  }, 
  {
    "name": "zip_error_get_sys_type", 
    "type": "skProc", 
    "code": "proc zip_error_get_sys_type*(para1: int32): int32 {.cdecl, mydll, \u000A    importc: \"zip_error_get_sys_type\".}"
  }, 
  {
    "name": "zip_error_to_str", 
    "type": "skProc", 
    "code": "proc zip_error_to_str*(para1: cstring; para2: int; para3: int32; para4: int32): int32 {.\u000A    cdecl, mydll, importc: \"zip_error_to_str\".}"
  }, 
  {
    "name": "zip_fclose", 
    "type": "skProc", 
    "code": "proc zip_fclose*(para1: PZipFile) {.cdecl, mydll, importc: \"zip_fclose\".}"
  }, 
  {
    "name": "zip_file_error_clear", 
    "type": "skProc", 
    "code": "proc zip_file_error_clear*(para1: PZipFile) {.cdecl, mydll, \u000A    importc: \"zip_file_error_clear\".}"
  }, 
  {
    "name": "zip_file_error_get", 
    "type": "skProc", 
    "code": "proc zip_file_error_get*(para1: PZipFile; para2: ptr int32; para3: ptr int32) {.\u000A    cdecl, mydll, importc: \"zip_file_error_get\".}"
  }, 
  {
    "name": "zip_file_strerror", 
    "type": "skProc", 
    "code": "proc zip_file_strerror*(para1: PZipFile): cstring {.cdecl, mydll, \u000A    importc: \"zip_file_strerror\".}"
  }, 
  {
    "name": "zip_fopen", 
    "type": "skProc", 
    "code": "proc zip_fopen*(para1: PZip; para2: cstring; para3: int32): PZipFile {.cdecl, \u000A    mydll, importc: \"zip_fopen\".}"
  }, 
  {
    "name": "zip_fopen_index", 
    "type": "skProc", 
    "code": "proc zip_fopen_index*(para1: PZip; para2: int32; para3: int32): PZipFile {.\u000A    cdecl, mydll, importc: \"zip_fopen_index\".}"
  }, 
  {
    "name": "zip_fread", 
    "type": "skProc", 
    "code": "proc zip_fread*(para1: PZipFile; para2: pointer; para3: int): int {.cdecl, \u000A    mydll, importc: \"zip_fread\".}"
  }, 
  {
    "name": "zip_get_archive_comment", 
    "type": "skProc", 
    "code": "proc zip_get_archive_comment*(para1: PZip; para2: ptr int32; para3: int32): cstring {.\u000A    cdecl, mydll, importc: \"zip_get_archive_comment\".}"
  }, 
  {
    "name": "zip_get_archive_flag", 
    "type": "skProc", 
    "code": "proc zip_get_archive_flag*(para1: PZip; para2: int32; para3: int32): int32 {.\u000A    cdecl, mydll, importc: \"zip_get_archive_flag\".}"
  }, 
  {
    "name": "zip_get_file_comment", 
    "type": "skProc", 
    "code": "proc zip_get_file_comment*(para1: PZip; para2: int32; para3: ptr int32; \u000A                           para4: int32): cstring {.cdecl, mydll, \u000A    importc: \"zip_get_file_comment\".}"
  }, 
  {
    "name": "zip_get_name", 
    "type": "skProc", 
    "code": "proc zip_get_name*(para1: PZip; para2: int32; para3: int32): cstring {.cdecl, \u000A    mydll, importc: \"zip_get_name\".}"
  }, 
  {
    "name": "zip_get_num_files", 
    "type": "skProc", 
    "code": "proc zip_get_num_files*(para1: PZip): int32 {.cdecl, mydll, \u000A    importc: \"zip_get_num_files\".}"
  }, 
  {
    "name": "zip_name_locate", 
    "type": "skProc", 
    "code": "proc zip_name_locate*(para1: PZip; para2: cstring; para3: int32): int32 {.cdecl, \u000A    mydll, importc: \"zip_name_locate\".}"
  }, 
  {
    "name": "zip_open", 
    "type": "skProc", 
    "code": "proc zip_open*(para1: cstring; para2: int32; para3: ptr int32): PZip {.cdecl, \u000A    mydll, importc: \"zip_open\".}"
  }, 
  {
    "name": "zip_rename", 
    "type": "skProc", 
    "code": "proc zip_rename*(para1: PZip; para2: int32; para3: cstring): int32 {.cdecl, \u000A    mydll, importc: \"zip_rename\".}"
  }, 
  {
    "name": "zip_replace", 
    "type": "skProc", 
    "code": "proc zip_replace*(para1: PZip; para2: int32; para3: PZipSource): int32 {.cdecl, \u000A    mydll, importc: \"zip_replace\".}"
  }, 
  {
    "name": "zip_set_archive_comment", 
    "type": "skProc", 
    "code": "proc zip_set_archive_comment*(para1: PZip; para2: cstring; para3: int32): int32 {.\u000A    cdecl, mydll, importc: \"zip_set_archive_comment\".}"
  }, 
  {
    "name": "zip_set_archive_flag", 
    "type": "skProc", 
    "code": "proc zip_set_archive_flag*(para1: PZip; para2: int32; para3: int32): int32 {.\u000A    cdecl, mydll, importc: \"zip_set_archive_flag\".}"
  }, 
  {
    "name": "zip_set_file_comment", 
    "type": "skProc", 
    "code": "proc zip_set_file_comment*(para1: PZip; para2: int32; para3: cstring; \u000A                           para4: int32): int32 {.cdecl, mydll, \u000A    importc: \"zip_set_file_comment\".}"
  }, 
  {
    "name": "zip_source_buffer", 
    "type": "skProc", 
    "code": "proc zip_source_buffer*(para1: PZip; para2: pointer; para3: int; para4: int32): PZipSource {.\u000A    cdecl, mydll, importc: \"zip_source_buffer\".}"
  }, 
  {
    "name": "zip_source_file", 
    "type": "skProc", 
    "code": "proc zip_source_file*(para1: PZip; para2: cstring; para3: int; para4: int): PZipSource {.\u000A    cdecl, mydll, importc: \"zip_source_file\".}"
  }, 
  {
    "name": "zip_source_filep", 
    "type": "skProc", 
    "code": "proc zip_source_filep*(para1: PZip; para2: File; para3: int; para4: int): PZipSource {.\u000A    cdecl, mydll, importc: \"zip_source_filep\".}"
  }, 
  {
    "name": "zip_source_free", 
    "type": "skProc", 
    "code": "proc zip_source_free*(para1: PZipSource) {.cdecl, mydll, \u000A    importc: \"zip_source_free\".}"
  }, 
  {
    "name": "zip_source_function", 
    "type": "skProc", 
    "code": "proc zip_source_function*(para1: PZip; para2: TZipSourceCallback; para3: pointer): PZipSource {.\u000A    cdecl, mydll, importc: \"zip_source_function\".}"
  }, 
  {
    "name": "zip_source_zip", 
    "type": "skProc", 
    "code": "proc zip_source_zip*(para1: PZip; para2: PZip; para3: int32; para4: int32; \u000A                     para5: int; para6: int): PZipSource {.cdecl, mydll, \u000A    importc: \"zip_source_zip\".}"
  }, 
  {
    "name": "zip_stat", 
    "type": "skProc", 
    "code": "proc zip_stat*(para1: PZip; para2: cstring; para3: int32; para4: PZipStat): int32 {.\u000A    cdecl, mydll, importc: \"zip_stat\".}"
  }, 
  {
    "name": "zip_stat_index", 
    "type": "skProc", 
    "code": "proc zip_stat_index*(para1: PZip; para2: int32; para3: int32; para4: PZipStat): int32 {.\u000A    cdecl, mydll, importc: \"zip_stat_index\".}"
  }, 
  {
    "name": "zip_stat_init", 
    "type": "skProc", 
    "code": "proc zip_stat_init*(para1: PZipStat) {.cdecl, mydll, importc: \"zip_stat_init\".}"
  }, 
  {
    "name": "zip_strerror", 
    "type": "skProc", 
    "code": "proc zip_strerror*(para1: PZip): cstring {.cdecl, mydll, importc: \"zip_strerror\".}"
  }, 
  {
    "name": "zip_unchange", 
    "type": "skProc", 
    "code": "proc zip_unchange*(para1: PZip; para2: int32): int32 {.cdecl, mydll, \u000A    importc: \"zip_unchange\".}"
  }, 
  {
    "name": "zip_unchange_all", 
    "type": "skProc", 
    "code": "proc zip_unchange_all*(para1: PZip): int32 {.cdecl, mydll, \u000A    importc: \"zip_unchange_all\".}"
  }, 
  {
    "name": "zip_unchange_archive", 
    "type": "skProc", 
    "code": "proc zip_unchange_archive*(para1: PZip): int32 {.cdecl, mydll, \u000A    importc: \"zip_unchange_archive\".}"
  }
]