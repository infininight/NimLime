[
  {
    "comment": "This module provides an easy to use sockets-style \u000A## nim interface to the OpenSSL library."
  }, 
  {
    "name": "TSecureSocket", 
    "type": "skType", 
    "code": "TSecureSocket* = object \u000A  ssl: SslPtr\u000A  bio: BIO\u000A"
  }, 
  {
    "name": "connect", 
    "type": "skProc", 
    "description": "Connects to the specified <cite>address</cite> on the specified <cite>port</cite>. Returns the result of the certificate validation.", 
    "code": "proc connect*(sock: var TSecureSocket; address: string; port: int): int"
  }, 
  {
    "name": "recvLine", 
    "type": "skProc", 
    "description": "Acts in a similar fashion to the <cite>recvLine</cite> in the sockets module. Returns false when no data is available to be read. <cite>Line</cite> must be initialized and not nil!", 
    "code": "proc recvLine*(sock: TSecureSocket; line: var TaintedString): bool"
  }, 
  {
    "name": "send", 
    "type": "skProc", 
    "description": "Writes <cite>data</cite> to the socket.", 
    "code": "proc send*(sock: TSecureSocket; data: string)"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "description": "Closes the socket", 
    "code": "proc close*(sock: TSecureSocket)"
  }
]