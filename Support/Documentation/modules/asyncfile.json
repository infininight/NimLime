[
  {
    "comment": "This module implements asynchronous file handling.\u000A##\u000A## .. code-block:: Nim\u000A##    import asyncfile, asyncdispatch, os\u000A##\u000A##    proc main() {.async.} =\u000A##      var file = openAsync(getTempDir() / \"foobar.txt\", fmReadWrite)\u000A##      await file.write(\"test\")\u000A##      file.setFilePos(0)\u000A##      let data = await file.readAll()\u000A##      doAssert data == \"test\"\u000A##      file.close()\u000A##\u000A##    waitFor main()"
  }, 
  {
    "name": "openAsync", 
    "type": "skProc", 
    "description": "Opens a file specified by the path in <tt class=\"docutils literal\"><span class=\"pre\">filename</span></tt> using the specified <tt class=\"docutils literal\"><span class=\"pre\">mode</span></tt> asynchronously.", 
    "code": "proc openAsync*(filename: string; mode = fmRead): AsyncFile"
  }, 
  {
    "name": "read", 
    "type": "skProc", 
    "description": "<p>Read <tt class=\"docutils literal\"><span class=\"pre\">size</span></tt> bytes from the specified file asynchronously starting at the current position of the file pointer.</p>\u000A<p>If the file pointer is past the end of the file then an empty string is returned.</p>\u000A", 
    "code": "proc read*(f: AsyncFile; size: int): Future[string]"
  }, 
  {
    "name": "readLine", 
    "type": "skProc", 
    "description": "Reads a single line from the specified file asynchronously.", 
    "code": "proc readLine*(f: AsyncFile): Future[string] {.async.}"
  }, 
  {
    "name": "getFilePos", 
    "type": "skProc", 
    "description": "Retrieves the current position of the file pointer that is used to read from the specified file. The file's first byte has the index zero.", 
    "code": "proc getFilePos*(f: AsyncFile): int64"
  }, 
  {
    "name": "setFilePos", 
    "type": "skProc", 
    "description": "Sets the position of the file pointer that is used for read/write operations. The file's first byte has the index zero. ", 
    "code": "proc setFilePos*(f: AsyncFile; pos: int64)"
  }, 
  {
    "name": "readAll", 
    "type": "skProc", 
    "description": "Reads all data from the specified file.", 
    "code": "proc readAll*(f: AsyncFile): Future[string] {.async.}"
  }, 
  {
    "name": "write", 
    "type": "skProc", 
    "description": "<p>Writes <tt class=\"docutils literal\"><span class=\"pre\">data</span></tt> to the file specified asynchronously.</p>\u000A<p>The returned Future will complete once all data has been written to the specified file.</p>\u000A", 
    "code": "proc write*(f: AsyncFile; data: string): Future[void]"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "description": "Closes the file specified.", 
    "code": "proc close*(f: AsyncFile)"
  }
]