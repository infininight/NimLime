[
  {
    "comment": "This module contains code for reading from `stdin`:idx:. On UNIX the GNU\u000A## readline library is wrapped and set up to provide default key bindings \u000A## (e.g. you can navigate with the arrow keys). On Windows ``system.readLine``\u000A## is used. This suffices because Windows' console already provides the \u000A## wanted functionality."
  }, 
  {
    "name": "readLineFromStdin", 
    "type": "skProc", 
    "description": "Reads a line from stdin.", 
    "code": "proc readLineFromStdin*(prompt: string): TaintedString {.\u000A    tags: [ReadIOEffect, WriteIOEffect].}"
  }, 
  {
    "name": "readLineFromStdin", 
    "type": "skProc", 
    "description": "Reads a <cite>line</cite> from stdin. <cite>line</cite> must not be <tt class=\"docutils literal\"><span class=\"pre\">nil</span></tt>! May throw an IO exception. A line of text may be delimited by <tt class=\"docutils literal\"><span class=\"pre\">CR</span></tt>, <tt class=\"docutils literal\"><span class=\"pre\">LF</span></tt> or <tt class=\"docutils literal\"><span class=\"pre\">CRLF</span></tt>. The newline character(s) are not part of the returned string. Returns <tt class=\"docutils literal\"><span class=\"pre\">false</span></tt> if the end of the file has been reached, <tt class=\"docutils literal\"><span class=\"pre\">true</span></tt> otherwise. If <tt class=\"docutils literal\"><span class=\"pre\">false</span></tt> is returned <cite>line</cite> contains no new data.", 
    "code": "proc readLineFromStdin*(prompt: string; line: var TaintedString): bool {.\u000A    tags: [ReadIOEffect, WriteIOEffect].}"
  }
]