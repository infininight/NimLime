[
  {
    "comment": "libuv is still fast moving target\u000A## This file was last updated against a development HEAD revision of https://github.com/joyent/libuv/"
  }, 
  {
    "comment": "Use the following link to see changes (in uv.h) since then and don't forget to update the information here.\u000A## https://github.com/joyent/libuv/compare/9f6024a6fa9d254527b4b59af724257df870288b...master"
  }, 
  {
    "name": "PAresChannel", 
    "type": "skType", 
    "code": "PAresChannel* = pointer"
  }, 
  {
    "name": "loop_new", 
    "type": "skProc", 
    "code": "proc loop_new*(): PLoop {.importc: \"uv_loop_new\", header: \"uv.h\".}"
  }, 
  {
    "name": "loop_delete", 
    "type": "skProc", 
    "code": "proc loop_delete*(a2: PLoop) {.importc: \"uv_loop_delete\", header: \"uv.h\".}"
  }, 
  {
    "name": "default_loop", 
    "type": "skProc", 
    "code": "proc default_loop*(): PLoop {.importc: \"uv_default_loop\", header: \"uv.h\".}"
  }, 
  {
    "name": "run", 
    "type": "skProc", 
    "code": "proc run*(a2: PLoop): cint {.importc: \"uv_run\", header: \"uv.h\".}"
  }, 
  {
    "name": "addref", 
    "type": "skProc", 
    "code": "proc addref*(a2: PLoop) {.importc: \"uv_ref\", header: \"uv.h\".}"
  }, 
  {
    "name": "unref", 
    "type": "skProc", 
    "code": "proc unref*(a2: PLoop) {.importc: \"uv_unref\", header: \"uv.h\".}"
  }, 
  {
    "name": "update_time", 
    "type": "skProc", 
    "code": "proc update_time*(a2: PLoop) {.importc: \"uv_update_time\", header: \"uv.h\".}"
  }, 
  {
    "name": "now", 
    "type": "skProc", 
    "code": "proc now*(a2: PLoop): int64 {.importc: \"uv_now\", header: \"uv.h\".}"
  }, 
  {
    "name": "last_error", 
    "type": "skProc", 
    "code": "proc last_error*(a2: PLoop): TErr {.importc: \"uv_last_error\", header: \"uv.h\".}"
  }, 
  {
    "name": "strerror", 
    "type": "skProc", 
    "code": "proc strerror*(err: TErr): cstring {.importc: \"uv_strerror\", header: \"uv.h\".}"
  }, 
  {
    "name": "err_name", 
    "type": "skProc", 
    "code": "proc err_name*(err: TErr): cstring {.importc: \"uv_err_name\", header: \"uv.h\".}"
  }, 
  {
    "name": "shutdown", 
    "type": "skProc", 
    "code": "proc shutdown*(req: PShutdown; handle: PStream; cb: ShutdownProc): cint {.\u000A    importc: \"uv_shutdown\", header: \"uv.h\".}"
  }, 
  {
    "name": "is_active", 
    "type": "skProc", 
    "code": "proc is_active*(handle: PHandle): cint {.importc: \"uv_is_active\", header: \"uv.h\".}"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "code": "proc close*(handle: PHandle; close_cb: CloseProc) {.importc: \"uv_close\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "buf_init", 
    "type": "skProc", 
    "code": "proc buf_init*(base: cstring; len: csize): TBuf {.importc: \"uv_buf_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "listen", 
    "type": "skProc", 
    "code": "proc listen*(stream: PStream; backlog: cint; cb: ConnectionProc): cint {.\u000A    importc: \"uv_listen\", header: \"uv.h\".}"
  }, 
  {
    "name": "accept", 
    "type": "skProc", 
    "code": "proc accept*(server: PStream; client: PStream): cint {.importc: \"uv_accept\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "read_start", 
    "type": "skProc", 
    "code": "proc read_start*(a2: PStream; alloc_cb: AllocProc; read_cb: ReadProc): cint {.\u000A    importc: \"uv_read_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "read_start", 
    "type": "skProc", 
    "code": "proc read_start*(a2: PStream; alloc_cb: AllocProc; read_cb: ReadProc2): cint {.\u000A    importc: \"uv_read2_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "read_stop", 
    "type": "skProc", 
    "code": "proc read_stop*(a2: PStream): cint {.importc: \"uv_read_stop\", header: \"uv.h\".}"
  }, 
  {
    "name": "write", 
    "type": "skProc", 
    "code": "proc write*(req: PWrite; handle: PStream; bufs: ptr TBuf; bufcnt: cint; \u000A            cb: WriteProc): cint {.importc: \"uv_write\", header: \"uv.h\".}"
  }, 
  {
    "name": "write", 
    "type": "skProc", 
    "code": "proc write*(req: PWrite; handle: PStream; bufs: ptr TBuf; bufcnt: cint; \u000A            send_handle: PStream; cb: WriteProc): cint {.importc: \"uv_write2\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_init", 
    "type": "skProc", 
    "code": "proc tcp_init*(a2: PLoop; handle: PTcp): cint {.importc: \"uv_tcp_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_bind", 
    "type": "skProc", 
    "code": "proc tcp_bind*(handle: PTcp; a3: TSockAddrIn): cint {.importc: \"uv_tcp_bind\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_bind6", 
    "type": "skProc", 
    "code": "proc tcp_bind6*(handle: PTcp; a3: TSockAddrIn6): cint {.importc: \"uv_tcp_bind6\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_getsockname", 
    "type": "skProc", 
    "code": "proc tcp_getsockname*(handle: PTcp; name: ptr TSockAddr; namelen: var cint): cint {.\u000A    importc: \"uv_tcp_getsockname\", header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_getpeername", 
    "type": "skProc", 
    "code": "proc tcp_getpeername*(handle: PTcp; name: ptr TSockAddr; namelen: var cint): cint {.\u000A    importc: \"uv_tcp_getpeername\", header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_connect", 
    "type": "skProc", 
    "code": "proc tcp_connect*(req: PConnect; handle: PTcp; address: TSockAddrIn; \u000A                  cb: ConnectProc): cint {.importc: \"uv_tcp_connect\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tcp_connect6", 
    "type": "skProc", 
    "code": "proc tcp_connect6*(req: PConnect; handle: PTcp; address: TSockAddrIn6; \u000A                   cb: ConnectProc): cint {.importc: \"uv_tcp_connect6\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "udp_init", 
    "type": "skProc", 
    "code": "proc udp_init*(a2: PLoop; handle: PUdp): cint {.importc: \"uv_udp_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "udp_bind", 
    "type": "skProc", 
    "code": "proc udp_bind*(handle: PUdp; adr: TSockAddrIn; flags: cunsigned): cint {.\u000A    importc: \"uv_udp_bind\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_bind6", 
    "type": "skProc", 
    "code": "proc udp_bind6*(handle: PUdp; adr: TSockAddrIn6; flags: cunsigned): cint {.\u000A    importc: \"uv_udp_bind6\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_getsockname", 
    "type": "skProc", 
    "code": "proc udp_getsockname*(handle: PUdp; name: ptr TSockAddr; namelen: var cint): cint {.\u000A    importc: \"uv_udp_getsockname\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_send", 
    "type": "skProc", 
    "code": "proc udp_send*(req: PUdpSend; handle: PUdp; bufs: ptr TBuf; bufcnt: cint; \u000A               adr: TSockAddrIn; send_cb: UdpSendProc): cint {.\u000A    importc: \"uv_udp_send\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_send6", 
    "type": "skProc", 
    "code": "proc udp_send6*(req: PUdpSend; handle: PUdp; bufs: ptr TBuf; bufcnt: cint; \u000A                adr: TSockAddrIn6; send_cb: UdpSendProc): cint {.\u000A    importc: \"uv_udp_send6\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_recv_start", 
    "type": "skProc", 
    "code": "proc udp_recv_start*(handle: PUdp; alloc_cb: AllocProc; recv_cb: UdpRecvProc): cint {.\u000A    importc: \"uv_udp_recv_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "udp_recv_stop", 
    "type": "skProc", 
    "code": "proc udp_recv_stop*(handle: PUdp): cint {.importc: \"uv_udp_recv_stop\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tty_init", 
    "type": "skProc", 
    "code": "proc tty_init*(a2: PLoop; a3: pTTy; fd: TFile): cint {.importc: \"uv_tty_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tty_set_mode", 
    "type": "skProc", 
    "code": "proc tty_set_mode*(a2: pTTy; mode: cint): cint {.importc: \"uv_tty_set_mode\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "tty_get_winsize", 
    "type": "skProc", 
    "code": "proc tty_get_winsize*(a2: pTTy; width: var cint; height: var cint): cint {.\u000A    importc: \"uv_tty_get_winsize\", header: \"uv.h\".}"
  }, 
  {
    "name": "tty_reset_mode", 
    "type": "skProc", 
    "code": "proc tty_reset_mode*() {.importc: \"uv_tty_reset_mode\", header: \"uv.h\".}"
  }, 
  {
    "name": "guess_handle", 
    "type": "skProc", 
    "code": "proc guess_handle*(file: TFile): THandleType {.importc: \"uv_guess_handle\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "pipe_init", 
    "type": "skProc", 
    "code": "proc pipe_init*(a2: PLoop; handle: PPipe; ipc: int): cint {.\u000A    importc: \"uv_pipe_init\", header: \"uv.h\".}"
  }, 
  {
    "name": "pipe_open", 
    "type": "skProc", 
    "code": "proc pipe_open*(a2: PPipe; file: TFile) {.importc: \"uv_pipe_open\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "pipe_bind", 
    "type": "skProc", 
    "code": "proc pipe_bind*(handle: PPipe; name: cstring): cint {.importc: \"uv_pipe_bind\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "pipe_connect", 
    "type": "skProc", 
    "code": "proc pipe_connect*(req: PConnect; handle: PPipe; name: cstring; cb: ConnectProc): cint {.\u000A    importc: \"uv_pipe_connect\", header: \"uv.h\".}"
  }, 
  {
    "name": "prepare_init", 
    "type": "skProc", 
    "code": "proc prepare_init*(a2: PLoop; prepare: PPrepare): cint {.\u000A    importc: \"uv_prepare_init\", header: \"uv.h\".}"
  }, 
  {
    "name": "prepare_start", 
    "type": "skProc", 
    "code": "proc prepare_start*(prepare: PPrepare; cb: PrepareProc): cint {.\u000A    importc: \"uv_prepare_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "prepare_stop", 
    "type": "skProc", 
    "code": "proc prepare_stop*(prepare: PPrepare): cint {.importc: \"uv_prepare_stop\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "check_init", 
    "type": "skProc", 
    "code": "proc check_init*(a2: PLoop; check: PCheck): cint {.importc: \"uv_check_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "check_start", 
    "type": "skProc", 
    "code": "proc check_start*(check: PCheck; cb: CheckProc): cint {.\u000A    importc: \"uv_check_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "check_stop", 
    "type": "skProc", 
    "code": "proc check_stop*(check: PCheck): cint {.importc: \"uv_check_stop\", header: \"uv.h\".}"
  }, 
  {
    "name": "idle_init", 
    "type": "skProc", 
    "code": "proc idle_init*(a2: PLoop; idle: PIdle): cint {.importc: \"uv_idle_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "idle_start", 
    "type": "skProc", 
    "code": "proc idle_start*(idle: PIdle; cb: IdleProc): cint {.importc: \"uv_idle_start\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "idle_stop", 
    "type": "skProc", 
    "code": "proc idle_stop*(idle: PIdle): cint {.importc: \"uv_idle_stop\", header: \"uv.h\".}"
  }, 
  {
    "name": "async_init", 
    "type": "skProc", 
    "code": "proc async_init*(a2: PLoop; async: PAsync; async_cb: AsyncProc): cint {.\u000A    importc: \"uv_async_init\", header: \"uv.h\".}"
  }, 
  {
    "name": "async_send", 
    "type": "skProc", 
    "code": "proc async_send*(async: PAsync): cint {.importc: \"uv_async_send\", header: \"uv.h\".}"
  }, 
  {
    "name": "timer_init", 
    "type": "skProc", 
    "code": "proc timer_init*(a2: PLoop; timer: PTimer): cint {.importc: \"uv_timer_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "timer_start", 
    "type": "skProc", 
    "code": "proc timer_start*(timer: PTimer; cb: TimerProc; timeout: int64; repeat: int64): cint {.\u000A    importc: \"uv_timer_start\", header: \"uv.h\".}"
  }, 
  {
    "name": "timer_stop", 
    "type": "skProc", 
    "code": "proc timer_stop*(timer: PTimer): cint {.importc: \"uv_timer_stop\", header: \"uv.h\".}"
  }, 
  {
    "name": "timer_again", 
    "type": "skProc", 
    "code": "proc timer_again*(timer: PTimer): cint {.importc: \"uv_timer_again\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "timer_set_repeat", 
    "type": "skProc", 
    "code": "proc timer_set_repeat*(timer: PTimer; repeat: int64) {.\u000A    importc: \"uv_timer_set_repeat\", header: \"uv.h\".}"
  }, 
  {
    "name": "timer_get_repeat", 
    "type": "skProc", 
    "code": "proc timer_get_repeat*(timer: PTimer): int64 {.importc: \"uv_timer_get_repeat\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "ares_init_options", 
    "type": "skProc", 
    "code": "proc ares_init_options*(a2: PLoop; channel: PAresChannel; options: PAresOptions; \u000A                        optmask: cint): cint {.importc: \"uv_ares_init_options\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "ares_destroy", 
    "type": "skProc", 
    "code": "proc ares_destroy*(a2: PLoop; channel: PAresChannel) {.\u000A    importc: \"uv_ares_destroy\", header: \"uv.h\".}"
  }, 
  {
    "name": "getaddrinfo", 
    "type": "skProc", 
    "code": "proc getaddrinfo*(a2: PLoop; handle: PGetAddrInfo; \u000A                  getaddrinfo_cb: GetAddrInfoProc; node: cstring; \u000A                  service: cstring; hints: ptr TAddrInfo): cint {.\u000A    importc: \"uv_getaddrinfo\", header: \"uv.h\".}"
  }, 
  {
    "name": "freeaddrinfo", 
    "type": "skProc", 
    "code": "proc freeaddrinfo*(ai: ptr TAddrInfo) {.importc: \"uv_freeaddrinfo\", \u000A                                        header: \"uv.h\".}"
  }, 
  {
    "name": "spawn", 
    "type": "skProc", 
    "code": "proc spawn*(a2: PLoop; a3: PProcess; options: TProcessOptions): cint {.\u000A    importc: \"uv_spawn\", header: \"uv.h\".}"
  }, 
  {
    "name": "process_kill", 
    "type": "skProc", 
    "code": "proc process_kill*(a2: PProcess; signum: cint): cint {.\u000A    importc: \"uv_process_kill\", header: \"uv.h\".}"
  }, 
  {
    "name": "queue_work", 
    "type": "skProc", 
    "code": "proc queue_work*(loop: PLoop; req: PWork; work_cb: WorkProc; \u000A                 after_work_cb: AfterWorkProc): cint {.importc: \"uv_queue_work\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "req_cleanup", 
    "type": "skProc", 
    "code": "proc req_cleanup*(req: PFS) {.importc: \"uv_fs_req_cleanup\", header: \"uv.h\".}"
  }, 
  {
    "name": "close", 
    "type": "skProc", 
    "code": "proc close*(loop: PLoop; req: PFS; file: TFile; cb: FsProc): cint {.\u000A    importc: \"uv_fs_close\", header: \"uv.h\".}"
  }, 
  {
    "name": "open", 
    "type": "skProc", 
    "code": "proc open*(loop: PLoop; req: PFS; path: cstring; flags: cint; mode: cint; \u000A           cb: FsProc): cint {.importc: \"uv_fs_open\", header: \"uv.h\".}"
  }, 
  {
    "name": "read", 
    "type": "skProc", 
    "code": "proc read*(loop: PLoop; req: PFS; file: TFile; buf: pointer; length: csize; \u000A           offset: coff; cb: FsProc): cint {.importc: \"uv_fs_read\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "unlink", 
    "type": "skProc", 
    "code": "proc unlink*(loop: PLoop; req: PFS; path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_unlink\", header: \"uv.h\".}"
  }, 
  {
    "name": "write", 
    "type": "skProc", 
    "code": "proc write*(loop: PLoop; req: PFS; file: TFile; buf: pointer; length: csize; \u000A            offset: coff; cb: FsProc): cint {.importc: \"uv_fs_write\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "mkdir", 
    "type": "skProc", 
    "code": "proc mkdir*(loop: PLoop; req: PFS; path: cstring; mode: cint; cb: FsProc): cint {.\u000A    importc: \"uv_fs_mkdir\", header: \"uv.h\".}"
  }, 
  {
    "name": "rmdir", 
    "type": "skProc", 
    "code": "proc rmdir*(loop: PLoop; req: PFS; path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_rmdir\", header: \"uv.h\".}"
  }, 
  {
    "name": "readdir", 
    "type": "skProc", 
    "code": "proc readdir*(loop: PLoop; req: PFS; path: cstring; flags: cint; cb: FsProc): cint {.\u000A    importc: \"uv_fs_readdir\", header: \"uv.h\".}"
  }, 
  {
    "name": "stat", 
    "type": "skProc", 
    "code": "proc stat*(loop: PLoop; req: PFS; path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_stat\", header: \"uv.h\".}"
  }, 
  {
    "name": "fstat", 
    "type": "skProc", 
    "code": "proc fstat*(loop: PLoop; req: PFS; file: TFile; cb: FsProc): cint {.\u000A    importc: \"uv_fs_fstat\", header: \"uv.h\".}"
  }, 
  {
    "name": "rename", 
    "type": "skProc", 
    "code": "proc rename*(loop: PLoop; req: PFS; path: cstring; new_path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_rename\", header: \"uv.h\".}"
  }, 
  {
    "name": "fsync", 
    "type": "skProc", 
    "code": "proc fsync*(loop: PLoop; req: PFS; file: TFile; cb: FsProc): cint {.\u000A    importc: \"uv_fs_fsync\", header: \"uv.h\".}"
  }, 
  {
    "name": "fdatasync", 
    "type": "skProc", 
    "code": "proc fdatasync*(loop: PLoop; req: PFS; file: TFile; cb: FsProc): cint {.\u000A    importc: \"uv_fs_fdatasync\", header: \"uv.h\".}"
  }, 
  {
    "name": "ftruncate", 
    "type": "skProc", 
    "code": "proc ftruncate*(loop: PLoop; req: PFS; file: TFile; offset: coff; cb: FsProc): cint {.\u000A    importc: \"uv_fs_ftruncate\", header: \"uv.h\".}"
  }, 
  {
    "name": "sendfile", 
    "type": "skProc", 
    "code": "proc sendfile*(loop: PLoop; req: PFS; out_fd: TFile; in_fd: TFile; \u000A               in_offset: coff; length: csize; cb: FsProc): cint {.\u000A    importc: \"uv_fs_sendfile\", header: \"uv.h\".}"
  }, 
  {
    "name": "chmod", 
    "type": "skProc", 
    "code": "proc chmod*(loop: PLoop; req: PFS; path: cstring; mode: cint; cb: FsProc): cint {.\u000A    importc: \"uv_fs_chmod\", header: \"uv.h\".}"
  }, 
  {
    "name": "utime", 
    "type": "skProc", 
    "code": "proc utime*(loop: PLoop; req: PFS; path: cstring; atime: cdouble; \u000A            mtime: cdouble; cb: FsProc): cint {.importc: \"uv_fs_utime\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "futime", 
    "type": "skProc", 
    "code": "proc futime*(loop: PLoop; req: PFS; file: TFile; atime: cdouble; mtime: cdouble; \u000A             cb: FsProc): cint {.importc: \"uv_fs_futime\", header: \"uv.h\".}"
  }, 
  {
    "name": "lstat", 
    "type": "skProc", 
    "code": "proc lstat*(loop: PLoop; req: PFS; path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_lstat\", header: \"uv.h\".}"
  }, 
  {
    "name": "link", 
    "type": "skProc", 
    "code": "proc link*(loop: PLoop; req: PFS; path: cstring; new_path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_link\", header: \"uv.h\".}"
  }, 
  {
    "name": "symlink", 
    "type": "skProc", 
    "code": "proc symlink*(loop: PLoop; req: PFS; path: cstring; new_path: cstring; \u000A              flags: cint; cb: FsProc): cint {.importc: \"uv_fs_symlink\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "readlink", 
    "type": "skProc", 
    "code": "proc readlink*(loop: PLoop; req: PFS; path: cstring; cb: FsProc): cint {.\u000A    importc: \"uv_fs_readlink\", header: \"uv.h\".}"
  }, 
  {
    "name": "fchmod", 
    "type": "skProc", 
    "code": "proc fchmod*(loop: PLoop; req: PFS; file: TFile; mode: cint; cb: FsProc): cint {.\u000A    importc: \"uv_fs_fchmod\", header: \"uv.h\".}"
  }, 
  {
    "name": "chown", 
    "type": "skProc", 
    "code": "proc chown*(loop: PLoop; req: PFS; path: cstring; uid: cint; gid: cint; \u000A            cb: FsProc): cint {.importc: \"uv_fs_chown\", header: \"uv.h\".}"
  }, 
  {
    "name": "fchown", 
    "type": "skProc", 
    "code": "proc fchown*(loop: PLoop; req: PFS; file: TFile; uid: cint; gid: cint; \u000A             cb: FsProc): cint {.importc: \"uv_fs_fchown\", header: \"uv.h\".}"
  }, 
  {
    "name": "event_init", 
    "type": "skProc", 
    "code": "proc event_init*(loop: PLoop; handle: PFSEvent; filename: cstring; \u000A                 cb: FsEventProc): cint {.importc: \"uv_fs_event_init\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "ip4_addr", 
    "type": "skProc", 
    "code": "proc ip4_addr*(ip: cstring; port: cint): TSockAddrIn {.importc: \"uv_ip4_addr\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "ip6_addr", 
    "type": "skProc", 
    "code": "proc ip6_addr*(ip: cstring; port: cint): TSockAddrIn6 {.importc: \"uv_ip6_addr\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "ip4_name", 
    "type": "skProc", 
    "code": "proc ip4_name*(src: ptr TSockAddrIn; dst: cstring; size: csize): cint {.\u000A    importc: \"uv_ip4_name\", header: \"uv.h\".}"
  }, 
  {
    "name": "ip6_name", 
    "type": "skProc", 
    "code": "proc ip6_name*(src: ptr TSockAddrIn6; dst: cstring; size: csize): cint {.\u000A    importc: \"uv_ip6_name\", header: \"uv.h\".}"
  }, 
  {
    "name": "exepath", 
    "type": "skProc", 
    "code": "proc exepath*(buffer: cstring; size: var csize): cint {.importc: \"uv_exepath\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "hrtime", 
    "type": "skProc", 
    "code": "proc hrtime*(): uint64 {.importc: \"uv_hrtime\", header: \"uv.h\".}"
  }, 
  {
    "name": "loadavg", 
    "type": "skProc", 
    "code": "proc loadavg*(load: var array[0 .. 2, cdouble]) {.importc: \"uv_loadavg\", \u000A    header: \"uv.h\".}"
  }, 
  {
    "name": "get_free_memory", 
    "type": "skProc", 
    "code": "proc get_free_memory*(): cdouble {.importc: \"uv_get_free_memory\", header: \"uv.h\".}"
  }, 
  {
    "name": "get_total_memory", 
    "type": "skProc", 
    "code": "proc get_total_memory*(): cdouble {.importc: \"uv_get_total_memory\", \u000A                                    header: \"uv.h\".}"
  }
]