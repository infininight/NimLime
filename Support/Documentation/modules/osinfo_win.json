[
  {
    "name": "TPartitionInfo", 
    "type": "skType", 
    "code": "TPartitionInfo* = tuple[FreeSpace, TotalSpace: Tfiletime]"
  }, 
  {
    "name": "globalMemoryStatusEx", 
    "type": "skProc", 
    "code": "proc globalMemoryStatusEx*(lpBuffer: var TMEMORYSTATUSEX) {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GlobalMemoryStatusEx\".}"
  }, 
  {
    "name": "getMemoryInfo", 
    "type": "skProc", 
    "description": "Retrieves memory info", 
    "code": "proc getMemoryInfo*(): TMemoryInfo"
  }, 
  {
    "name": "getVersionEx", 
    "type": "skProc", 
    "code": "proc getVersionEx*(lpVersionInformation: var TOSVERSIONINFOEX): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetVersionExA\".}"
  }, 
  {
    "name": "getProcAddress", 
    "type": "skProc", 
    "code": "proc getProcAddress*(hModule: int; lpProcName: cstring): pointer {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetProcAddress\".}"
  }, 
  {
    "name": "getModuleHandleA", 
    "type": "skProc", 
    "code": "proc getModuleHandleA*(lpModuleName: cstring): int {.stdcall, \u000A    dynlib: \"kernel32\", importc: \"GetModuleHandleA\".}"
  }, 
  {
    "name": "getVersionInfo", 
    "type": "skProc", 
    "description": "Retrieves operating system info", 
    "code": "proc getVersionInfo*(): TVersionInfo"
  }, 
  {
    "name": "getProductInfo", 
    "type": "skProc", 
    "description": "Retrieves Windows' ProductInfo, this function only works in Vista and 7", 
    "code": "proc getProductInfo*(majorVersion, minorVersion, SPMajorVersion, SPMinorVersion: int): int"
  }, 
  {
    "name": "getSystemInfo", 
    "type": "skProc", 
    "code": "proc getSystemInfo*(lpSystemInfo: LPSYSTEM_INFO) {.stdcall, dynlib: \"kernel32\", \u000A    importc: \"GetSystemInfo\".}"
  }, 
  {
    "name": "getSystemInfo", 
    "type": "skProc", 
    "description": "Returns the SystemInfo", 
    "code": "proc getSystemInfo*(): TSYSTEM_INFO"
  }, 
  {
    "name": "getSystemMetrics", 
    "type": "skProc", 
    "code": "proc getSystemMetrics*(nIndex: int32): int32 {.stdcall, dynlib: \"user32\", \u000A    importc: \"GetSystemMetrics\".}"
  }, 
  {
    "name": "`$`", 
    "type": "skProc", 
    "description": "Turns a VersionInfo object, into a string", 
    "code": "proc `$`*(osvi: TVersionInfo): string"
  }, 
  {
    "name": "getFileSize", 
    "type": "skProc", 
    "code": "proc getFileSize*(file: string): BiggestInt"
  }, 
  {
    "name": "getDiskFreeSpaceEx", 
    "type": "skProc", 
    "code": "proc getDiskFreeSpaceEx*(lpDirectoryName: cstring; lpFreeBytesAvailableToCaller, \u000A    lpTotalNumberOfBytes, lpTotalNumberOfFreeBytes: var TFiletime): WINBOOL {.\u000A    stdcall, dynlib: \"kernel32\", importc: \"GetDiskFreeSpaceExA\".}"
  }, 
  {
    "name": "getPartitionInfo", 
    "type": "skProc", 
    "description": "Retrieves partition info, for example <tt class=\"docutils literal\"><span class=\"pre\">partition</span></tt> may be <tt class=\"docutils literal\"><span class=\"pre\">&quot;C:\\&quot;</span></tt>", 
    "code": "proc getPartitionInfo*(partition: string): TPartitionInfo"
  }
]